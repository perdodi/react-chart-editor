{"version":3,"sources":["../src/PlotlyEditor.js"],"names":["PlotlyEditor","props","state","graphDiv","PlotComponent","plotly","handleRender","bind","fig","setState","onRender","data","layout","_transitionData","_frames","hideControls","dataSources","dataSourceOptions","onUpdate","advancedTraceTypeSelector","locale","traceTypesConfig","dictionaries","showFieldTooltips","srcConverters","makeDefaultTrace","glByDefault","Boolean","config","mapboxAccessToken","fontOptions","chartHelp","customConfig","children","width","height","frames","useResizeHandler","debug","divId","Component","propTypes","PropTypes","any","object","array","func","bool","string","shape","toSrc","isRequired","fromSrc","defaultProps","DEFAULT_FONTS"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport createPlotComponent from 'react-plotly.js/factory';\nimport EditorControls from './EditorControls';\nimport PropTypes from 'prop-types';\nimport {DEFAULT_FONTS} from 'lib/constants';\n\nclass PlotlyEditor extends Component {\n  constructor(props) {\n    super();\n    this.state = {graphDiv: {}};\n    this.PlotComponent = createPlotComponent(props.plotly);\n    this.handleRender = this.handleRender.bind(this);\n  }\n\n  handleRender(fig, graphDiv) {\n    this.setState({graphDiv});\n    if (this.props.onRender) {\n      this.props.onRender(graphDiv.data, graphDiv.layout, graphDiv._transitionData._frames);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"plotly_editor\">\n        {!this.props.hideControls && (\n          <EditorControls\n            graphDiv={this.state.graphDiv}\n            dataSources={this.props.dataSources}\n            dataSourceOptions={this.props.dataSourceOptions}\n            plotly={this.props.plotly}\n            onUpdate={this.props.onUpdate}\n            advancedTraceTypeSelector={this.props.advancedTraceTypeSelector}\n            locale={this.props.locale}\n            traceTypesConfig={this.props.traceTypesConfig}\n            dictionaries={this.props.dictionaries}\n            showFieldTooltips={this.props.showFieldTooltips}\n            srcConverters={this.props.srcConverters}\n            makeDefaultTrace={this.props.makeDefaultTrace}\n            glByDefault={this.props.glByDefault}\n            mapBoxAccess={Boolean(this.props.config && this.props.config.mapboxAccessToken)}\n            fontOptions={this.props.fontOptions}\n            chartHelp={this.props.chartHelp}\n            customConfig={this.props.customConfig}\n          >\n            {this.props.children}\n          </EditorControls>\n        )}\n        <div className=\"plotly_editor_plot\" style={{width: '100%', height: '100%'}}>\n          <this.PlotComponent\n            data={this.props.data}\n            layout={this.props.layout}\n            frames={this.props.frames}\n            config={this.props.config}\n            useResizeHandler={this.props.useResizeHandler}\n            debug={this.props.debug}\n            onInitialized={this.handleRender}\n            onUpdate={this.handleRender}\n            style={{width: '100%', height: '100%'}}\n            divId={this.props.divId}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nPlotlyEditor.propTypes = {\n  children: PropTypes.any,\n  layout: PropTypes.object,\n  data: PropTypes.array,\n  config: PropTypes.object,\n  dataSourceOptions: PropTypes.array,\n  dataSources: PropTypes.object,\n  frames: PropTypes.array,\n  onUpdate: PropTypes.func,\n  onRender: PropTypes.func,\n  plotly: PropTypes.object,\n  useResizeHandler: PropTypes.bool,\n  debug: PropTypes.bool,\n  advancedTraceTypeSelector: PropTypes.bool,\n  locale: PropTypes.string,\n  traceTypesConfig: PropTypes.object,\n  dictionaries: PropTypes.object,\n  divId: PropTypes.string,\n  hideControls: PropTypes.bool,\n  showFieldTooltips: PropTypes.bool,\n  srcConverters: PropTypes.shape({\n    toSrc: PropTypes.func.isRequired,\n    fromSrc: PropTypes.func.isRequired,\n  }),\n  makeDefaultTrace: PropTypes.func,\n  glByDefault: PropTypes.bool,\n  fontOptions: PropTypes.array,\n  chartHelp: PropTypes.object,\n  customConfig: PropTypes.object,\n};\n\nPlotlyEditor.defaultProps = {\n  hideControls: false,\n  showFieldTooltips: false,\n  fontOptions: DEFAULT_FONTS,\n};\n\nexport default PlotlyEditor;\n"],"file":"PlotlyEditor.js"}