{"version":3,"sources":["../../src/lib/test-utils.js"],"names":["adapter","Adapter","fixtures","scatter","config","applyConfig","dataSources","x1","y1","y2","dataSourceOptions","label","value","graphDiv","data","xsrc","ysrc","name","type","yaxis","layout","title","yaxis2","titlefont","color","tickfont","overlaying","side","area","mode","stackgroup","pie","labelssrc","valuessrc","deref","setupGraphDiv","customConfig","mockMissingSvgApis","p","document","createElementNS","proto","Object","getPrototypeOf","getTotalLength","getPointAtLength","x","y","newGraphDiv","window","createElement","id","figure","plotly","plotlyCartesian","gd","newPlot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,uBAAU;AAACA,EAAAA,OAAO,EAAE,IAAIC,2BAAJ;AAAV,CAAV;AAEA;;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,OADe,mBACPC,MADO,EACC;AACd,WAAOC,WAAW,CAACD,MAAD,EAAS;AACzBE,MAAAA,WAAW,EAAE;AACXC,QAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADO;AAEXC,QAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFO;AAGXC,QAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAHO,OADY;AAMzBC,MAAAA,iBAAiB,EAAE,CACjB;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADiB,EAEjB;AAACD,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAFiB,EAGjB;AAACD,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAHiB,CANM;AAWzBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,CACJ;AACEC,UAAAA,IAAI,EAAE,IADR;AAEEC,UAAAA,IAAI,EAAE,IAFR;AAGEC,UAAAA,IAAI,EAAE,YAHR;AAIEC,UAAAA,IAAI,EAAE;AAJR,SADI,EAOJ;AACEH,UAAAA,IAAI,EAAE,IADR;AAEEC,UAAAA,IAAI,EAAE,IAFR;AAGEC,UAAAA,IAAI,EAAE,aAHR;AAIEE,UAAAA,KAAK,EAAE,IAJT;AAKED,UAAAA,IAAI,EAAE;AALR,SAPI,CADE;AAgBRE,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,uBADD;AAENF,UAAAA,KAAK,EAAE,EAFD;AAGNG,UAAAA,MAAM,EAAE;AACND,YAAAA,KAAK,EAAE,cADD;AAENE,YAAAA,SAAS,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR,aAFL;AAGNC,YAAAA,QAAQ,EAAE;AAACD,cAAAA,KAAK,EAAE;AAAR,aAHJ;AAINE,YAAAA,UAAU,EAAE,GAJN;AAKNC,YAAAA,IAAI,EAAE;AALA;AAHF;AAhBA;AAXe,KAAT,CAAlB;AAwCD,GA1Cc;AA4CfC,EAAAA,IA5Ce,gBA4CVxB,MA5CU,EA4CF;AACX,WAAOC,WAAW,CAACD,MAAD,EAAS;AACzBE,MAAAA,WAAW,EAAE;AACXC,QAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADO;AAEXC,QAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAFO,OADY;AAKzBE,MAAAA,iBAAiB,EAAE,CACjB;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADiB,EAEjB;AAACD,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAFiB,CALM;AASzBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,CACJ;AACEI,UAAAA,IAAI,EAAE,SADR;AAEEW,UAAAA,IAAI,EAAE,eAFR;AAGEC,UAAAA,UAAU,EAAE,CAHd;AAIEf,UAAAA,IAAI,EAAE,IAJR;AAKEC,UAAAA,IAAI,EAAE;AALR,SADI,CADE;AAURI,QAAAA,MAAM,EAAE;AAVA;AATe,KAAT,CAAlB;AAsBD,GAnEc;AAqEfW,EAAAA,GArEe,eAqEX3B,MArEW,EAqEH;AACV,WAAOC,WAAW,CAACD,MAAD,EAAS;AACzBE,MAAAA,WAAW,EAAE;AACXC,QAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADO;AAEXC,QAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAFO,OADY;AAKzBE,MAAAA,iBAAiB,EAAE,CACjB;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADiB,EAEjB;AAACD,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAFiB,CALM;AASzBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,CAAC;AAACI,UAAAA,IAAI,EAAE,KAAP;AAAcW,UAAAA,IAAI,EAAE,SAApB;AAA+BG,UAAAA,SAAS,EAAE,IAA1C;AAAgDC,UAAAA,SAAS,EAAE;AAA3D,SAAD,CADE;AAERb,QAAAA,MAAM,EAAE;AAFA;AATe,KAAT,CAAlB;AAcD;AApFc,CAAjB;;;AAuFA,SAASf,WAAT,GAA8F;AAAA,MAAzED,MAAyE,uEAAhE,EAAgE;;AAAA;AAAA,2BAA3DS,QAA2D;AAAA,MAAhDC,IAAgD,iBAAhDA,IAAgD;AAAA,MAA1CM,MAA0C,iBAA1CA,MAA0C;AAAA,MAAjCV,iBAAiC,QAAjCA,iBAAiC;AAAA,MAAdJ,WAAc,QAAdA,WAAc;;AAC5F,MAAIF,MAAM,CAACgB,MAAX,EAAmB;AACjB,4BAAWA,MAAX,EAAmBhB,MAAM,CAACgB,MAA1B;AACD;;AACD,MAAIhB,MAAM,CAACU,IAAX,EAAiB;AACf,4BAAWA,IAAX,EAAiBV,MAAM,CAACU,IAAxB;AACD;;AACD,MAAIV,MAAM,CAAC8B,KAAP,KAAiB,KAArB,EAA4B;AAC1B,0BAAYpB,IAAZ,EAAkBR,WAAlB;AACD,GAT2F,CAW5F;;;AACA,MAAMO,QAAQ,GAAGsB,aAAa,CAAC;AAACrB,IAAAA,IAAI,EAAJA,IAAD;AAAOM,IAAAA,MAAM,EAANA;AAAP,GAAD,CAA9B;AAEA,SAAO;AAACd,IAAAA,WAAW,EAAXA,WAAD;AAAcI,IAAAA,iBAAiB,EAAjBA,iBAAd;AAAiCG,IAAAA,QAAQ,EAARA,QAAjC;AAA2CuB,IAAAA,YAAY,EAAEhC,MAAM,CAACgC,YAAP,IAAuB;AAAhF,GAAP;AACD;AAED;;;;;;;;AAMA,SAASC,kBAAT,GAA8B;AAC5B,MAAMC,CAAC,GAAGC,QAAQ,CAACC,eAAT,CAAyB,4BAAzB,EAAuD,MAAvD,CAAV;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBL,CAAtB,CAAd;;AACA,MAAI,OAAOG,KAAK,CAACG,cAAb,KAAgC,UAApC,EAAgD;AAC9CH,IAAAA,KAAK,CAACG,cAAN,GAAuB;AAAA,aAAM,GAAN;AAAA,KAAvB;AACD;;AACD,MAAI,OAAOH,KAAK,CAACI,gBAAb,KAAkC,UAAtC,EAAkD;AAChDJ,IAAAA,KAAK,CAACI,gBAAN,GAAyB;AAAA,aAAO;AAACC,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE;AAAV,OAAP;AAAA,KAAzB;AACD;AACF;;AAED,SAASC,WAAT,GAAuB;AACrB,MAAMnC,QAAQ,GAAGoC,MAAM,CAACV,QAAP,CAAgBW,aAAhB,CAA8B,KAA9B,CAAjB;AACArC,EAAAA,QAAQ,CAACsC,EAAT,GAAc,UAAd;AAEA,SAAOtC,QAAP;AACD;;AAED,SAASsB,aAAT,CAAuBiB,MAAvB,EAAyD;AAAA,MAA1BC,MAA0B,uEAAjBC,wBAAiB;AACvD,MAAMC,EAAE,GAAGP,WAAW,EAAtB;AAEAX,EAAAA,kBAAkB;AAElBgB,EAAAA,MAAM,CAACG,OAAP,CAAeD,EAAf,EAAmBH,MAAnB;AACA,SAAOG,EAAP;AACD","sourcesContent":["import plotlyCartesian from 'plotly.js/dist/plotly-cartesian';\nimport {extendDeep} from 'plotly.js/src/lib/extend';\nimport EditorControls from '../EditorControls';\nimport {configure, mount, shallow} from 'enzyme';\nimport {dereference} from '../lib';\nimport Adapter from 'enzyme-adapter-react-16';\n\nconfigure({adapter: new Adapter()});\n\n/* eslint-disable no-magic-numbers */\n\nconst fixtures = {\n  scatter(config) {\n    return applyConfig(config, {\n      dataSources: {\n        x1: [1, 2, 3],\n        y1: [2, 3, 4],\n        y2: [20, 30, 40],\n      },\n      dataSourceOptions: [\n        {label: 'xCol', value: 'x1'},\n        {label: 'yCol', value: 'y1'},\n        {label: 'yCol2', value: 'y2'},\n      ],\n      graphDiv: {\n        data: [\n          {\n            xsrc: 'x1',\n            ysrc: 'y1',\n            name: 'yaxis data',\n            type: 'scatter',\n          },\n          {\n            xsrc: 'x1',\n            ysrc: 'y2',\n            name: 'yaxis2 data',\n            yaxis: 'y2',\n            type: 'scatter',\n          },\n        ],\n        layout: {\n          title: 'Double Y Axis Example',\n          yaxis: {},\n          yaxis2: {\n            title: 'yaxis2 title',\n            titlefont: {color: 'rgb(148, 103, 189)'},\n            tickfont: {color: 'rgb(148, 103, 189)'},\n            overlaying: 'y',\n            side: 'right',\n          },\n        },\n      },\n    });\n  },\n\n  area(config) {\n    return applyConfig(config, {\n      dataSources: {\n        x1: [1, 2, 3],\n        y1: [2, 3, 4],\n      },\n      dataSourceOptions: [\n        {label: 'xCol', value: 'x1'},\n        {label: 'yCol', value: 'y1'},\n      ],\n      graphDiv: {\n        data: [\n          {\n            type: 'scatter',\n            mode: 'markers+lines',\n            stackgroup: 1,\n            xsrc: 'x1',\n            ysrc: 'y1',\n          },\n        ],\n        layout: {},\n      },\n    });\n  },\n\n  pie(config) {\n    return applyConfig(config, {\n      dataSources: {\n        x1: [1, 2, 3],\n        y1: [2, 3, 4],\n      },\n      dataSourceOptions: [\n        {label: 'xCol', value: 'x1'},\n        {label: 'yCol', value: 'y1'},\n      ],\n      graphDiv: {\n        data: [{type: 'pie', mode: 'markers', labelssrc: 'x1', valuessrc: 'y1'}],\n        layout: {},\n      },\n    });\n  },\n};\n\nfunction applyConfig(config = {}, {graphDiv: {data, layout}, dataSourceOptions, dataSources}) {\n  if (config.layout) {\n    extendDeep(layout, config.layout);\n  }\n  if (config.data) {\n    extendDeep(data, config.data);\n  }\n  if (config.deref !== false) {\n    dereference(data, dataSources);\n  }\n\n  // replace simple graphDiv with properly mocked GD including fullData/fullLayout\n  const graphDiv = setupGraphDiv({data, layout});\n\n  return {dataSources, dataSourceOptions, graphDiv, customConfig: config.customConfig || {}};\n}\n\n/*\n * JSDOM does not implement full SVG spec. Mock out necessary methods here.\n * https://github.com/tmpvar/jsdom/issues/1330\n * Hardcoded return values have been \"good enough\" for now but feel free to\n * extend the API if necessary.\n */\nfunction mockMissingSvgApis() {\n  const p = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  const proto = Object.getPrototypeOf(p);\n  if (typeof proto.getTotalLength !== 'function') {\n    proto.getTotalLength = () => 100;\n  }\n  if (typeof proto.getPointAtLength !== 'function') {\n    proto.getPointAtLength = () => ({x: 0, y: 0});\n  }\n}\n\nfunction newGraphDiv() {\n  const graphDiv = window.document.createElement('div');\n  graphDiv.id = 'graphDiv';\n\n  return graphDiv;\n}\n\nfunction setupGraphDiv(figure, plotly = plotlyCartesian) {\n  const gd = newGraphDiv();\n\n  mockMissingSvgApis();\n\n  plotly.newPlot(gd, figure);\n  return gd;\n}\n\nexport {\n  fixtures,\n  plotlyCartesian as plotly,\n  EditorControls as TestEditor,\n  mount,\n  shallow,\n  setupGraphDiv,\n};\n"],"file":"test-utils.js"}