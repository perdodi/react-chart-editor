{"version":3,"sources":["../../src/lib/connectAnnotationToLayout.js"],"names":["connectAnnotationToLayout","WrappedComponent","AnnotationConnectedComponent","props","context","deleteAnnotation","bind","updateAnnotation","moveAnnotation","setLocals","nextProps","nextContext","annotationIndex","container","fullContainer","annotations","fullAnnotations","getValObject","attr","updateContainer","deleteContainer","moveContainer","update","newUpdate","key","newkey","onUpdate","type","EDITOR_ACTIONS","DELETE_ANNOTATION","payload","direction","desiredIndex","MOVE_TO","fromIndex","toIndex","path","Component","displayName","propTypes","PropTypes","number","isRequired","contextTypes","object","data","array","func","childContextTypes","plotly_editor_traits"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {getDisplayName} from '../lib';\nimport {EDITOR_ACTIONS} from './constants';\n\nexport default function connectAnnotationToLayout(WrappedComponent) {\n  class AnnotationConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.deleteAnnotation = this.deleteAnnotation.bind(this);\n      this.updateAnnotation = this.updateAnnotation.bind(this);\n      this.moveAnnotation = this.moveAnnotation.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {annotationIndex} = props;\n      const {container, fullContainer} = context;\n\n      const annotations = container.annotations || [];\n      const fullAnnotations = fullContainer.annotations || [];\n      this.container = annotations[annotationIndex];\n      this.fullContainer = fullAnnotations[annotationIndex];\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject ? null : this.context.getValObject(`annotations[].${attr}`),\n        updateContainer: this.updateAnnotation,\n        deleteContainer: this.deleteAnnotation,\n        container: this.container,\n        fullContainer: this.fullContainer,\n        moveContainer: this.moveAnnotation,\n      };\n    }\n\n    updateAnnotation(update) {\n      const newUpdate = {};\n      const {annotationIndex} = this.props;\n      for (const key in update) {\n        const newkey = `annotations[${annotationIndex}].${key}`;\n        newUpdate[newkey] = update[key];\n      }\n      this.context.updateContainer(newUpdate);\n    }\n\n    deleteAnnotation() {\n      if (this.context.onUpdate) {\n        this.context.onUpdate({\n          type: EDITOR_ACTIONS.DELETE_ANNOTATION,\n          payload: {annotationIndex: this.props.annotationIndex},\n        });\n      }\n    }\n\n    moveAnnotation(direction) {\n      if (this.context.onUpdate) {\n        const annotationIndex = this.props.annotationIndex;\n        const desiredIndex = direction === 'up' ? annotationIndex - 1 : annotationIndex + 1;\n        this.context.onUpdate({\n          type: EDITOR_ACTIONS.MOVE_TO,\n          payload: {\n            fromIndex: annotationIndex,\n            toIndex: desiredIndex,\n            path: 'layout.annotations',\n          },\n        });\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  AnnotationConnectedComponent.displayName = `AnnotationConnected${getDisplayName(\n    WrappedComponent\n  )}`;\n\n  AnnotationConnectedComponent.propTypes = {\n    annotationIndex: PropTypes.number.isRequired,\n  };\n\n  AnnotationConnectedComponent.contextTypes = {\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    data: PropTypes.array,\n    onUpdate: PropTypes.func,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  AnnotationConnectedComponent.childContextTypes = {\n    updateContainer: PropTypes.func,\n    deleteContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    getValObject: PropTypes.func,\n    moveContainer: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  AnnotationConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return AnnotationConnectedComponent;\n}\n"],"file":"connectAnnotationToLayout.js"}