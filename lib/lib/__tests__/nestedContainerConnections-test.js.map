{"version":3,"sources":["../../../src/lib/__tests__/nestedContainerConnections-test.js"],"names":["describe","it","beforeUpdateLayout","jest","fn","fixtureProps","fixtures","scatter","layout","xaxis","range","LayoutAxesNumeric","Numeric","find","NumericInput","simulate","expect","toBeCalled","payload","mock","calls","toEqual","update","width","TraceLayoutNumeric","DeeplyConnectedNumeric","modifyPlotProps","props","context","plotProps","connectToContainerModifiedPlotProp","wrapper","length","toBe","TracePanel","PlotlyPanel","MAXWIDTH","LayoutSection","PlotlySection","ModifiedNumeric","max","prop"],"mappings":"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","sourcesContent":["import NumericInput from '../../components/widgets/NumericInput';\nimport React from 'react';\nimport {Numeric, PlotlySection, PlotlyPanel} from '../../components';\nimport {TestEditor, fixtures, mount} from '../test-utils';\nimport {connectAxesToLayout, connectLayoutToPlot, connectToContainer, connectTraceToPlot} from '..';\n\ndescribe('Plot Connection', () => {\n  it('can connect Field directly with full connection pipeline', () => {\n    const beforeUpdateLayout = jest.fn();\n    const fixtureProps = fixtures.scatter({layout: {xaxis: {range: [0, 10]}}});\n    const LayoutAxesNumeric = connectLayoutToPlot(connectAxesToLayout(connectToContainer(Numeric)));\n    mount(\n      <TestEditor {...{...fixtureProps, beforeUpdateLayout}}>\n        <LayoutAxesNumeric label=\"Min\" attr=\"range[0]\" />\n      </TestEditor>\n    )\n      .find('[attr=\"range[0]\"]')\n      .find(NumericInput)\n      .find('.js-numeric-increase')\n      .simulate('click');\n\n    expect(beforeUpdateLayout).toBeCalled();\n    const payload = beforeUpdateLayout.mock.calls[0][0];\n    expect(payload).toEqual({\n      update: {'xaxis.range[0]': 1},\n    });\n  });\n\n  it('can connect to layout when connected within trace context', () => {\n    const beforeUpdateLayout = jest.fn();\n    const fixtureProps = fixtures.scatter({layout: {width: 10}});\n    const TraceLayoutNumeric = connectTraceToPlot(connectLayoutToPlot(connectToContainer(Numeric)));\n    mount(\n      <TestEditor {...{...fixtureProps, beforeUpdateLayout}}>\n        <TraceLayoutNumeric traceIndexes={[0]} label=\"Width\" attr=\"width\" />\n      </TestEditor>\n    )\n      .find('[attr=\"width\"]')\n      .find(NumericInput)\n      .find('.js-numeric-increase')\n      .simulate('click');\n\n    expect(beforeUpdateLayout).toBeCalled();\n    const payload = beforeUpdateLayout.mock.calls[0][0];\n    expect(payload).toEqual({update: {width: 11}});\n  });\n\n  // see https://github.com/plotly/react-chart-editor/issues/58#issuecomment-345492794\n  it(\"can't find correct Container when PlotlySection divides Trace and Layout\", () => {\n    const fixtureProps = fixtures.scatter({layout: {width: 10}});\n    const DeeplyConnectedNumeric = connectTraceToPlot(\n      connectLayoutToPlot(\n        connectToContainer(Numeric, {\n          modifyPlotProps: (props, context, plotProps) => {\n            plotProps.connectToContainerModifiedPlotProp = true;\n          },\n        })\n      )\n    );\n\n    const wrapper = mount(\n      <TestEditor {...{...fixtureProps}}>\n        <PlotlySection name=\"Canvas\">\n          <DeeplyConnectedNumeric traceIndexes={[0]} label=\"Width\" attr=\"width\" />\n        </PlotlySection>\n      </TestEditor>\n    )\n      .find('[attr=\"width\"]')\n      .find(Numeric);\n\n    // It is 0 because PlotlySection is passing _its_ context to unpackPlotProps.\n    // The context of PlotlySection is Trace not layout and width isn't defined\n    // in Trace. See next test for workaround.\n    expect(wrapper.length).toBe(0);\n  });\n\n  it('can modify plotProps with <Trace><PlotlySection><LayoutComp>', () => {\n    const fixtureProps = fixtures.scatter({layout: {width: 10}});\n    const TracePanel = connectTraceToPlot(PlotlyPanel);\n\n    const MAXWIDTH = 1000;\n    const LayoutSection = connectLayoutToPlot(PlotlySection);\n    const ModifiedNumeric = connectToContainer(Numeric, {\n      modifyPlotProps: (props, context, plotProps) => {\n        plotProps.max = MAXWIDTH;\n      },\n    });\n\n    const wrapper = mount(\n      <TestEditor {...{...fixtureProps}}>\n        <TracePanel traceIndexes={[0]}>\n          <LayoutSection name=\"Canvas\">\n            <ModifiedNumeric traceIndexes={[0]} label=\"Width\" attr=\"width\" />\n          </LayoutSection>\n        </TracePanel>\n      </TestEditor>\n    )\n      .find('[attr=\"width\"]')\n      .find(NumericInput);\n\n    expect(wrapper.prop('max')).toBe(MAXWIDTH);\n  });\n});\n"],"file":"nestedContainerConnections-test.js"}