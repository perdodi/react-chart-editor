{"version":3,"sources":["../../../src/lib/__tests__/dereference-test.js"],"names":["describe","it","container","y","ysrc","xsrc","x1","expect","toBeUndefined","Array","isArray","x","toBe","transforms","zsrc","type","z1","z2","z","customParsing","src","split","toSrc","metasrc","xaxis","ticktext","x2","meta"],"mappings":"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","sourcesContent":["import dereference from '../dereference';\n\n/* eslint-disable no-magic-numbers */\ndescribe('dereference', () => {\n  it('does not search into data arrays', () => {\n    const container = [{y: [{ysrc: 'x1'}], xsrc: 'x1'}];\n    dereference(container, {x1: [1, 2, 3]});\n\n    expect(container[0].y[0].y).toBeUndefined();\n    expect(Array.isArray(container[0].x)).toBe(true);\n  });\n\n  it('does searches into transform arrays', () => {\n    const container = [{transforms: [{ysrc: 'x1'}], xsrc: 'x1'}];\n    dereference(container, {x1: [1, 2, 3]});\n\n    expect(Array.isArray(container[0].transforms[0].y)).toBe(true);\n    expect(Array.isArray(container[0].x)).toBe(true);\n  });\n\n  it('handles multidimensional srcs correctly', () => {\n    const container = [{zsrc: ['z1', 'z2'], type: 'heatmap'}];\n    dereference(container, {z1: [1, 2, 3], z2: [2, 2, 2]});\n\n    // contents should have been transposed\n    expect(Array.isArray(container[0].z[0])).toBe(true);\n    expect(Array.isArray(container[0].z[1])).toBe(true);\n    expect(Array.isArray(container[0].z[2])).toBe(true);\n\n    expect(container[0].z[0][0]).toBe(1);\n    expect(container[0].z[0][1]).toBe(2);\n    expect(container[0].z[1][0]).toBe(2);\n    expect(container[0].z[1][1]).toBe(2);\n    expect(container[0].z[2][0]).toBe(3);\n    expect(container[0].z[2][1]).toBe(2);\n  });\n\n  it('handles ambiguous 2d srcs correctly', () => {\n    const container = [{zsrc: ['z1'], type: 'heatmap'}];\n    dereference(container, {z1: [1, 2, 3]});\n\n    // contents should have been transposed\n    expect(Array.isArray(container[0].z[0])).toBe(true);\n    expect(Array.isArray(container[0].z[1])).toBe(true);\n    expect(Array.isArray(container[0].z[2])).toBe(true);\n\n    expect(container[0].z[0][0]).toBe(1);\n    expect(container[0].z[1][0]).toBe(2);\n    expect(container[0].z[2][0]).toBe(3);\n  });\n\n  it('uses custom function if provided in config', () => {\n    const customParsing = src => src.split(',');\n    const container = [{zsrc: 'z1,z2', type: 'heatmap'}];\n    dereference(container, {z1: [1, 2, 3], z2: [2, 2, 2]}, {toSrc: customParsing});\n\n    // contents should have been transposed\n    expect(Array.isArray(container[0].z[0])).toBe(true);\n    expect(Array.isArray(container[0].z[1])).toBe(true);\n    expect(Array.isArray(container[0].z[2])).toBe(true);\n\n    expect(container[0].z[0][0]).toBe(1);\n    expect(container[0].z[0][1]).toBe(2);\n    expect(container[0].z[1][0]).toBe(2);\n    expect(container[0].z[1][1]).toBe(2);\n    expect(container[0].z[2][0]).toBe(3);\n    expect(container[0].z[2][1]).toBe(2);\n  });\n\n  // TO DO: dereference all of layout\n  it('can dereference top level layout keys', () => {\n    const container = {metasrc: 'x1', xaxis: {ticktext: 'x2'}};\n    dereference(container, {x1: ['yes!'], x2: ['some', 'text']});\n\n    expect(Array.isArray(container.meta)).toBe(true);\n    expect(container.meta[0]).toBe('yes!');\n  });\n});\n"],"file":"dereference-test.js"}