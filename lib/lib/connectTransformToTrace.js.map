{"version":3,"sources":["../../src/lib/connectTransformToTrace.js"],"names":["connectTransformToTrace","WrappedComponent","TransformConnectedComponent","props","context","deleteTransform","bind","updateTransform","setLocals","nextProps","nextContext","transformIndex","container","fullContainer","transforms","fullTransforms","getValObject","attr","updateContainer","deleteContainer","update","newUpdate","key","newkey","onUpdate","type","EDITOR_ACTIONS","DELETE_TRANSFORM","payload","traceIndex","index","Component","displayName","propTypes","PropTypes","number","isRequired","contextTypes","object","data","array","func","childContextTypes","plotly_editor_traits"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {getDisplayName} from '../lib';\nimport {EDITOR_ACTIONS} from './constants';\n\nexport default function connectTransformToTrace(WrappedComponent) {\n  class TransformConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.deleteTransform = this.deleteTransform.bind(this);\n      this.updateTransform = this.updateTransform.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {transformIndex} = props;\n      const {container, fullContainer} = context;\n\n      const transforms = container.transforms || [];\n      const fullTransforms = fullContainer.transforms || [];\n      this.container = transforms[transformIndex];\n      this.fullContainer = fullTransforms[transformIndex];\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject ? null : this.context.getValObject(`transforms[].${attr}`),\n        updateContainer: this.updateTransform,\n        deleteContainer: this.deleteTransform,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    updateTransform(update) {\n      const newUpdate = {};\n      const {transformIndex} = this.props;\n      for (const key in update) {\n        const newkey = `transforms[${transformIndex}].${key}`;\n        newUpdate[newkey] = update[key];\n      }\n      this.context.updateContainer(newUpdate);\n    }\n\n    deleteTransform() {\n      if (this.context.onUpdate) {\n        this.context.onUpdate({\n          type: EDITOR_ACTIONS.DELETE_TRANSFORM,\n          payload: {\n            traceIndex: this.context.fullContainer.index,\n            transformIndex: this.props.transformIndex,\n          },\n        });\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  TransformConnectedComponent.displayName = `TransformConnected${getDisplayName(WrappedComponent)}`;\n\n  TransformConnectedComponent.propTypes = {\n    transformIndex: PropTypes.number.isRequired,\n  };\n\n  TransformConnectedComponent.contextTypes = {\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    data: PropTypes.array,\n    onUpdate: PropTypes.func,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  TransformConnectedComponent.childContextTypes = {\n    updateContainer: PropTypes.func,\n    deleteContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    getValObject: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  TransformConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return TransformConnectedComponent;\n}\n"],"file":"connectTransformToTrace.js"}