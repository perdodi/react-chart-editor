{"version":3,"sources":["../../src/lib/connectAxesToLayout.js"],"names":["computeAxesOptions","axes","props","context","_","localize","filteredAxes","axisFilter","filter","options","i","length","ax","label","_name","split","value","_subplot","includes","trim","axisGroup","_axisGroup","title","concat","connectAxesToLayout","WrappedComponent","AxesConnectedComponent","fullContainer","axesOptions","defaultAxesTarget","state","axesTarget","axesTargetHandler","bind","updateContainer","setLocals","nextProps","nextState","nextContext","container","multiValuedContainer","slice","forEach","Object","keys","key","searchArrays","defaultContainer","get","getValObject","attr","setState","update","newUpdate","j","subplot","axesKey","newkey","Component","displayName","contextTypes","PropTypes","object","isRequired","func","childContextTypes","array","string","plotly_editor_traits"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport {deepCopyPublic, setMultiValuedContainer} from './multiValues';\nimport {capitalize, getAllAxes, getDisplayName, getAxisTitle} from '../lib';\n\nfunction computeAxesOptions(axes, props, context) {\n  const _ = context.localize;\n  let filteredAxes = axes;\n  if (props.axisFilter) {\n    filteredAxes = axes.filter(props.axisFilter);\n  }\n\n  const options = [];\n  for (let i = 0; i < filteredAxes.length; i++) {\n    const ax = filteredAxes[i];\n    const label = capitalize(ax._name.split('axis')[0]);\n    const value = (ax._subplot && !ax._subplot.includes('xaxis') && !ax._subplot.includes('yaxis')\n      ? ax._subplot + '.' + ax._name\n      : ax._subplot\n    ).trim();\n\n    options[i] = {\n      label,\n      value,\n      axisGroup: ax._axisGroup,\n      title: getAxisTitle(ax),\n    };\n  }\n\n  return options.length > 1 ? [{label: _('All'), value: 'allaxes'}].concat(options) : options;\n}\n\nexport default function connectAxesToLayout(WrappedComponent) {\n  class AxesConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.axes = getAllAxes(context.fullContainer);\n      this.axesOptions = computeAxesOptions(this.axes, props, context);\n\n      // this.axesOptions can be an empty array when we have a filter on an AxesFold\n      // and no axes correspond to the condition\n      let defaultAxesTarget = null;\n      if (this.axesOptions.length === 1) {\n        defaultAxesTarget = this.axesOptions[0].value;\n      }\n      if (this.axesOptions.length > 1) {\n        defaultAxesTarget = this.axesOptions[1].value;\n      }\n\n      this.state = {\n        axesTarget: defaultAxesTarget,\n      };\n\n      this.axesTargetHandler = this.axesTargetHandler.bind(this);\n      this.updateContainer = this.updateContainer.bind(this);\n\n      this.setLocals(props, this.state, context);\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n      this.axes = getAllAxes(nextContext.fullContainer);\n      this.axesOptions = computeAxesOptions(this.axes, nextProps, nextContext);\n      // This is not enough, what if plotly.js adds new axes...\n      this.setLocals(nextProps, nextState, nextContext);\n    }\n\n    setLocals(nextProps, nextState, nextContext) {\n      const {container, fullContainer} = nextContext;\n      const {axesTarget} = nextState;\n\n      if (axesTarget === 'allaxes') {\n        const multiValuedContainer = deepCopyPublic(this.axes[0]);\n        this.axes.slice(1).forEach(ax =>\n          Object.keys(ax).forEach(key =>\n            setMultiValuedContainer(multiValuedContainer, deepCopyPublic(ax), key, {\n              searchArrays: true,\n            })\n          )\n        );\n        this.fullContainer = multiValuedContainer;\n        this.defaultContainer = this.axes[0];\n        this.container = {};\n      } else if (axesTarget) {\n        this.fullContainer = nestedProperty(fullContainer, axesTarget).get();\n        this.container = this.container = nestedProperty(container, axesTarget).get() || {};\n      }\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject\n            ? null\n            : this.context.getValObject(`${this.state.axesTarget}.${attr}`),\n        axesOptions: this.axesOptions,\n        axesTarget: this.state.axesTarget,\n        axesTargetHandler: this.axesTargetHandler,\n        container: this.container,\n        defaultContainer: this.defaultContainer,\n        fullContainer: this.fullContainer,\n        updateContainer: this.updateContainer,\n      };\n    }\n\n    axesTargetHandler(axesTarget) {\n      this.setState({axesTarget});\n    }\n\n    updateContainer(update) {\n      const newUpdate = {};\n      const {axesTarget} = this.state;\n\n      let axes = this.axes;\n      if (axesTarget !== 'allaxes') {\n        // only the selected container\n        axes = [this.fullContainer];\n      }\n\n      const keys = Object.keys(update);\n      for (let i = 0; i < keys.length; i++) {\n        for (let j = 0; j < axes.length; j++) {\n          const subplot = axes[j]._subplot;\n          let axesKey = axes[j]._name;\n\n          if (subplot && !subplot.includes('xaxis') && !subplot.includes('yaxis')) {\n            axesKey = `${subplot}.${axesKey}`;\n          }\n\n          const newkey = `${axesKey}.${keys[i]}`;\n          newUpdate[newkey] = update[keys[i]];\n        }\n      }\n\n      this.context.updateContainer(newUpdate);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} options={this.axesOptions} />;\n    }\n  }\n\n  AxesConnectedComponent.displayName = `AxesConnected${getDisplayName(WrappedComponent)}`;\n\n  AxesConnectedComponent.contextTypes = {\n    container: PropTypes.object.isRequired,\n    fullContainer: PropTypes.object.isRequired,\n    updateContainer: PropTypes.func,\n    localize: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  AxesConnectedComponent.childContextTypes = {\n    axesOptions: PropTypes.array,\n    axesTarget: PropTypes.string,\n    axesTargetHandler: PropTypes.func,\n    container: PropTypes.object,\n    defaultContainer: PropTypes.object,\n    fullContainer: PropTypes.object,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  AxesConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return AxesConnectedComponent;\n}\n"],"file":"connectAxesToLayout.js"}