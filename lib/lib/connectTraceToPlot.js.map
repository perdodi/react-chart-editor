{"version":3,"sources":["../../src/lib/connectTraceToPlot.js"],"names":["connectTraceToPlot","WrappedComponent","TraceConnectedComponent","props","context","deleteTrace","bind","updateTrace","moveTrace","setLocals","nextProps","nextContext","traceIndexes","data","fullData","plotly","trace","fullTrace","childContext","getValObject","attr","PlotSchema","getTraceValObject","parts","updateContainer","deleteContainer","moveContainer","container","fullContainer","length","multiValuedFullContainer","forEach","t","Object","keys","key","searchArrays","multiValuedContainer","defaultContainer","icon","name","meta","update","onUpdate","splitTraceGroup","fullDataArrayPosition","map","p","_group","containsAnSrc","filter","a","endsWith","Array","isArray","u","i","type","EDITOR_ACTIONS","UPDATE_TRACES","payload","currentTrace","DELETE_TRACE","axesToBeGarbageCollected","subplotToBeGarbageCollected","subplotType","subplotNames","xaxis","yaxis","SUBPLOT_TO_ATTR","isSubplotUsedAnywhereElse","subplotName","some","charAt","split","index","push","direction","traceIndex","desiredIndex","MOVE_TO","fromIndex","toIndex","path","Component","displayName","propTypes","PropTypes","arrayOf","number","isRequired","contextTypes","array","object","func","layout","childContextTypes","plotly_editor_traits"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport {\n  getDisplayName,\n  plotlyTraceToCustomTrace,\n  renderTraceIcon,\n  traceTypeToAxisType,\n  getFullTrace,\n  getParsedTemplateString,\n} from '../lib';\nimport {deepCopyPublic, setMultiValuedContainer} from './multiValues';\nimport {EDITOR_ACTIONS, SUBPLOT_TO_ATTR} from 'lib/constants';\n\nexport default function connectTraceToPlot(WrappedComponent) {\n  class TraceConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.deleteTrace = this.deleteTrace.bind(this);\n      this.updateTrace = this.updateTrace.bind(this);\n      this.moveTrace = this.moveTrace.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {traceIndexes} = props;\n      const {data, fullData, plotly} = context;\n\n      const trace = data[traceIndexes[0]];\n      const fullTrace = getFullTrace(props, context);\n\n      this.childContext = {\n        getValObject: attr =>\n          !plotly\n            ? null\n            : plotly.PlotSchema.getTraceValObject(fullTrace, nestedProperty({}, attr).parts),\n        updateContainer: this.updateTrace,\n        deleteContainer: this.deleteTrace,\n        moveContainer: this.moveTrace,\n        container: trace,\n        fullContainer: fullTrace,\n        traceIndexes: this.props.traceIndexes,\n      };\n\n      if (traceIndexes.length > 1) {\n        const multiValuedFullContainer = deepCopyPublic(fullTrace);\n        fullData.forEach(t =>\n          Object.keys(t).forEach(key =>\n            setMultiValuedContainer(multiValuedFullContainer, deepCopyPublic(t), key, {\n              searchArrays: true,\n            })\n          )\n        );\n        const multiValuedContainer = deepCopyPublic(trace);\n        data.forEach(t =>\n          Object.keys(t).forEach(key =>\n            setMultiValuedContainer(multiValuedContainer, deepCopyPublic(t), key, {\n              searchArrays: true,\n            })\n          )\n        );\n        this.childContext.fullContainer = multiValuedFullContainer;\n        this.childContext.defaultContainer = fullTrace;\n        this.childContext.container = multiValuedContainer;\n      }\n\n      if (trace && fullTrace) {\n        this.icon = renderTraceIcon(plotlyTraceToCustomTrace(trace));\n        this.name = getParsedTemplateString(fullTrace.name, {meta: fullTrace.meta});\n      }\n    }\n\n    getChildContext() {\n      return this.childContext;\n    }\n\n    updateTrace(update) {\n      if (this.context.onUpdate) {\n        const splitTraceGroup = this.props.fullDataArrayPosition\n          ? this.props.fullDataArrayPosition.map(p => this.context.fullData[p]._group)\n          : null;\n\n        const containsAnSrc = Object.keys(update).filter(a => a.endsWith('src')).length > 0;\n\n        if (Array.isArray(update)) {\n          update.forEach((u, i) => {\n            this.context.onUpdate({\n              type: EDITOR_ACTIONS.UPDATE_TRACES,\n              payload: {\n                update: u,\n                traceIndexes: [this.props.traceIndexes[i]],\n                splitTraceGroup: splitTraceGroup ? splitTraceGroup[i] : null,\n              },\n            });\n          });\n        } else if (splitTraceGroup && !containsAnSrc) {\n          this.props.traceIndexes.forEach((t, i) => {\n            this.context.onUpdate({\n              type: EDITOR_ACTIONS.UPDATE_TRACES,\n              payload: {\n                update,\n                traceIndexes: [this.props.traceIndexes[i]],\n                splitTraceGroup: splitTraceGroup ? splitTraceGroup[i] : null,\n              },\n            });\n          });\n        } else {\n          this.context.onUpdate({\n            type: EDITOR_ACTIONS.UPDATE_TRACES,\n            payload: {\n              update,\n              traceIndexes: this.props.traceIndexes,\n            },\n          });\n        }\n      }\n    }\n\n    deleteTrace() {\n      const currentTrace = this.context.fullData[this.props.traceIndexes[0]];\n      if (!currentTrace && this.context.onUpdate) {\n        this.context.onUpdate({\n          type: EDITOR_ACTIONS.DELETE_TRACE,\n          payload: {\n            traceIndexes: this.props.traceIndexes,\n          },\n        });\n        return;\n      }\n      const axesToBeGarbageCollected = [];\n      let subplotToBeGarbageCollected = null;\n      const subplotType = traceTypeToAxisType(currentTrace.type);\n\n      if (subplotType) {\n        const subplotNames =\n          subplotType === 'cartesian'\n            ? [currentTrace.xaxis || 'xaxis', currentTrace.yaxis || 'yaxis']\n            : currentTrace[SUBPLOT_TO_ATTR[subplotType].data] || SUBPLOT_TO_ATTR[subplotType].data;\n\n        const isSubplotUsedAnywhereElse = (subplotType, subplotName) =>\n          this.context.fullData.some(\n            trace =>\n              (trace[SUBPLOT_TO_ATTR[subplotType].data] === subplotName ||\n                ((subplotType === 'xaxis' || subplotType === 'yaxis') && subplotName.charAt(1)) ===\n                  '' ||\n                (subplotName.split(subplotType)[1] === '' &&\n                  trace[SUBPLOT_TO_ATTR[subplotType].data] === null)) &&\n              trace.index !== this.props.traceIndexes[0]\n          );\n\n        // When we delete a subplot, make sure no unused axes/subplots are left\n        if (subplotType === 'cartesian') {\n          if (!isSubplotUsedAnywhereElse('xaxis', subplotNames[0])) {\n            axesToBeGarbageCollected.push(subplotNames[0]);\n          }\n          if (!isSubplotUsedAnywhereElse('yaxis', subplotNames[1])) {\n            axesToBeGarbageCollected.push(subplotNames[1]);\n          }\n        } else {\n          if (!isSubplotUsedAnywhereElse(subplotType, subplotNames)) {\n            subplotToBeGarbageCollected = subplotNames;\n          }\n        }\n      }\n\n      if (this.context.onUpdate) {\n        this.context.onUpdate({\n          type: EDITOR_ACTIONS.DELETE_TRACE,\n          payload: {\n            axesToBeGarbageCollected,\n            subplotToBeGarbageCollected,\n            traceIndexes: this.props.traceIndexes,\n          },\n        });\n      }\n    }\n\n    moveTrace(direction) {\n      const traceIndex = this.props.traceIndexes[0];\n      const desiredIndex = direction === 'up' ? traceIndex - 1 : traceIndex + 1;\n      this.context.onUpdate({\n        type: EDITOR_ACTIONS.MOVE_TO,\n        payload: {\n          fromIndex: traceIndex,\n          toIndex: desiredIndex,\n          path: 'data',\n        },\n      });\n    }\n\n    render() {\n      return <WrappedComponent name={this.name} icon={this.icon} {...this.props} />;\n    }\n  }\n\n  TraceConnectedComponent.displayName = `TraceConnected${getDisplayName(WrappedComponent)}`;\n\n  TraceConnectedComponent.propTypes = {\n    traceIndexes: PropTypes.arrayOf(PropTypes.number).isRequired,\n    fullDataArrayPosition: PropTypes.arrayOf(PropTypes.number),\n  };\n\n  TraceConnectedComponent.contextTypes = {\n    fullData: PropTypes.array,\n    data: PropTypes.array,\n    plotly: PropTypes.object,\n    onUpdate: PropTypes.func,\n    layout: PropTypes.object,\n  };\n\n  TraceConnectedComponent.childContextTypes = {\n    getValObject: PropTypes.func,\n    updateContainer: PropTypes.func,\n    deleteContainer: PropTypes.func,\n    defaultContainer: PropTypes.object,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    traceIndexes: PropTypes.array,\n    moveContainer: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  TraceConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return TraceConnectedComponent;\n}\n"],"file":"connectTraceToPlot.js"}