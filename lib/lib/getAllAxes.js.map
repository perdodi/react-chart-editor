{"version":3,"sources":["../../src/lib/getAllAxes.js"],"names":["getAllAxes","fullLayout","axes","_subplots","Object","keys","filter","type","length","forEach","subplot","includes","slice","_subplot","_axisGroup","push","key","axis","_name","traceTypeToAxisType","traceType","category","traceToAxis","TRACE_TO_AXIS","assign","scene","gl3d","c","axisIdToAxisName","id","charAt","getAxisNumber","splitSubplot","split","Number","getAxisTitle","axisType","subplotNumber","_input","title","text","getSubplotNumber","getSubplotTitle","_","axisName","SUBPLOT_TO_ATTR","layout"],"mappings":"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","sourcesContent":["import {TRACE_TO_AXIS, SUBPLOT_TO_ATTR, subplotName} from 'lib/constants';\nimport {capitalize, striptags} from 'lib';\n\nexport default function getAllAxes(fullLayout) {\n  const axes = [];\n  // Plotly.js should really have a helper function for this, but until it does..\n  if (fullLayout && fullLayout._subplots) {\n    Object.keys(fullLayout._subplots)\n      .filter(\n        // xaxis and yaxis already included separately in _fullLayout._subplots\n        type => type !== 'cartesian' && fullLayout._subplots[type].length !== 0\n      )\n      .forEach(type => {\n        fullLayout._subplots[type].forEach(subplot => {\n          if (['xaxis', 'yaxis'].includes(type)) {\n            // subplot will look like x2, x45, convert it to xaxis2, xaxis45\n            subplot = // eslint-disable-line no-param-reassign\n              subplot.length > 1\n                ? subplot.slice(0, 1) + 'axis' + subplot.slice(1)\n                : subplot + 'axis';\n\n            fullLayout[subplot]._subplot = subplot;\n            fullLayout[subplot]._axisGroup = type;\n            axes.push(fullLayout[subplot]);\n          } else {\n            Object.keys(fullLayout[subplot])\n              .filter(key => key.includes('axis'))\n              .forEach(axis => {\n                fullLayout[subplot][axis]._subplot = subplot;\n                fullLayout[subplot][axis]._axisGroup = type;\n\n                // it should be in plotly.js, but it's not there for geo axes..\n                if (!fullLayout[subplot][axis]._name) {\n                  fullLayout[subplot][axis]._name = axis;\n                }\n                axes.push(fullLayout[subplot][axis]);\n              });\n          }\n        });\n      });\n  }\n\n  return axes;\n}\n\nexport function traceTypeToAxisType(traceType, subplot = false) {\n  // plotly.js actually allows traces with no type and just\n  // defaults them to scatter, so do this here as well.\n  if (!traceType) {\n    traceType = 'scatter'; // eslint-disable-line\n  }\n\n  let category = null;\n  const traceToAxis = TRACE_TO_AXIS;\n  if (subplot) {\n    Object.assign(traceToAxis, TRACE_TO_AXIS, {scene: TRACE_TO_AXIS.gl3d});\n    delete traceToAxis.gl3d;\n  }\n\n  Object.keys(traceToAxis).forEach(c => {\n    if (traceToAxis[c].includes(traceType)) {\n      category = c;\n    }\n  });\n\n  if (category) {\n    return category;\n  }\n\n  return null;\n}\n\nexport function axisIdToAxisName(id) {\n  return id.charAt(0) + 'axis' + id.slice(1);\n}\n\nfunction getAxisNumber(axis) {\n  const splitSubplot = axis._subplot ? axis._subplot.split(axis._axisGroup) : [];\n  return splitSubplot[1] ? Number(splitSubplot[1]) : axis._name.split('axis')[1];\n}\n\nexport function getAxisTitle(axis) {\n  const axisType = capitalize(axis._name.split('axis')[0]);\n  const subplotNumber = getAxisNumber(axis) || 1;\n\n  return axis._input && axis._input.title\n    ? striptags(`${axisType}: ${axis._input.title.text}`)\n    : striptags(`${axisType} ${subplotNumber}`);\n}\n\nfunction getSubplotNumber(subplot, type) {\n  return Number(subplot.split(type)[1]);\n}\n\nexport function getSubplotTitle(subplot, type, _) {\n  const axisName = subplotName(type, _);\n  const subplotNumber = getSubplotNumber(subplot, SUBPLOT_TO_ATTR[type].layout) || '';\n\n  return `${axisName} ${subplotNumber}`;\n}\n"],"file":"getAllAxes.js"}