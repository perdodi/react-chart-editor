{"version":3,"sources":["../../src/lib/computeTraceOptionsFromSchema.js"],"names":["computeTraceOptionsFromSchema","schema","_","context","traceTypes","Object","keys","traces","filter","t","includes","traceOptions","value","label","obj","indexOf","traceIndex","traceType","findIndex","opt","splice","config","mapboxAccessToken","push"],"mappings":"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","sourcesContent":["function computeTraceOptionsFromSchema(schema, _, context) {\n  // Filter out Polar \"area\" type as it is fairly broken and we want to present\n  // scatter with fill as an \"area\" chart type for convenience.\n  const traceTypes = Object.keys(schema.traces).filter(t => !['area', 'scattermapbox'].includes(t));\n\n  const traceOptions = [\n    {\n      value: 'scatter',\n      label: _('Scatter'),\n    },\n    {\n      value: 'box',\n      label: _('Box'),\n    },\n    {\n      value: 'bar',\n      label: _('Bar'),\n    },\n    {\n      value: 'heatmap',\n      label: _('Heatmap'),\n    },\n    {\n      value: 'histogram',\n      label: _('Histogram'),\n    },\n    {\n      value: 'histogram2d',\n      label: _('2D Histogram'),\n    },\n    {\n      value: 'histogram2dcontour',\n      label: _('2D Contour Histogram'),\n    },\n    {\n      value: 'pie',\n      label: _('Pie'),\n    },\n    {\n      value: 'contour',\n      label: _('Contour'),\n    },\n    {\n      value: 'scatterternary',\n      label: _('Ternary Scatter'),\n    },\n    {\n      value: 'violin',\n      label: _('Violin'),\n    },\n    {\n      value: 'scatter3d',\n      label: _('3D Scatter'),\n    },\n    {\n      value: 'surface',\n      label: _('Surface'),\n    },\n    {\n      value: 'mesh3d',\n      label: _('3D Mesh'),\n    },\n    {\n      value: 'cone',\n      label: _('Cone'),\n    },\n    {\n      value: 'streamtube',\n      label: _('Streamtube'),\n    },\n    {\n      value: 'scattergeo',\n      label: _('Atlas Map'),\n    },\n    {\n      value: 'choropleth',\n      label: _('Choropleth'),\n    },\n    {\n      value: 'scattergl',\n      label: _('Scatter GL'),\n    },\n    {\n      value: 'pointcloud',\n      label: _('Point Cloud'),\n    },\n    {\n      value: 'heatmapgl',\n      label: _('Heatmap GL'),\n    },\n    {\n      value: 'parcoords',\n      label: _('Parallel Coordinates'),\n    },\n    {\n      value: 'sankey',\n      label: _('Sankey'),\n    },\n    {\n      value: 'table',\n      label: _('Table'),\n    },\n    {\n      value: 'carpet',\n      label: _('Carpet'),\n    },\n    {\n      value: 'scattercarpet',\n      label: _('Carpet Scatter'),\n    },\n    {\n      value: 'contourcarpet',\n      label: _('Carpet Contour'),\n    },\n    {\n      value: 'ohlc',\n      label: _('OHLC'),\n    },\n    {\n      value: 'candlestick',\n      label: _('Candlestick'),\n    },\n    {\n      value: 'scatterpolar',\n      label: _('Polar Scatter'),\n    },\n    {\n      value: 'scatterpolargl',\n      label: _('Polar Scatter GL'),\n    },\n    {\n      value: 'barpolar',\n      label: _('Polar Bar'),\n    },\n    {\n      value: 'isosurface',\n      label: _('Isosurface'),\n    },\n  ].filter(obj => traceTypes.indexOf(obj.value) !== -1);\n\n  const traceIndex = traceType => traceOptions.findIndex(opt => opt.value === traceType);\n\n  traceOptions.splice(\n    traceIndex('scatter') + 1,\n    0,\n    {label: _('Line'), value: 'line'},\n    {label: _('Area'), value: 'area'},\n    {label: _('Timeseries'), value: 'timeseries'}\n  );\n\n  traceOptions.splice(traceIndex('scatter3d') + 1, 0, {\n    label: _('3D Line'),\n    value: 'line3d',\n  });\n\n  if (context.config && context.config.mapboxAccessToken) {\n    traceOptions.push({\n      value: 'scattermapbox',\n      label: _('Satellite Map'),\n    });\n  }\n\n  return traceOptions;\n}\n\nexport {computeTraceOptionsFromSchema};\n"],"file":"computeTraceOptionsFromSchema.js"}