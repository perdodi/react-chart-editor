{"version":3,"sources":["../../src/lib/unpackPlotProps.js"],"names":["hasFullValue","fullValue","hasValidCustomConfigVisibilityRules","customConfig","Object","keys","length","visibility_rules","blacklist","whitelist","console","error","some","key","includes","isValidRule","rule","exceptions","every","type","regex_match","errorMessage","computeCustomConfigVisibility","props","wrappedComponentDisplayName","isVisible","isRegexMatch","stringToTest","attr","RegExp","test","passesTest","hasException","exception","isVisibleGivenCustomConfig","initial","nextProps","nextContext","componentDisplayName","show","unpackPlotProps","context","container","getValObject","defaultContainer","updateContainer","attrMeta","fullContainer","fullProperty","get","multiValued","MULTI_VALUED","MULTI_VALUED_PLACEHOLDER","Boolean","defaultValue","min","max","description","updatePlot","v"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport isNumeric from 'fast-isnumeric';\nimport {MULTI_VALUED, MULTI_VALUED_PLACEHOLDER} from './constants';\n\nconst hasFullValue = fullValue => fullValue !== void 0 && fullValue !== null;\n\nexport function hasValidCustomConfigVisibilityRules(customConfig) {\n  if (\n    customConfig &&\n    customConfig === Object(customConfig) &&\n    Object.keys(customConfig).length &&\n    customConfig.visibility_rules\n  ) {\n    if (customConfig.visibility_rules.blacklist && customConfig.visibility_rules.whitelist) {\n      console.error(\n        'customConfig.visibility_rules can have a blacklist OR whitelist key, both are present in your config.'\n      );\n      return false;\n    }\n\n    if (\n      !Object.keys(customConfig.visibility_rules).some(key =>\n        ['blacklist', 'whitelist'].includes(key)\n      )\n    ) {\n      console.error(\n        'customConfig.visibility_rules must have at least a blacklist or whitelist key.'\n      );\n      return false;\n    }\n\n    const isValidRule = rule => {\n      if (rule.exceptions) {\n        return rule.exceptions.every(isValidRule);\n      }\n      return rule.type && ['attrName', 'controlType'].includes(rule.type) && rule.regex_match;\n    };\n\n    const errorMessage =\n      \"All rules and exceptions must have a type (one of: 'attrName' or 'controlType') and regex_match key.\";\n\n    if (\n      customConfig.visibility_rules.blacklist &&\n      !customConfig.visibility_rules.blacklist.every(isValidRule)\n    ) {\n      console.error(errorMessage);\n      return false;\n    }\n\n    if (\n      customConfig.visibility_rules.whitelist &&\n      !customConfig.visibility_rules.whitelist.every(isValidRule)\n    ) {\n      console.error(errorMessage);\n      return false;\n    }\n\n    return true;\n  }\n  return false;\n}\n\nexport function computeCustomConfigVisibility(props, customConfig, wrappedComponentDisplayName) {\n  let isVisible;\n\n  const isRegexMatch = rule => {\n    const stringToTest = rule.type === 'attrName' ? props.attr : wrappedComponentDisplayName;\n    return RegExp(rule.regex_match).test(stringToTest);\n  };\n\n  const passesTest = rule => {\n    const hasException = rule => {\n      if (rule.exceptions) {\n        return rule.exceptions.some(exception => passesTest(exception));\n      }\n      return false;\n    };\n    return isRegexMatch(rule) && !hasException(rule);\n  };\n\n  if (customConfig.visibility_rules.blacklist) {\n    isVisible = !customConfig.visibility_rules.blacklist.some(passesTest);\n  }\n\n  if (customConfig.visibility_rules.whitelist) {\n    isVisible = customConfig.visibility_rules.whitelist.some(passesTest);\n  }\n\n  return isVisible;\n}\n\nexport function isVisibleGivenCustomConfig(initial, nextProps, nextContext, componentDisplayName) {\n  let show = initial;\n  if (show && nextContext.hasValidCustomConfigVisibilityRules) {\n    show = computeCustomConfigVisibility(nextProps, nextContext.customConfig, componentDisplayName);\n  }\n  return show;\n}\n\nexport default function unpackPlotProps(props, context) {\n  const {container, getValObject, defaultContainer, updateContainer} = context;\n\n  if (!props.attr) {\n    return {};\n  }\n\n  let attrMeta;\n  if (getValObject) {\n    attrMeta = context.getValObject(props.attr) || {};\n  }\n\n  const fullContainer = context.fullContainer;\n\n  const fullProperty = nestedProperty(fullContainer, props.attr);\n  let fullValue = fullProperty.get();\n  let multiValued = false;\n\n  // MULTI_VALUED consists of a control sequence that cannot be confused with\n  // user data. We must transform it into something that can be displayed as\n  // the screen.\n  if (fullValue === MULTI_VALUED) {\n    fullValue = MULTI_VALUED_PLACEHOLDER;\n    multiValued = true;\n  }\n\n  const isVisible = Boolean(hasFullValue(fullValue) || props.show);\n\n  let defaultValue = props.defaultValue;\n  if (defaultValue === void 0 && defaultContainer) {\n    defaultValue = nestedProperty(defaultContainer, props.attr).get();\n  }\n\n  let min, max, description;\n  if (attrMeta) {\n    if (isNumeric(attrMeta.max)) {\n      max = attrMeta.max;\n    }\n    if (isNumeric(attrMeta.min)) {\n      min = attrMeta.min;\n    }\n\n    description = attrMeta.description;\n  }\n\n  const updatePlot = v => {\n    if (updateContainer) {\n      updateContainer({[props.attr]: v});\n    }\n  };\n\n  return {\n    attrMeta,\n    container,\n    defaultValue,\n    fullContainer,\n    fullValue,\n    getValObject,\n    isVisible,\n    max,\n    min,\n    description,\n    multiValued,\n    updateContainer,\n    updatePlot,\n  };\n}\n"],"file":"unpackPlotProps.js"}