{"version":3,"sources":["../../src/lib/connectAggregationToTransform.js"],"names":["connectAggregationToTransform","WrappedComponent","AggregationConnectedComponent","props","context","updateAggregation","bind","setLocals","nextProps","nextContext","aggregationIndex","container","fullContainer","aggregations","fullAggregations","getValObject","attr","updateContainer","update","newUpdate","path","key","target","Component","displayName","propTypes","PropTypes","number","isRequired","contextTypes","object","data","array","onUpdate","func","childContextTypes","deleteContainer","plotly_editor_traits"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {getDisplayName} from '../lib';\n\nexport default function connectAggregationToTransform(WrappedComponent) {\n  class AggregationConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.updateAggregation = this.updateAggregation.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {aggregationIndex} = props;\n      const {container, fullContainer} = context;\n\n      const aggregations = (container && container.aggregations) || [];\n      const fullAggregations = fullContainer.aggregations || [];\n      this.container = aggregations[aggregationIndex];\n      this.fullContainer = fullAggregations[aggregationIndex];\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject ? null : this.context.getValObject(`aggregations[].${attr}`),\n        updateContainer: this.updateAggregation,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    updateAggregation(update) {\n      const newUpdate = {};\n      const path = `aggregations[${this.props.aggregationIndex}]`;\n      for (const key in update) {\n        newUpdate[`${path}.${key}`] = update[key];\n      }\n      newUpdate[`${path}.target`] = this.fullContainer.target;\n      newUpdate[`${path}.enabled`] = true;\n      this.context.updateContainer(newUpdate);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  AggregationConnectedComponent.displayName = `AggregationConnected${getDisplayName(\n    WrappedComponent\n  )}`;\n\n  AggregationConnectedComponent.propTypes = {\n    aggregationIndex: PropTypes.number.isRequired,\n  };\n\n  AggregationConnectedComponent.contextTypes = {\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    data: PropTypes.array,\n    onUpdate: PropTypes.func,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  AggregationConnectedComponent.childContextTypes = {\n    updateContainer: PropTypes.func,\n    deleteContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    getValObject: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  AggregationConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return AggregationConnectedComponent;\n}\n"],"file":"connectAggregationToTransform.js"}