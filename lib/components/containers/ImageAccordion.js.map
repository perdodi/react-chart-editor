{"version":3,"sources":["../../../src/components/containers/ImageAccordion.js"],"names":["ImageFold","PlotlyFold","ImageAccordion","context","layout","images","_","localize","props","canAdd","children","canReorder","content","length","map","img","i","addAction","label","handler","updateContainer","imageIndex","Array","isArray","key","value","sizex","sizey","x","y","Component","contextTypes","PropTypes","object","func","propTypes","node","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG,+BAAqBC,mBAArB,CAAlB;;IAEMC,c;;;;;;;;;;;;;6BACK;AAAA,0BAIH,KAAKC,OAJF;AAAA,gDAELC,MAFK,CAEIC,MAFJ;AAAA,UAEIA,MAFJ,sCAEa,EAFb;AAAA,UAGKC,CAHL,iBAGLC,QAHK;AAAA,wBAKgC,KAAKC,KALrC;AAAA,UAKAC,MALA,eAKAA,MALA;AAAA,UAKQC,QALR,eAKQA,QALR;AAAA,UAKkBC,UALlB,eAKkBA,UALlB;AAOP,UAAMC,OAAO,GACXP,MAAM,CAACQ,MAAP,IACAR,MAAM,CAACS,GAAP,CAAW,UAACC,GAAD,EAAMC,CAAN;AAAA,eACT,6BAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,CAAhB;AAAmB,UAAA,UAAU,EAAEA,CAA/B;AAAkC,UAAA,IAAI,YAAKV,CAAC,CAAC,OAAD,CAAN,cAAmBU,CAAC,GAAG,CAAvB,CAAtC;AAAkE,UAAA,SAAS,EAAEP;AAA7E,WACGC,QADH,CADS;AAAA,OAAX,CAFF;AAQA,UAAMO,SAAS,GAAG;AAChBC,QAAAA,KAAK,EAAEZ,CAAC,CAAC,OAAD,CADQ;AAEhBa,QAAAA,OAAO,EAAE,uBAA+B;AAAA,cAA7Bf,MAA6B,QAA7BA,MAA6B;AAAA,cAArBgB,eAAqB,QAArBA,eAAqB;AACtC,cAAIC,UAAJ;;AACA,cAAIC,KAAK,CAACC,OAAN,CAAcnB,MAAM,CAACC,MAArB,CAAJ,EAAkC;AAChCgB,YAAAA,UAAU,GAAGjB,MAAM,CAACC,MAAP,CAAcQ,MAA3B;AACD,WAFD,MAEO;AACLQ,YAAAA,UAAU,GAAG,CAAb;AACD;;AAED,cAAMG,GAAG,oBAAaH,UAAb,MAAT;AACA,cAAMI,KAAK,GAAG;AACZC,YAAAA,KAAK,EAAE,GADK;AAEZC,YAAAA,KAAK,EAAE,GAFK;AAGZC,YAAAA,CAAC,EAAE,GAHS;AAIZC,YAAAA,CAAC,EAAE;AAJS,WAAd;;AAOA,cAAIT,eAAJ,EAAqB;AACnBA,YAAAA,eAAe,qBAAGI,GAAH,EAASC,KAAT,EAAf;AACD;AACF;AArBe,OAAlB;AAwBA,aACE,6BAAC,oBAAD;AAAa,QAAA,SAAS,EAAEhB,MAAM,GAAGQ,SAAH,GAAe,IAA7C;AAAmD,QAAA,UAAU,EAAEN;AAA/D,SACGC,OAAO,GACNA,OADM,GAGN,6BAAC,wBAAD;AAAc,QAAA,OAAO,EAAEN,CAAC,CAAC,6BAAD;AAAxB,SACE,wCACGA,CAAC,CACA,sFADA,CADJ,CADF,EAME,wCAAIA,CAAC,CAAC,8CAAD,CAAL,CANF,CAJJ,CADF;AAgBD;;;;EAxD0BwB,gB;;AA2D7B5B,cAAc,CAAC6B,YAAf,GAA8B;AAC5B3B,EAAAA,MAAM,EAAE4B,mBAAUC,MADU;AAE5B1B,EAAAA,QAAQ,EAAEyB,mBAAUE;AAFQ,CAA9B;AAKAhC,cAAc,CAACiC,SAAf,GAA2B;AACzBzB,EAAAA,QAAQ,EAAEsB,mBAAUI,IADK;AAEzB3B,EAAAA,MAAM,EAAEuB,mBAAUK,IAFO;AAGzB1B,EAAAA,UAAU,EAAEqB,mBAAUK;AAHG,CAA3B;eAMenC,c","sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport {LayoutPanel} from './derived';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectImageToLayout} from 'lib';\nimport {PanelMessage} from './PanelEmpty';\n\nconst ImageFold = connectImageToLayout(PlotlyFold);\n\nclass ImageAccordion extends Component {\n  render() {\n    const {\n      layout: {images = []},\n      localize: _,\n    } = this.context;\n    const {canAdd, children, canReorder} = this.props;\n\n    const content =\n      images.length &&\n      images.map((img, i) => (\n        <ImageFold key={i} imageIndex={i} name={`${_('Image')} ${i + 1}`} canDelete={canAdd}>\n          {children}\n        </ImageFold>\n      ));\n\n    const addAction = {\n      label: _('Image'),\n      handler: ({layout, updateContainer}) => {\n        let imageIndex;\n        if (Array.isArray(layout.images)) {\n          imageIndex = layout.images.length;\n        } else {\n          imageIndex = 0;\n        }\n\n        const key = `images[${imageIndex}]`;\n        const value = {\n          sizex: 0.1,\n          sizey: 0.1,\n          x: 0.5,\n          y: 0.5,\n        };\n\n        if (updateContainer) {\n          updateContainer({[key]: value});\n        }\n      },\n    };\n\n    return (\n      <LayoutPanel addAction={canAdd ? addAction : null} canReorder={canReorder}>\n        {content ? (\n          content\n        ) : (\n          <PanelMessage heading={_('Logos, watermarks and more.')}>\n            <p>\n              {_(\n                'Embed images in your figure to make the data more readable or to brand your content.'\n              )}\n            </p>\n            <p>{_('Click on the + button above to add an image.')}</p>\n          </PanelMessage>\n        )}\n      </LayoutPanel>\n    );\n  }\n}\n\nImageAccordion.contextTypes = {\n  layout: PropTypes.object,\n  localize: PropTypes.func,\n};\n\nImageAccordion.propTypes = {\n  children: PropTypes.node,\n  canAdd: PropTypes.bool,\n  canReorder: PropTypes.bool,\n};\n\nexport default ImageAccordion;\n"],"file":"ImageAccordion.js"}