{"version":3,"sources":["../../../src/components/containers/SubplotAccordion.js"],"names":["TraceFold","PlotlyFold","NonCartesianSubplotFold","CartesianSubplotFold","SubplotAccordion","context","data","layout","_","localize","children","props","subplotFolds","allCartesianAxisCombinations","reduce","acc","curVal","inx","TRACE_TO_AXIS","cartesian","some","c","type","xaxis","substring","yaxis","existingComboIndex","findIndex","t","push","xaxisName","yaxisName","index","forEach","d","Object","keys","layoutKey","traceIndexes","subplotName","subplotType","trIndex","SUBPLOT_TO_ATTR","trace","tt","startsWith","counter","pie","table","sunburst","sankey","parcoords","parcats","i","values","includes","currentCount","Component","contextTypes","fullData","PropTypes","array","object","func","propTypes","node"],"mappings":"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","sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport TraceRequiredPanel from './TraceRequiredPanel';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {\n  connectTraceToPlot,\n  connectCartesianSubplotToLayout,\n  connectNonCartesianSubplotToLayout,\n  getSubplotTitle,\n  capitalize,\n} from 'lib';\nimport {TRACE_TO_AXIS, SUBPLOT_TO_ATTR} from 'lib/constants';\n\nconst TraceFold = connectTraceToPlot(PlotlyFold);\nconst NonCartesianSubplotFold = connectNonCartesianSubplotToLayout(PlotlyFold);\nconst CartesianSubplotFold = connectCartesianSubplotToLayout(PlotlyFold);\n\nclass SubplotAccordion extends Component {\n  render() {\n    const {data = [], layout = {}, localize: _} = this.context;\n    const {children} = this.props;\n    const subplotFolds = [];\n\n    const allCartesianAxisCombinations = data.reduce((acc, curVal, inx) => {\n      if (TRACE_TO_AXIS.cartesian.some(c => c === curVal.type)) {\n        const xaxis = 'xaxis' + (curVal.xaxis ? curVal.xaxis.substring(1) : '');\n        const yaxis = 'yaxis' + (curVal.yaxis ? curVal.yaxis.substring(1) : '');\n\n        const existingComboIndex = acc.findIndex(t => t.xaxis === xaxis && t.yaxis === yaxis);\n        if (existingComboIndex === -1) {\n          acc.push({\n            xaxis: xaxis,\n            yaxis: yaxis,\n            xaxisName: curVal.xaxis ? getSubplotTitle(curVal.xaxis, 'x', _) : 'X 1',\n            yaxisName: curVal.yaxis ? getSubplotTitle(curVal.yaxis, 'y', _) : 'Y 1',\n            index: [inx],\n          });\n        } else {\n          acc[existingComboIndex].index.push(inx);\n        }\n      }\n      return acc;\n    }, []);\n\n    allCartesianAxisCombinations.forEach(\n      d =>\n        (subplotFolds[d.index[0]] = (\n          <CartesianSubplotFold\n            key={d.index[0]}\n            traceIndexes={d.index}\n            canDelete={false}\n            xaxis={d.xaxis}\n            yaxis={d.yaxis}\n            name={`${d.xaxisName} | ${d.yaxisName}`}\n          >\n            {children}\n          </CartesianSubplotFold>\n        ))\n    );\n\n    // For each key in layout, find all traces that belong to this subplot.\n    // E.g. if layout attr is 'ternary', find all traces that are of type\n    // that has subplot ternary, if layout attr is 'ternary2', find traces\n    // of right type that have attr 'subplot': 'ternary' in their data.\n\n    /**\n    Example:\n    {\n      \"data\": [\n        {\n          \"type\": \"scatterternary\",\n          \"mode\": \"markers\",\n        },\n        {\n          \"type\": \"scatterternary\",\n          \"mode\": \"markers\",\n          \"subplot\": \"ternary2\"\n        }\n      ],\n      \"layout\": {\n        \"ternary\": {},\n        \"ternary2\": {},\n      },\n    }\n     */\n\n    Object.keys(layout).forEach(layoutKey => {\n      const traceIndexes = [];\n      let subplotName;\n      if (\n        ['geo', 'mapbox', 'polar', 'gl3d', 'ternary'].some(subplotType => {\n          subplotName = getSubplotTitle(layoutKey, subplotType, _);\n          const trIndex =\n            SUBPLOT_TO_ATTR[subplotType].layout === layoutKey\n              ? data.findIndex(trace => TRACE_TO_AXIS[subplotType].some(tt => tt === trace.type))\n              : data.findIndex(trace => trace[SUBPLOT_TO_ATTR[subplotType].data] === layoutKey);\n          if (trIndex !== -1) {\n            traceIndexes.push(trIndex);\n          }\n          return layoutKey.startsWith(SUBPLOT_TO_ATTR[subplotType].layout);\n        })\n      ) {\n        subplotFolds[traceIndexes[0]] = (\n          <NonCartesianSubplotFold\n            key={layoutKey}\n            traceIndexes={traceIndexes}\n            canDelete={false}\n            subplot={layoutKey}\n            name={subplotName}\n          >\n            {children}\n          </NonCartesianSubplotFold>\n        );\n      }\n    });\n\n    const counter = {\n      pie: 0,\n      table: 0,\n      sunburst: 0,\n      sankey: 0,\n      parcoords: 0,\n      parcats: 0,\n    };\n\n    data.forEach((d, i) => {\n      if (\n        (d.type === 'pie' && d.values) ||\n        ['pie', 'table', 'sunburst', 'sankey', 'parcoords', 'parcats', 'funnelarea'].includes(\n          d.type\n        )\n      ) {\n        counter[d.type]++;\n        const currentCount = counter[d.type];\n\n        subplotFolds[i] = (\n          <TraceFold\n            key={i}\n            traceIndexes={[i]}\n            canDelete={false}\n            name={capitalize(d.type) + (currentCount > 1 ? ' ' + currentCount : '')}\n          >\n            {children}\n          </TraceFold>\n        );\n      }\n    });\n\n    return <TraceRequiredPanel>{subplotFolds}</TraceRequiredPanel>;\n  }\n}\n\nSubplotAccordion.contextTypes = {\n  fullData: PropTypes.array,\n  data: PropTypes.array,\n  layout: PropTypes.object,\n  localize: PropTypes.func,\n};\n\nSubplotAccordion.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default SubplotAccordion;\n"],"file":"SubplotAccordion.js"}