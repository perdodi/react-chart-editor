{"version":3,"sources":["../../../src/components/containers/UpdateMenuAccordion.js"],"names":["UpdateMenuFold","PlotlyFold","UpdateMenuAccordion","context","fullLayout","updatemenus","_","localize","children","props","content","length","map","upd","i","localizedType","dropdown","buttons","menuType","type","activeBtn","filter","b","_index","active","foldName","label","Component","contextTypes","PropTypes","object","func","propTypes","node"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAG,oCAA0BC,mBAA1B,CAAvB;;IAEMC,mB;;;;;;;;;;;;;6BACK;AAAA,0BAIH,KAAKC,OAJF;AAAA,gDAELC,UAFK,CAEQC,WAFR;AAAA,UAEQA,WAFR,sCAEsB,EAFtB;AAAA,UAGKC,CAHL,iBAGLC,QAHK;AAAA,UAKAC,QALA,GAKY,KAAKC,KALjB,CAKAD,QALA;AAOP,UAAME,OAAO,GACXL,WAAW,CAACM,MAAZ,GAAqB,CAArB,IACAN,WAAW,CAACO,GAAZ,CAAgB,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC1B,YAAMC,aAAa,GAAG;AACpBC,UAAAA,QAAQ,EAAEV,CAAC,CAAC,UAAD,CADS;AAEpBW,UAAAA,OAAO,EAAEX,CAAC,CAAC,SAAD;AAFU,SAAtB;AAIA,YAAMY,QAAQ,GAAGH,aAAa,CAACF,GAAG,CAACM,IAAL,CAAb,IAA2BJ,aAAa,CAACC,QAA1D;AACA,YAAMI,SAAS,GAAGP,GAAG,CAACI,OAAJ,CAAYI,MAAZ,CAAmB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,MAAF,KAAaV,GAAG,CAACW,MAArB;AAAA,SAApB,EAAiD,CAAjD,CAAlB;AACA,YAAMC,QAAQ,GAAGP,QAAQ,IAAIE,SAAS,GAAG,OAAOA,SAAS,CAACM,KAApB,GAA4B,EAAzC,CAAzB;AAEA,eACE,6BAAC,cAAD;AAAgB,UAAA,GAAG,EAAEZ,CAArB;AAAwB,UAAA,eAAe,EAAEA,CAAzC;AAA4C,UAAA,IAAI,EAAEW;AAAlD,WACGjB,QADH,CADF;AAKD,OAdD,CAFF;AAkBA,aAAO,6BAAC,2BAAD,QAAqBE,OAAO,GAAGA,OAAH,GAAa,IAAzC,CAAP;AACD;;;;EA3B+BiB,gB;;AA8BlCzB,mBAAmB,CAAC0B,YAApB,GAAmC;AACjCxB,EAAAA,UAAU,EAAEyB,mBAAUC,MADW;AAEjCvB,EAAAA,QAAQ,EAAEsB,mBAAUE;AAFa,CAAnC;AAKA7B,mBAAmB,CAAC8B,SAApB,GAAgC;AAC9BxB,EAAAA,QAAQ,EAAEqB,mBAAUI;AADU,CAAhC;eAIe/B,mB","sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport TraceRequiredPanel from './TraceRequiredPanel';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectUpdateMenuToLayout} from 'lib';\n\nconst UpdateMenuFold = connectUpdateMenuToLayout(PlotlyFold);\n\nclass UpdateMenuAccordion extends Component {\n  render() {\n    const {\n      fullLayout: {updatemenus = []},\n      localize: _,\n    } = this.context;\n    const {children} = this.props;\n\n    const content =\n      updatemenus.length > 0 &&\n      updatemenus.map((upd, i) => {\n        const localizedType = {\n          dropdown: _('Dropdown'),\n          buttons: _('Buttons'),\n        };\n        const menuType = localizedType[upd.type] || localizedType.dropdown;\n        const activeBtn = upd.buttons.filter(b => b._index === upd.active)[0];\n        const foldName = menuType + (activeBtn ? ': ' + activeBtn.label : '');\n\n        return (\n          <UpdateMenuFold key={i} updateMenuIndex={i} name={foldName}>\n            {children}\n          </UpdateMenuFold>\n        );\n      });\n\n    return <TraceRequiredPanel>{content ? content : null}</TraceRequiredPanel>;\n  }\n}\n\nUpdateMenuAccordion.contextTypes = {\n  fullLayout: PropTypes.object,\n  localize: PropTypes.func,\n};\n\nUpdateMenuAccordion.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default UpdateMenuAccordion;\n"],"file":"UpdateMenuAccordion.js"}