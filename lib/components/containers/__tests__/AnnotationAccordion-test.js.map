{"version":3,"sources":["../../../../src/components/containers/__tests__/AnnotationAccordion-test.js"],"names":["LayoutPanel","PlotlyPanel","describe","it","fixture","fixtures","scatter","layout","annotations","text","folds","onUpdate","jest","fn","find","PlotlyFold","expect","length","toBe","at","prop","beforeUpdateLayout","editor","simulate","payload","mock","calls","update","toEqual","beforeDeleteAnnotation","annotationIndex"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,WAAW,GAAG,8BAAoBC,aAApB,CAApB;AAEAC,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACtCC,EAAAA,EAAE,CAAC,oDAAD,EAAuD,YAAM;AAC7D,QAAMC,OAAO,GAAGC,oBAASC,OAAT,CAAiB;AAC/BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,WAAW,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,EAAkB;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAlB;AAAd;AADuB,KAAjB,CAAhB;;AAIA,QAAMC,KAAK,GAAG,sBACZ,6BAAC,qBAAD,oBAAoBN,OAApB;AAA6BO,MAAAA,QAAQ,EAAEC,IAAI,CAACC,EAAL;AAAvC,QACE,6BAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB,OACE,6BAAC,qBAAD,QACE,6BAAC,eAAD;AAAS,MAAA,IAAI,EAAC;AAAd,MADF,CADF,CADF,CADY,EAQZC,IARY,CAQPC,YARO,CAAd;AAUAC,IAAAA,MAAM,CAACN,KAAK,CAACO,MAAP,CAAN,CAAqBC,IAArB,CAA0B,CAA1B;AACAF,IAAAA,MAAM,CAACN,KAAK,CAACS,EAAN,CAAS,CAAT,EAAYC,IAAZ,CAAiB,MAAjB,CAAD,CAAN,CAAiCF,IAAjC,CAAsC,OAAtC;AACAF,IAAAA,MAAM,CAACN,KAAK,CAACS,EAAN,CAAS,CAAT,EAAYC,IAAZ,CAAiB,MAAjB,CAAD,CAAN,CAAiCF,IAAjC,CAAsC,OAAtC;AACD,GAlBC,CAAF;AAoBAf,EAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAC9B,QAAMC,OAAO,GAAGC,oBAASC,OAAT,EAAhB;;AACA,QAAMe,kBAAkB,GAAGT,IAAI,CAACC,EAAL,EAA3B;AACA,QAAMS,MAAM,GAAG,sBACb,6BAAC,qBAAD,oBAAoBlB,OAApB;AAA6BiB,MAAAA,kBAAkB,EAAlBA;AAA7B,QACE,6BAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB,OACE,6BAAC,qBAAD;AAAqB,MAAA,MAAM;AAA3B,OACE,6BAAC,eAAD;AAAS,MAAA,IAAI,EAAC;AAAd,MADF,CADF,CADF,CADa,CAAf;AAUAC,IAAAA,MAAM,CAACR,IAAP,CAAY,sBAAZ,EAAoCS,QAApC,CAA6C,OAA7C;AAEA,QAAMC,OAAO,GAAGH,kBAAkB,CAACI,IAAnB,CAAwBC,KAAxB,CAA8B,CAA9B,EAAiC,CAAjC,CAAhB;AACAV,IAAAA,MAAM,CAACQ,OAAO,CAACG,MAAT,CAAN,CAAuBC,OAAvB,CAA+B;AAAC,wBAAkB;AAACnB,QAAAA,IAAI,EAAE;AAAP;AAAnB,KAA/B;AACD,GAjBC,CAAF;AAmBAN,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAM;AACjC,QAAMC,OAAO,GAAGC,oBAASC,OAAT,CAAiB;AAC/BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,WAAW,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,EAAkB;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAlB;AAAd;AADuB,KAAjB,CAAhB;;AAGA,QAAMoB,sBAAsB,GAAGjB,IAAI,CAACC,EAAL,EAA/B;AACA,QAAMS,MAAM,GAAG,sBACb,6BAAC,qBAAD,oBAAoBlB,OAApB;AAA6ByB,MAAAA,sBAAsB,EAAtBA;AAA7B,QACE,6BAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB,OACE,6BAAC,qBAAD;AAAqB,MAAA,MAAM;AAA3B,OACE,6BAAC,eAAD;AAAS,MAAA,IAAI,EAAC;AAAd,MADF,CADF,CADF,CADa,CAAf;AASAP,IAAAA,MAAM,CACHR,IADH,CACQ,kBADR,EAEGK,EAFH,CAEM,CAFN,EAGGI,QAHH,CAGY,OAHZ;AAKA,QAAMI,MAAM,GAAGE,sBAAsB,CAACJ,IAAvB,CAA4BC,KAA5B,CAAkC,CAAlC,EAAqC,CAArC,CAAf;AACAV,IAAAA,MAAM,CAACW,MAAM,CAACG,eAAR,CAAN,CAA+BZ,IAA/B,CAAoC,CAApC;AACD,GArBC,CAAF;AAsBD,CA9DO,CAAR","sourcesContent":["import React from 'react';\nimport {AnnotationAccordion, PlotlyPanel, PlotlyFold} from '..';\nimport {Numeric} from '../../fields';\nimport {TestEditor, fixtures, mount} from 'lib/test-utils';\nimport {connectLayoutToPlot} from 'lib';\n\nconst LayoutPanel = connectLayoutToPlot(PlotlyPanel);\n\ndescribe('<AnnotationAccordion>', () => {\n  it('generates annotation PlotlyFolds with name == text', () => {\n    const fixture = fixtures.scatter({\n      layout: {annotations: [{text: 'hodor'}, {text: 'rodoh'}]},\n    });\n\n    const folds = mount(\n      <TestEditor {...{...fixture, onUpdate: jest.fn()}}>\n        <LayoutPanel name=\"Annotations\">\n          <AnnotationAccordion>\n            <Numeric attr=\"textangle\" />\n          </AnnotationAccordion>\n        </LayoutPanel>\n      </TestEditor>\n    ).find(PlotlyFold);\n\n    expect(folds.length).toBe(2);\n    expect(folds.at(0).prop('name')).toBe('hodor');\n    expect(folds.at(1).prop('name')).toBe('rodoh');\n  });\n\n  it('can add annotations', () => {\n    const fixture = fixtures.scatter();\n    const beforeUpdateLayout = jest.fn();\n    const editor = mount(\n      <TestEditor {...{...fixture, beforeUpdateLayout}}>\n        <LayoutPanel name=\"Annotations\">\n          <AnnotationAccordion canAdd>\n            <Numeric attr=\"textangle\" />\n          </AnnotationAccordion>\n        </LayoutPanel>\n      </TestEditor>\n    );\n\n    editor.find('button.js-add-button').simulate('click');\n\n    const payload = beforeUpdateLayout.mock.calls[0][0];\n    expect(payload.update).toEqual({'annotations[0]': {text: 'new text'}});\n  });\n\n  it('can delete annotations', () => {\n    const fixture = fixtures.scatter({\n      layout: {annotations: [{text: 'hodor'}, {text: 'rodoh'}]},\n    });\n    const beforeDeleteAnnotation = jest.fn();\n    const editor = mount(\n      <TestEditor {...{...fixture, beforeDeleteAnnotation}}>\n        <LayoutPanel name=\"Annotations\">\n          <AnnotationAccordion canAdd>\n            <Numeric attr=\"textangle\" />\n          </AnnotationAccordion>\n        </LayoutPanel>\n      </TestEditor>\n    );\n    editor\n      .find('.js-fold__delete')\n      .at(0)\n      .simulate('click');\n\n    const update = beforeDeleteAnnotation.mock.calls[0][0];\n    expect(update.annotationIndex).toBe(0);\n  });\n});\n"],"file":"AnnotationAccordion-test.js"}