{"version":3,"sources":["../../../../src/components/containers/__tests__/UnconnectedContainersVisibility-test.js"],"names":["describe","wrapper","fixtures","scatter","it","expect","find","length","toEqual","Fold","first","props","folded","toBe","toggleFold"],"mappings":"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","sourcesContent":["import {Numeric, Info} from '../../fields';\nimport {Panel, Fold, Section, LayoutPanel, PlotlySection} from '..';\nimport React from 'react';\nimport {TestEditor, fixtures, mount} from 'lib/test-utils';\n\n// Stylistically Panel, Fold, Section are the same as PlotlyPanel, PlotlyFold, PlotlySection\n// but unlike them, they have no special visibility rules, they always display themselves\n// and their children.\n\ndescribe('Basic Panel rules', () => {\n  describe('not connected, provides no context, cannot use with Fields', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <Panel>\n          <div id=\"thediv\"> ok </div>\n          <Numeric attr=\"title\" />\n        </Panel>\n      </TestEditor>\n    );\n\n    it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n    it('SHOWS div which does not need context', () =>\n      expect(wrapper.find('input').length).toEqual(0));\n  });\n\n  describe(\"displays all it's children\", () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <Panel>\n          <Section>\n            <div id=\"thediv\"> ok </div>\n            <Numeric attr=\"title\" />\n          </Section>\n          <Fold>\n            <div id=\"theseconddiv\" />\n          </Fold>\n          <Fold>\n            <Info />\n          </Fold>\n        </Panel>\n      </TestEditor>\n    );\n\n    it('SHOWS Section, Fold, #thediv, #theseconddiv, Info', () => {\n      expect(wrapper.find('div.section').length).toEqual(1);\n      expect(wrapper.find('div.fold').length).toEqual(2);\n      expect(wrapper.find('#thediv').length).toEqual(1);\n      expect(wrapper.find('#theseconddiv').length).toEqual(1);\n      expect(wrapper.find('.js-test-info').length).toEqual(1);\n    });\n\n    it('HIDES Field because it needs context', () =>\n      expect(wrapper.find('input').length).toEqual(0));\n\n    it('PANEL shows collapse functionality, FOLD is foldable', () => {\n      expect(wrapper.find('.panel__header__collapse').length).toEqual(1);\n      expect(\n        wrapper\n          .find(Fold)\n          .first()\n          .props().folded\n      ).toBe(false);\n      expect(\n        typeof wrapper\n          .find(Fold)\n          .first()\n          .props().toggleFold\n      ).toBe('function');\n    });\n  });\n});\n\ndescribe('Basic Section rules', () => {\n  describe('always shows itself and its children', () => {\n    describe('Panel > Section > Field-with-visible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <Panel>\n            <Section>\n              <Numeric attr=\"title\" />\n            </Section>\n          </Panel>\n        </TestEditor>\n      );\n\n      it('SHOWS Section because it always shows itself', () =>\n        expect(wrapper.find('div.section').length).toEqual(1));\n      it(\"HIDES Field because there's no context for it\", () =>\n        expect(wrapper.find('input').length).toEqual(0));\n    });\n\n    describe('PlotlyPanel > Section > Field-with-visible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <Section>\n              <Numeric attr=\"title\" />\n            </Section>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('SHOWS Section because it always shows itself', () =>\n        expect(wrapper.find('div.section').length).toEqual(1));\n      it('SHOWS Field', () => expect(wrapper.find('input').length).toEqual(1));\n    });\n\n    describe('PlotlyPanel > Section > Field-with-invisible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <Section>\n              <Numeric attr=\"not_an_attr\" />\n            </Section>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('SHOWS Section because it always shows itself', () =>\n        expect(wrapper.find('div.section').length).toEqual(1));\n      it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n    });\n\n    describe('Panel > Section > div', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <Panel>\n            <Section>\n              <div id=\"thediv\" />\n            </Section>\n          </Panel>\n        </TestEditor>\n      );\n\n      it('SHOWS PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n      it('SHOWS div', () => expect(wrapper.find('#thediv').length).toEqual(1));\n    });\n  });\n});\n\ndescribe('Basic Fold rules', () => {\n  describe('always shows itself and its children', () => {\n    describe('Panel > Fold > Field-with-visible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <Panel>\n            <Fold>\n              <Numeric attr=\"title\" />\n            </Fold>\n          </Panel>\n        </TestEditor>\n      );\n      it('SHOWS Fold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n      it('HIDES Field because it has no context', () =>\n        expect(wrapper.find('input').length).toEqual(0));\n    });\n\n    describe('LayoutPanel > Fold > Field-with-visible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <Fold>\n              <Numeric attr=\"title\" />\n            </Fold>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('SHOWS Fold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n      it('SHOWS Field', () => expect(wrapper.find('input').length).toEqual(1));\n    });\n\n    describe('LayoutPanel > Fold > Field-with-invisible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <Fold>\n              <Numeric attr=\"not_an_attr\" />\n            </Fold>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('SHOWS Fold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n      it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n    });\n\n    describe('Panel > Fold > div', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <Panel>\n            <Fold>\n              <div id=\"thediv\"> ok </div>\n            </Fold>\n          </Panel>\n        </TestEditor>\n      );\n\n      it('SHOWS Fold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n      it('SHOWS div', () => expect(wrapper.find('#thediv').length).toEqual(1));\n    });\n\n    describe('no_visibility_forcing, plotly_editor_trait have no effect', () => {\n      describe('PlotlySection', () => {\n        describe('div', () => {\n          const wrapper = mount(\n            <TestEditor {...fixtures.scatter()}>\n              <Panel>\n                <Fold>\n                  <PlotlySection>\n                    <div id=\"thediv\"> ok </div>\n                  </PlotlySection>\n                </Fold>\n              </Panel>\n            </TestEditor>\n          );\n          it('SHOWS Fold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n          it('SHOWS PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n          it('SHOWS div', () => expect(wrapper.find('#thediv').length).toEqual(1));\n        });\n\n        describe('Field-with-visible-attr', () => {\n          const wrapper = mount(\n            <TestEditor {...fixtures.scatter()}>\n              <LayoutPanel>\n                <Fold>\n                  <PlotlySection>\n                    <Numeric attr=\"title\" />\n                  </PlotlySection>\n                </Fold>\n              </LayoutPanel>\n            </TestEditor>\n          );\n          it('SHOWS Fold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n          it('SHOWS PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n          it('SHOWS Field', () => expect(wrapper.find('input').length).toEqual(1));\n        });\n\n        describe('Field-with-invisible-attr', () => {\n          const wrapper = mount(\n            <TestEditor {...fixtures.scatter()}>\n              <LayoutPanel>\n                <Fold>\n                  <PlotlySection>\n                    <Numeric attr=\"not_an_attr\" />\n                  </PlotlySection>\n                </Fold>\n              </LayoutPanel>\n            </TestEditor>\n          );\n\n          it('SHOWS Fold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n          it('HIDES PlotlySection because Plotly Section visibility rules apply', () =>\n            expect(wrapper.find('div.section').length).toEqual(0));\n          it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n        });\n      });\n    });\n\n    describe('PlotlyPanel', () => {\n      describe('Field-with-visible-attr', () => {\n        const wrapper = mount(\n          <TestEditor {...fixtures.scatter()}>\n            <LayoutPanel>\n              <Fold>\n                <LayoutPanel>\n                  <Numeric attr=\"title\" />\n                </LayoutPanel>\n              </Fold>\n            </LayoutPanel>\n          </TestEditor>\n        );\n\n        it('SHOWS Fold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n        it('SHOWS PlotlyPanel', () => expect(wrapper.find('div.panel').length).toEqual(2));\n        it('SHOWS Field', () => expect(wrapper.find('input').length).toEqual(1));\n      });\n    });\n\n    describe('Info', () => {\n      describe('Field-with-visible-attr', () => {\n        const wrapper = mount(\n          <TestEditor {...fixtures.scatter()}>\n            <LayoutPanel>\n              <Fold>\n                <Info>ok</Info>\n              </Fold>\n            </LayoutPanel>\n          </TestEditor>\n        );\n\n        it('SHOWS Fold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n        it('SHOWS Info', () => expect(wrapper.find('.js-test-info').length).toEqual(1));\n      });\n    });\n  });\n});\n"],"file":"UnconnectedContainersVisibility-test.js"}