{"version":3,"sources":["../../../../src/components/containers/__tests__/ConnectedContainersVisibility-test.js"],"names":["describe","wrapper","fixtures","scatter","it","expect","find","length","toEqual","customConfig","visibility_rules","blacklist","type","regex_match"],"mappings":"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","sourcesContent":["import {Numeric, Info} from '../../fields';\nimport {LayoutPanel, PlotlyFold, PlotlySection} from '..';\nimport React from 'react';\nimport {TestEditor, fixtures, mount} from 'lib/test-utils';\n\n// Visibility rules are computed Top -> Down,\n// I.E. PlotlyPanel > PlotlyFold > PlotlySection > Field (Numeric)\n// PlotlyFold decides if it's going to render itself and it's children depending\n// on child type vs PlotlySection communicating visibility decisions up to PlotlyFold\n\ndescribe('Basic PlotlyPanel rules', () => {\n  describe('no PlotlyPanel, no context for Fields', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <div>\n          <div id=\"thediv\"> ok </div>\n          <Numeric attr=\"title\" />\n        </div>\n      </TestEditor>\n    );\n\n    it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n    it('SHOWS div which does not need context', () =>\n      expect(wrapper.find('input').length).toEqual(0));\n  });\n\n  describe('PlotlyPanel gives context to Field', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <Numeric attr=\"title\" />\n        </LayoutPanel>\n      </TestEditor>\n    );\n    it('SHOWS Field', () => expect(wrapper.find('input').length).toEqual(1));\n  });\n\n  describe('no PlotlyPanel, does not affect PlotlySection', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <div>\n          <PlotlySection>\n            <div id=\"thediv\"> ok </div>\n            <Numeric attr=\"title\" />\n          </PlotlySection>\n        </div>\n      </TestEditor>\n    );\n\n    it('SHOWS PlotlySection and #thediv', () => {\n      expect(wrapper.find('div.section').length).toEqual(1);\n      expect(wrapper.find('#thediv').length).toEqual(1);\n    });\n\n    it('HIDES Field because it needs context from PlotlyPanel', () =>\n      expect(wrapper.find('input').length).toEqual(0));\n  });\n});\n\ndescribe('Basic PlotlySection rules', () => {\n  describe('hides itself when it has no visible children', () => {\n    describe('PlotlyPanel > PlotlySection > Field-with-no-visible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <PlotlySection>\n              <Numeric attr=\"not_an_attr\" />\n            </PlotlySection>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n      it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n    });\n\n    describe('PlotlyPanel > PlotlySection > Field-with-no-visible-attr-based-on-customConfig', () => {\n      const wrapper = mount(\n        <TestEditor\n          {...fixtures.scatter({\n            customConfig: {\n              visibility_rules: {\n                blacklist: [{type: 'attrName', regex_match: 'color'}],\n              },\n            },\n          })}\n        >\n          <LayoutPanel>\n            <PlotlySection>\n              <Numeric attr=\"title.font.color\" />\n            </PlotlySection>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('HIDES Field based on customConfig', () =>\n        expect(wrapper.find('input').length).toEqual(0));\n      it('HIDES PlotlySection because no visible children according to custom config', () =>\n        expect(wrapper.find('div.section').length).toEqual(0));\n    });\n\n    describe('PlotlyPanel > PlotlySection > Field-with-no-visible-attr-based-on-customConfig', () => {\n      const wrapper = mount(\n        <TestEditor\n          {...fixtures.scatter({\n            customConfig: {\n              visibility_rules: {\n                blacklist: [{type: 'attrName', regex_match: 'color'}],\n              },\n            },\n          })}\n        >\n          <LayoutPanel>\n            <PlotlySection attr=\"title\">\n              <Numeric attr=\"title.font.color\" />\n              <Numeric attr=\"title\" />\n            </PlotlySection>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('HIDES the title.font.color Field based on customConfig', () =>\n        expect(wrapper.find('input').length).toEqual(1));\n      it('SHOWS PlotlySection if it has an attr that is accepted by customConfig', () =>\n        expect(wrapper.find('div.section').length).toEqual(1));\n    });\n\n    describe('div > PlotlySection > Field-with-visible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <div>\n            <PlotlySection>\n              <Numeric attr=\"title\" />\n            </PlotlySection>\n          </div>\n        </TestEditor>\n      );\n\n      it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n      it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n    });\n  });\n\n  describe('shows itself when it has visible children', () => {\n    describe('PlotlyPanel > PlotlySection > Field-with-visible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <PlotlySection>\n              <Numeric attr=\"title\" />\n            </PlotlySection>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('SHOWS PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n      it('SHOWS Field', () => expect(wrapper.find('input').length).toEqual(1));\n    });\n\n    describe('PlotlyPanel > PlotlySection > div', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <PlotlySection>\n              <div id=\"thediv\" />\n              <Numeric attr=\"not_an_attr\" />\n            </PlotlySection>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('SHOWS PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n      it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n      it('SHOWS div', () => expect(wrapper.find('#thediv').length).toEqual(1));\n    });\n  });\n});\n\ndescribe('Basic PlotlyFold rules', () => {\n  describe('when children have an attr prop', () => {\n    describe('Field-with-visible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <PlotlyFold>\n              <Numeric attr=\"title\" />\n            </PlotlyFold>\n          </LayoutPanel>\n        </TestEditor>\n      );\n      it('SHOWS PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n      it('SHOWS Field', () => expect(wrapper.find('input').length).toEqual(1));\n    });\n\n    describe('Field-with-invisible-attr', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <PlotlyFold>\n              <Numeric attr=\"not_an_attr\" />\n            </PlotlyFold>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n      it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n    });\n  });\n\n  describe('when childen do not have an attr prop', () => {\n    describe('div', () => {\n      const wrapper = mount(\n        <TestEditor {...fixtures.scatter()}>\n          <LayoutPanel>\n            <PlotlyFold>\n              <div id=\"thediv\"> ok </div>\n            </PlotlyFold>\n          </LayoutPanel>\n        </TestEditor>\n      );\n\n      it('SHOWS PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n      it('SHOWS div', () => expect(wrapper.find('#thediv').length).toEqual(1));\n    });\n\n    describe('when children have a no_visibility_forcing, plotly_editor_trait', () => {\n      describe('PlotlySection', () => {\n        describe('div', () => {\n          const wrapper = mount(\n            <TestEditor {...fixtures.scatter()}>\n              <LayoutPanel>\n                <PlotlyFold>\n                  <PlotlySection>\n                    <div id=\"thediv\"> ok </div>\n                  </PlotlySection>\n                </PlotlyFold>\n              </LayoutPanel>\n            </TestEditor>\n          );\n          it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n          it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n          it('HIDES div', () => expect(wrapper.find('#thediv').length).toEqual(0));\n        });\n\n        describe('Field-with-visible-attr', () => {\n          const wrapper = mount(\n            <TestEditor {...fixtures.scatter()}>\n              <LayoutPanel>\n                <PlotlyFold>\n                  <PlotlySection>\n                    <Numeric attr=\"title\" />\n                  </PlotlySection>\n                </PlotlyFold>\n              </LayoutPanel>\n            </TestEditor>\n          );\n          it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n          it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n          it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n        });\n\n        describe('Field-with-invisible-attr', () => {\n          const wrapper = mount(\n            <TestEditor {...fixtures.scatter()}>\n              <LayoutPanel>\n                <PlotlyFold>\n                  <PlotlySection>\n                    <Numeric attr=\"not_an_attr\" />\n                  </PlotlySection>\n                </PlotlyFold>\n              </LayoutPanel>\n            </TestEditor>\n          );\n\n          it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n          it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n          it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n        });\n      });\n    });\n\n    describe('PlotlyPanel', () => {\n      describe('Field-with-visible-attr', () => {\n        const wrapper = mount(\n          <TestEditor {...fixtures.scatter()}>\n            <LayoutPanel>\n              <PlotlyFold>\n                <LayoutPanel>\n                  <Numeric attr=\"title\" />\n                </LayoutPanel>\n              </PlotlyFold>\n            </LayoutPanel>\n          </TestEditor>\n        );\n\n        it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n        it('HIDES inner PlotlyPanel', () => expect(wrapper.find('div.panel').length).toEqual(1));\n        it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n      });\n    });\n\n    describe('Info', () => {\n      describe('Field-with-visible-attr', () => {\n        const wrapper = mount(\n          <TestEditor {...fixtures.scatter()}>\n            <LayoutPanel>\n              <PlotlyFold>\n                <Info>\n                  <Numeric attr=\"title\" />\n                </Info>\n              </PlotlyFold>\n            </LayoutPanel>\n          </TestEditor>\n        );\n\n        it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n        it('HIDES Info', () => expect(wrapper.find('.js-test-info').length).toEqual(0));\n        it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n      });\n    });\n\n    describe('no_visibility_forcing containers can be visibility forcing with a visible attr', () => {\n      describe('PlotlySection-with-visible-attr', () => {\n        const wrapper = mount(\n          <TestEditor {...fixtures.scatter()}>\n            <LayoutPanel>\n              <PlotlyFold>\n                <PlotlySection attr=\"title\">\n                  <Numeric attr=\"not_an_attr\" />\n                </PlotlySection>\n              </PlotlyFold>\n            </LayoutPanel>\n          </TestEditor>\n        );\n\n        it('SHOWS PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n        it('SHOWS PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n        it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n      });\n\n      describe('PlotlySection-with-invisible-attr', () => {\n        const wrapper = mount(\n          <TestEditor {...fixtures.scatter()}>\n            <LayoutPanel>\n              <PlotlyFold>\n                <PlotlySection attr=\"not_an_attr\">\n                  <Numeric attr=\"title\" />\n                </PlotlySection>\n              </PlotlyFold>\n            </LayoutPanel>\n          </TestEditor>\n        );\n\n        it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n        it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n        it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n      });\n    });\n  });\n});\n\ndescribe('Other ways to force PlotlyFold visibility', () => {\n  describe('Adding a custom component as child of PlotlyFold', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <p>I force visibility of the fold</p>\n            <PlotlySection>\n              <div id=\"thediv\"> ok </div>\n            </PlotlySection>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n    it('shows PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n    it('shows PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n    it('shows div', () => expect(wrapper.find('#thediv').length).toEqual(1));\n  });\n\n  // What most of DefaultPanels do\n  describe('adding a Field with visible attr as child of PlotlyFold', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <Numeric attr=\"width\" />\n            <PlotlySection>\n              <div id=\"thediv\"> ok </div>\n              <Numeric attr=\"title\" />\n            </PlotlySection>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n    it('shows PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(1));\n    it('shows PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n    it('shows div', () => expect(wrapper.find('#thediv').length).toEqual(1));\n    it('shows Field in PlotlySection', () => expect(wrapper.find('input').length).toEqual(2));\n  });\n\n  describe('adding a Field with invisible attr will hide PlotlyFold', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <Numeric attr=\"not_an_attr\" />\n            <PlotlySection>\n              <Numeric attr=\"not_an_attr\" />\n            </PlotlySection>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n\n    it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n    it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n    it('HIDES Field in PlotlySection', () => expect(wrapper.find('input').length).toEqual(0));\n  });\n});\n\n// nothing in the lower level PlotlyFold can force the upper one open\n\ndescribe('PlotlyPanel > PlotlyFold > PlotlyPanel > PlotlyFold', () => {\n  describe('div', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <LayoutPanel>\n              <PlotlyFold>\n                <div id=\"thediv\"> ok </div>\n              </PlotlyFold>\n            </LayoutPanel>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n\n    it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n    it('HIDES div', () => expect(wrapper.find('#thediv').length).toEqual(0));\n  });\n\n  describe('Field-with-visible-attr', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <LayoutPanel>\n              <PlotlyFold>\n                <Numeric attr=\"title\" />\n              </PlotlyFold>\n            </LayoutPanel>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n    it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n    it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n  });\n\n  describe('Field-with-invisible-attr', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <LayoutPanel>\n              <PlotlyFold>\n                <Numeric attr=\"not_an_attr\" />\n              </PlotlyFold>\n            </LayoutPanel>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n\n    it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n    it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n  });\n});\n\ndescribe('PlotlyPanel > PlotlyFold > PlotlyPanel > PlotlyFold > PlotlySection', () => {\n  describe('div', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <LayoutPanel>\n              <PlotlyFold>\n                <PlotlySection>\n                  <div id=\"thediv\"> ok </div>\n                </PlotlySection>\n              </PlotlyFold>\n            </LayoutPanel>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n\n    it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n    it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n    it('HIDES div', () => expect(wrapper.find('#thediv').length).toEqual(0));\n  });\n\n  describe('Field-with-visible-attr', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <LayoutPanel>\n              <PlotlyFold>\n                <PlotlySection>\n                  <Numeric attr=\"title\" />\n                </PlotlySection>\n              </PlotlyFold>\n            </LayoutPanel>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n    it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n    it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n    it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n  });\n\n  describe('Field-with-invisible-attr', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <LayoutPanel>\n              <PlotlyFold>\n                <PlotlySection>\n                  <Numeric attr=\"not_an_attr\" />\n                </PlotlySection>\n              </PlotlyFold>\n            </LayoutPanel>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n\n    it('HIDES PlotlyFold', () => expect(wrapper.find('div.fold').length).toEqual(0));\n    it('HIDES PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(0));\n    it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n  });\n});\n\n// Lower level PlotlyPanel with visible attr forces the upper PlotlyFold open, and visible\n// attr on PlotlySection forces the lower PlotlyFold open\n\ndescribe('PlotlyPanel > PlotlyFold > PlotlyPanel-with-visible-attr > PlotlyFold > PlotlySection-with-visible-attr', () => {\n  describe('div', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <LayoutPanel attr=\"title\">\n              <PlotlyFold>\n                <PlotlySection attr=\"title\">\n                  <div id=\"thediv\"> ok </div>\n                </PlotlySection>\n              </PlotlyFold>\n            </LayoutPanel>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n\n    it('shows 2 PlotlyFolds', () => expect(wrapper.find('div.fold').length).toEqual(2));\n    it('shows PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n    it('shows div', () => expect(wrapper.find('#thediv').length).toEqual(1));\n  });\n\n  describe('Field-with-visible-attr', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <LayoutPanel attr=\"title\">\n              <PlotlyFold>\n                <PlotlySection attr=\"title\">\n                  <Numeric attr=\"title\" />\n                </PlotlySection>\n              </PlotlyFold>\n            </LayoutPanel>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n    it('shows 2 PlotlyFolds', () => expect(wrapper.find('div.fold').length).toEqual(2));\n    it('shows PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n    it('shows Field', () => expect(wrapper.find('input').length).toEqual(1));\n  });\n\n  describe('Field-with-invisible-attr', () => {\n    const wrapper = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <LayoutPanel>\n          <PlotlyFold>\n            <LayoutPanel attr=\"title\">\n              <PlotlyFold>\n                <PlotlySection attr=\"title\">\n                  <Numeric attr=\"not_an_attr\" />\n                </PlotlySection>\n              </PlotlyFold>\n            </LayoutPanel>\n          </PlotlyFold>\n        </LayoutPanel>\n      </TestEditor>\n    );\n\n    it('shows 2 PlotlyFolds', () => expect(wrapper.find('div.fold').length).toEqual(2));\n    it('shows PlotlySection', () => expect(wrapper.find('div.section').length).toEqual(1));\n    it('HIDES Field', () => expect(wrapper.find('input').length).toEqual(0));\n  });\n});\n"],"file":"ConnectedContainersVisibility-test.js"}