{"version":3,"sources":["../../../src/components/containers/MapboxLayersAccordion.js"],"names":["MapboxLayersFold","PlotlyFold","MapboxLayersAccordion","context","fullContainer","layers","_","localize","meta","layout","children","props","content","length","map","layer","i","name","addAction","label","handler","updateContainer","mapboxLayerIndex","Array","isArray","sourcetype","below","Component","contextTypes","PropTypes","object","func","propTypes","node","plotly_editor_traits","no_visibility_forcing"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG,gCAAsBC,mBAAtB,CAAzB;;IAEMC,qB;;;;;;;;;;;;;6BACK;AAAA,0BAKH,KAAKC,OALF;AAAA,gDAELC,aAFK,CAEWC,MAFX;AAAA,UAEWA,MAFX,sCAEoB,EAFpB;AAAA,UAGKC,CAHL,iBAGLC,QAHK;AAAA,UAIGC,IAJH,iBAILC,MAJK;AAAA,UAMAC,QANA,GAMY,KAAKC,KANjB,CAMAD,QANA;AAQP,UAAME,OAAO,GACXP,MAAM,CAACQ,MAAP,IACAR,MAAM,CAACS,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR;AAAA,eACT,6BAAC,gBAAD;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,gBAAgB,EAAEA,CAFpB;AAGE,UAAA,IAAI,EAAE,kCAAwBD,KAAK,CAACE,IAA9B,EAAoC;AAACT,YAAAA,IAAI,EAAJA;AAAD,WAApC,CAHR;AAIE,UAAA,SAAS,EAAE;AAJb,WAMGE,QANH,CADS;AAAA,OAAX,CAFF;AAaA,UAAMQ,SAAS,GAAG;AAChBC,QAAAA,KAAK,EAAEb,CAAC,CAAC,OAAD,CADQ;AAEhBc,QAAAA,OAAO,EAAE,iBAAAjB,OAAO,EAAI;AAAA,cACXC,aADW,GACuBD,OADvB,CACXC,aADW;AAAA,cACIiB,eADJ,GACuBlB,OADvB,CACIkB,eADJ;;AAElB,cAAIA,eAAJ,EAAqB;AACnB,gBAAMC,gBAAgB,GAAGC,KAAK,CAACC,OAAN,CAAcpB,aAAa,CAACC,MAA5B,IACrBD,aAAa,CAACC,MAAd,CAAqBQ,MADA,GAErB,CAFJ;AAIAQ,YAAAA,eAAe,sCACFC,gBADE,QACoB;AAC/BL,cAAAA,IAAI,kBAAWK,gBAAX,CAD2B;AAE/BG,cAAAA,UAAU,EAAE,QAFmB;AAG/BC,cAAAA,KAAK,EAAE;AAHwB,aADpB,EAAf;AAOD;AACF;AAjBe,OAAlB;AAoBA,aACE,6BAAC,oBAAD;AAAa,QAAA,SAAS,EAAER,SAAxB;AAAmC,QAAA,UAAU;AAA7C,SACGN,OAAO,GAAGA,OAAH,GAAa,IADvB,CADF;AAKD;;;;EA/CiCe,gB;;AAkDpCzB,qBAAqB,CAAC0B,YAAtB,GAAqC;AACnCxB,EAAAA,aAAa,EAAEyB,mBAAUC,MADU;AAEnCvB,EAAAA,QAAQ,EAAEsB,mBAAUE,IAFe;AAGnCtB,EAAAA,MAAM,EAAEoB,mBAAUC;AAHiB,CAArC;AAMA5B,qBAAqB,CAAC8B,SAAtB,GAAkC;AAChCtB,EAAAA,QAAQ,EAAEmB,mBAAUI;AADY,CAAlC;AAIA/B,qBAAqB,CAACgC,oBAAtB,GAA6C;AAC3CC,EAAAA,qBAAqB,EAAE;AADoB,CAA7C;eAIejC,qB","sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport PlotlyPanel from './PlotlyPanel';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectLayersToMapbox, getParsedTemplateString} from 'lib';\n\nconst MapboxLayersFold = connectLayersToMapbox(PlotlyFold);\n\nclass MapboxLayersAccordion extends Component {\n  render() {\n    const {\n      fullContainer: {layers = []},\n      localize: _,\n      layout: meta,\n    } = this.context;\n    const {children} = this.props;\n\n    const content =\n      layers.length &&\n      layers.map((layer, i) => (\n        <MapboxLayersFold\n          key={i}\n          mapboxLayerIndex={i}\n          name={getParsedTemplateString(layer.name, {meta})}\n          canDelete={true}\n        >\n          {children}\n        </MapboxLayersFold>\n      ));\n\n    const addAction = {\n      label: _('Layer'),\n      handler: context => {\n        const {fullContainer, updateContainer} = context;\n        if (updateContainer) {\n          const mapboxLayerIndex = Array.isArray(fullContainer.layers)\n            ? fullContainer.layers.length\n            : 0;\n\n          updateContainer({\n            [`layers[${mapboxLayerIndex}]`]: {\n              name: `Layer ${mapboxLayerIndex}`,\n              sourcetype: 'raster',\n              below: 'traces',\n            },\n          });\n        }\n      },\n    };\n\n    return (\n      <PlotlyPanel addAction={addAction} canReorder>\n        {content ? content : null}\n      </PlotlyPanel>\n    );\n  }\n}\n\nMapboxLayersAccordion.contextTypes = {\n  fullContainer: PropTypes.object,\n  localize: PropTypes.func,\n  layout: PropTypes.object,\n};\n\nMapboxLayersAccordion.propTypes = {\n  children: PropTypes.node,\n};\n\nMapboxLayersAccordion.plotly_editor_traits = {\n  no_visibility_forcing: true,\n};\n\nexport default MapboxLayersAccordion;\n"],"file":"MapboxLayersAccordion.js"}