{"version":3,"sources":["../../../src/components/containers/PanelHeader.js"],"names":["PanelHeader","state","addPanelOpen","togglePanel","bind","setState","_","context","localize","props","children","addAction","allowCollapse","toggleFolds","hasOpen","icon","length","Array","isArray","handler","label","map","Component","contextTypes","layout","PropTypes","object","fullContainer","onUpdate","func","updateContainer","propTypes","bool","node"],"mappings":"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","sourcesContent":["import Button from 'components/widgets/Button';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {PlusIcon, ResizeUpIcon, ResizeDownIcon} from 'plotly-icons';\n\nclass PanelHeader extends Component {\n  constructor() {\n    super();\n    this.state = {addPanelOpen: false};\n\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  togglePanel() {\n    this.setState({addPanelOpen: !this.state.addPanelOpen});\n  }\n\n  render() {\n    const {localize: _} = this.context;\n    const {children, addAction, allowCollapse, toggleFolds, hasOpen} = this.props;\n\n    // dropdown is styled with same styles as react-select component - see _dropdown.scss\n    const icon = <PlusIcon />;\n    return !children && !addAction && !allowCollapse ? null : (\n      <div className=\"panel__header\">\n        {children && children.length ? (\n          <div className=\"panel__header__content\">{children}</div>\n        ) : null}\n        <div className=\"panel__header__actions__container\">\n          {allowCollapse ? (\n            <div className=\"panel__header__collapse\" onClick={toggleFolds}>\n              {hasOpen ? (\n                <span>\n                  <ResizeDownIcon />\n                  {_('Collapse All')}\n                </span>\n              ) : (\n                <span>\n                  <ResizeUpIcon />\n                  {_('Expand All')}\n                </span>\n              )}\n            </div>\n          ) : null}\n\n          {addAction ? (\n            <div className=\"panel__header__action dropdown-container\">\n              <Button\n                variant=\"primary\"\n                className=\"js-add-button\"\n                onClick={\n                  Array.isArray(addAction.handler)\n                    ? this.togglePanel\n                    : () => addAction.handler(this.context)\n                }\n                icon={icon}\n                label={addAction.label}\n              />\n              {this.state.addPanelOpen && (\n                <div className=\"Select\">\n                  <div className=\"Select-menu-outer\">\n                    <div className=\"Select-menu\">\n                      {addAction.handler.map(({label, handler}) => (\n                        <div\n                          className=\"Select-option\"\n                          key={label}\n                          onClick={() => {\n                            handler(this.context);\n                            this.togglePanel();\n                          }}\n                        >\n                          {label}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nPanelHeader.contextTypes = {\n  layout: PropTypes.object,\n  fullContainer: PropTypes.object,\n  onUpdate: PropTypes.func,\n  updateContainer: PropTypes.func,\n  localize: PropTypes.func,\n};\n\nPanelHeader.propTypes = {\n  addAction: PropTypes.object,\n  allowCollapse: PropTypes.bool,\n  children: PropTypes.node,\n  hasOpen: PropTypes.bool,\n  toggleFolds: PropTypes.func,\n};\n\nexport default PanelHeader;\n"],"file":"PanelHeader.js"}