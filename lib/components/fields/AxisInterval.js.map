{"version":3,"sources":["../../../src/components/fields/AxisInterval.js"],"names":["MILLISECONDS_IN_SECOND","MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_DAY","DAYS_IN_MONTH","MONTHS_IN_YEAR","twoDecimalsRound","value","Math","round","getSmallestUnit","milliseconds","units","seconds","minutes","days","smallestUnit","forEach","unit","UnconnectedAxisInterval","props","initialUnit","fullValue","parseInt","substring","state","adjustedValue","isValueInteger","updatePlot","isFullValueMonthFormat","setState","includes","nbMonths","numericValue","_","context","localize","attrHead","attr","split","binStartValue","fullContainer","start","BinStartIsDate","tick0","colorbar","tick0IsDate","label","onUnitChange","width","display","getDisplayValue","update","Component","contextTypes","PropTypes","func","propTypes","oneOfType","number","string","object","Field"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Field from './Field';\nimport Dropdown from '../widgets/Dropdown';\nimport NumericInput from '../widgets/NumericInput';\nimport PropTypes from 'prop-types';\nimport {connectToContainer} from 'lib';\nimport {isDateTime} from 'plotly.js/src/lib';\nimport {isJSDate} from 'plotly.js/src/lib/dates';\n\nconst MILLISECONDS_IN_SECOND = 1000;\nconst MILLISECONDS_IN_MINUTE = MILLISECONDS_IN_SECOND * 60; // eslint-disable-line\nconst MILLISECONDS_IN_DAY = MILLISECONDS_IN_MINUTE * 60 * 24; // eslint-disable-line\nconst DAYS_IN_MONTH = 30;\nconst MONTHS_IN_YEAR = 12; //eslint-disable-line\n\nfunction twoDecimalsRound(value) {\n  return Math.round(value * 100) / 100;\n}\n\nfunction getSmallestUnit(milliseconds) {\n  const units = {\n    seconds: MILLISECONDS_IN_SECOND,\n    minutes: MILLISECONDS_IN_MINUTE,\n    days: MILLISECONDS_IN_DAY,\n  };\n\n  let smallestUnit = 'milliseconds';\n\n  ['seconds', 'minutes', 'days'].forEach(unit => {\n    if (\n      milliseconds % units[unit] === 0 &&\n      (smallestUnit === 'milliseconds' ||\n        (smallestUnit !== 'milliseconds' &&\n          milliseconds / units[smallestUnit] > milliseconds / units[unit]))\n    ) {\n      smallestUnit = unit;\n    }\n  });\n\n  return smallestUnit;\n}\n\nexport class UnconnectedAxisInterval extends Component {\n  constructor(props) {\n    super(props);\n\n    const initialUnit =\n      props.fullValue && typeof props.fullValue === 'string' && props.fullValue[0] === 'M'\n        ? parseInt(props.fullValue.substring(1), 10) % MONTHS_IN_YEAR === 0\n          ? 'years'\n          : 'months'\n        : getSmallestUnit(props.fullValue);\n\n    this.state = {\n      units: initialUnit,\n    };\n  }\n\n  update(value) {\n    let adjustedValue = value < 0 ? 0 : value;\n    const isValueInteger = adjustedValue % 1 === 0;\n\n    if (this.state.units === 'years') {\n      if (isValueInteger) {\n        adjustedValue = 'M' + adjustedValue * MONTHS_IN_YEAR;\n      } else {\n        adjustedValue = adjustedValue * MONTHS_IN_YEAR * DAYS_IN_MONTH * MILLISECONDS_IN_DAY;\n      }\n    }\n\n    if (this.state.units === 'months') {\n      if (isValueInteger) {\n        adjustedValue = 'M' + adjustedValue;\n      } else {\n        adjustedValue = adjustedValue * DAYS_IN_MONTH * MILLISECONDS_IN_DAY;\n      }\n    }\n\n    if (this.state.units === 'days') {\n      adjustedValue = adjustedValue * MILLISECONDS_IN_DAY;\n    }\n\n    if (this.state.units === 'minutes') {\n      adjustedValue = adjustedValue * MILLISECONDS_IN_MINUTE;\n    }\n\n    if (this.state.units === 'seconds') {\n      adjustedValue = adjustedValue * MILLISECONDS_IN_SECOND;\n    }\n\n    this.props.updatePlot(adjustedValue);\n  }\n\n  onUnitChange(value) {\n    const isFullValueMonthFormat =\n      typeof this.props.fullValue === 'string' && this.props.fullValue[0] === 'M';\n\n    const milliseconds = isFullValueMonthFormat\n      ? parseInt(this.props.fullValue.substring(1), 10) * DAYS_IN_MONTH * MILLISECONDS_IN_DAY\n      : this.props.fullValue;\n\n    this.setState({units: value});\n\n    if (['years', 'months'].includes(value)) {\n      const nbMonths = milliseconds / MILLISECONDS_IN_DAY / DAYS_IN_MONTH;\n      if (nbMonths % 1 === 0) {\n        this.props.updatePlot('M' + nbMonths);\n      } else {\n        this.props.updatePlot(milliseconds);\n      }\n    } else {\n      this.props.updatePlot(milliseconds);\n    }\n  }\n\n  getDisplayValue(value) {\n    const numericValue =\n      typeof value === 'string' && value[0] === 'M' ? parseInt(value.substring(1), 10) : value;\n\n    if (this.state.units === 'years') {\n      if (typeof value === 'string') {\n        return twoDecimalsRound(numericValue / MONTHS_IN_YEAR);\n      }\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_DAY / DAYS_IN_MONTH / MONTHS_IN_YEAR);\n    }\n    if (this.state.units === 'months') {\n      if (typeof value === 'string') {\n        return twoDecimalsRound(numericValue);\n      }\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_DAY / DAYS_IN_MONTH);\n    }\n    if (this.state.units === 'days') {\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_DAY);\n    }\n    if (this.state.units === 'minutes') {\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_MINUTE);\n    }\n    if (this.state.units === 'seconds') {\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_SECOND);\n    }\n    if (this.state.units === 'milliseconds') {\n      return numericValue;\n    }\n    return null;\n  }\n\n  render() {\n    const _ = this.context.localize;\n    const attrHead = this.props.attr.split('.')[0];\n    const binStartValue = this.props.fullContainer[attrHead].start;\n    const BinStartIsDate =\n      typeof binStartValue === 'string' && (isDateTime(binStartValue) || isJSDate(binStartValue));\n    const tick0 =\n      this.props.fullContainer.tick0 &&\n      (this.props.fullContainer.tick0 || this.props.fullContainer.colorbar.tick0);\n    const tick0IsDate = tick0 && (isDateTime(tick0) || isJSDate(tick0));\n\n    return BinStartIsDate || tick0IsDate ? (\n      <Field {...this.props}>\n        <Dropdown\n          options={[\n            {value: 'years', label: _('Years')},\n            {value: 'months', label: _('Months')},\n            {value: 'days', label: _('Days')},\n            {value: 'minutes', label: _('Minutes')},\n            {value: 'seconds', label: _('Seconds')},\n            {value: 'milliseconds', label: _('Milliseconds')},\n          ]}\n          clearable={false}\n          onChange={value => this.onUnitChange(value)}\n          value={this.state.units}\n        />\n        <div style={{width: '100%', display: 'block'}}> </div>\n        <NumericInput\n          value={this.getDisplayValue(this.props.fullValue)}\n          onUpdate={value => this.update(value)}\n          editableClassName=\"AxisInterval-milliseconds\"\n        />\n      </Field>\n    ) : (\n      <Field {...this.props}>\n        <NumericInput\n          value={this.props.fullValue}\n          onUpdate={value => this.props.updatePlot(value)}\n        />\n      </Field>\n    );\n  }\n}\n\nUnconnectedAxisInterval.contextTypes = {\n  localize: PropTypes.func,\n};\n\nUnconnectedAxisInterval.propTypes = {\n  fullValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  updatePlot: PropTypes.func,\n  attr: PropTypes.string,\n  fullContainer: PropTypes.object,\n  ...Field.propTypes,\n};\n\nexport default connectToContainer(UnconnectedAxisInterval);\n"],"file":"AxisInterval.js"}