{"version":3,"sources":["../../../src/components/fields/MultiColorPicker.js"],"names":["CustomColorscalePicker","UnconnectedColorscalePicker","modifyPlotProps","props","context","plotProps","attr","fullData","filter","t","traceIndexes","includes","index","every","marker","color","fullValue","map","UnconnectedMultiColorPicker","state","selectedConstantColorOption","length","v","setColor","bind","setColors","updatePlot","colorscale","colorscaleType","numberOfTraces","tracesToColor","colors","c","adjustedColors","repeat","updates","updateContainer","_","localize","constantOptions","label","value","parentSelectedConstantColorOption","multiMessage","multiColorMessage","singleMessage","singleColorMessage","onConstantColorOptionChange","setState","Component","propTypes","PropTypes","string","func","messageKeyWordSingle","messageKeyWordPlural","array","Field","contextTypes","displayName","isVisible","dedupedTraceIndexes","forEach","i","push","traceIndex","traces","trace","concat","get"],"mappings":"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","sourcesContent":["import ColorPicker from './ColorPicker';\nimport {UnconnectedColorscalePicker} from './ColorscalePicker';\nimport Field from './Field';\nimport Info from './Info';\nimport PropTypes from 'prop-types';\nimport RadioBlocks from '../widgets/RadioBlocks';\nimport React, {Component} from 'react';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport {adjustColorscale, connectToContainer} from 'lib';\n\nconst CustomColorscalePicker = connectToContainer(UnconnectedColorscalePicker, {\n  modifyPlotProps: (props, context, plotProps) => {\n    if (\n      props.attr === 'marker.color' &&\n      context.fullData\n        .filter(t => context.traceIndexes.includes(t.index))\n        .every(t => t.marker && t.marker.color) &&\n      plotProps.fullValue &&\n      typeof plotProps.fullValue === 'string'\n    ) {\n      plotProps.fullValue =\n        context.fullData &&\n        context.fullData\n          .filter(t => context.traceIndexes.includes(t.index))\n          .map(t => [0, t.marker.color]);\n    }\n  },\n});\n\nclass UnconnectedMultiColorPicker extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      selectedConstantColorOption:\n        context.traceIndexes.length > 1 &&\n        props.fullValue &&\n        props.fullValue.every(v => v[1] === props.fullValue[0][1])\n          ? 'single'\n          : 'multiple',\n    };\n    this.setColor = this.setColor.bind(this);\n    this.setColors = this.setColors.bind(this);\n  }\n\n  setColor(color) {\n    if (this.props.setColor) {\n      this.props.setColor(color);\n    } else {\n      this.props.updatePlot(color);\n    }\n  }\n\n  setColors(colorscale, colorscaleType) {\n    const numberOfTraces = this.props.tracesToColor.length;\n    const colors = colorscale.map(c => c[1]);\n\n    let adjustedColors = colors;\n\n    if (colorscaleType !== 'categorical') {\n      adjustedColors = adjustColorscale(colors, numberOfTraces, colorscaleType);\n    }\n\n    if (adjustedColors.every(c => c === adjustedColors[0]) || colorscaleType === 'categorical') {\n      adjustedColors = adjustColorscale(colors, numberOfTraces, colorscaleType, {repeat: true});\n    }\n\n    const updates = adjustedColors.map(color => ({\n      [this.props.attr]: color,\n    }));\n\n    this.context.updateContainer(updates);\n  }\n\n  render() {\n    const _ = this.context.localize;\n    const constantOptions = [\n      {label: _('Single'), value: 'single'},\n      {label: _('Multiple'), value: 'multiple'},\n    ];\n    const selectedConstantColorOption = this.props.parentSelectedConstantColorOption\n      ? this.props.parentSelectedConstantColorOption\n      : this.state.selectedConstantColorOption;\n\n    const multiMessage = this.props.multiColorMessage\n      ? this.props.multiColorMessage\n      : _('Each will be colored according to the selected colors.');\n\n    const singleMessage = this.props.singleColorMessage\n      ? this.props.singleColorMessage\n      : _('All will be colored in the same color.');\n\n    if (this.context.traceIndexes.length > 1) {\n      return (\n        <Field {...this.props} suppressMultiValuedMessage>\n          <RadioBlocks\n            options={constantOptions}\n            activeOption={selectedConstantColorOption}\n            onOptionChange={\n              this.props.onConstantColorOptionChange\n                ? this.props.onConstantColorOptionChange\n                : value => this.setState({selectedConstantColorOption: value})\n            }\n          />\n          <Info>{selectedConstantColorOption === 'single' ? singleMessage : multiMessage}</Info>\n          {selectedConstantColorOption === 'single' ? (\n            <ColorPicker attr={this.props.attr} updatePlot={this.setColor} />\n          ) : (\n            <CustomColorscalePicker\n              suppressMultiValuedMessage\n              attr={this.props.attr}\n              updatePlot={this.setColors}\n              fullValue={this.props.fullValue}\n              initialCategory={'categorical'}\n            />\n          )}\n        </Field>\n      );\n    }\n\n    return (\n      <ColorPicker attr={this.props.attr} updatePlot={this.setColor} label={this.props.label} />\n    );\n  }\n}\n\nUnconnectedMultiColorPicker.propTypes = {\n  multiColorMessage: PropTypes.string,\n  singleColorMessage: PropTypes.string,\n  updatePlot: PropTypes.func,\n  attr: PropTypes.string,\n  parentSelectedConstantColorOption: PropTypes.string,\n  onConstantColorOptionChange: PropTypes.func,\n  messageKeyWordSingle: PropTypes.string,\n  messageKeyWordPlural: PropTypes.string,\n  tracesToColor: PropTypes.array,\n  ...Field.propTypes,\n};\n\nUnconnectedMultiColorPicker.contextTypes = {\n  localize: PropTypes.func,\n  updateContainer: PropTypes.func,\n  traceIndexes: PropTypes.array,\n  fullData: PropTypes.array,\n};\n\nUnconnectedMultiColorPicker.displayName = 'UnconnectedMultiColorPicker';\n\nexport default connectToContainer(UnconnectedMultiColorPicker, {\n  modifyPlotProps(props, context, plotProps) {\n    if (plotProps.isVisible) {\n      const colors = [];\n      let tracesToColor = [];\n      const dedupedTraceIndexes = [];\n\n      context.traceIndexes.forEach(i => {\n        if (!dedupedTraceIndexes.includes(i)) {\n          dedupedTraceIndexes.push(i);\n        }\n      });\n\n      dedupedTraceIndexes.forEach(traceIndex => {\n        const traces = context.fullData.filter(trace => trace.index === traceIndex);\n        tracesToColor = tracesToColor.concat(traces);\n\n        traces.forEach(t => {\n          const value = nestedProperty(t, props.attr).get();\n          if (value) {\n            colors.push(value);\n          }\n        });\n      });\n\n      plotProps.tracesToColor = tracesToColor;\n      plotProps.fullValue = colors.map(c => [0, c]);\n    }\n  },\n});\n"],"file":"MultiColorPicker.js"}