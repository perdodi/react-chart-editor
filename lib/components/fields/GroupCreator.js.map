{"version":3,"sources":["../../../src/components/fields/GroupCreator.js"],"names":["UnconnectedGroupCreator","Set","context","data","map","t","props","attr","filter","g","Boolean","fullContainer","currentGroup","currentTraceIndex","index","MULTI_VALUED","getAllGroups","length","fullData","some","d","allGroups","parseInt","n","Number","isInteger","push","lastGroupNumber","Math","max","apply","updatePlot","_","localize","label","prefix","options","value","forEach","sort","a","b","icon","addButton","canAddGroup","addAndUpdateGroup","Component","propTypes","PropTypes","string","object","Field","contextTypes","func","array","displayName"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connectToContainer} from 'lib';\nimport Field from './Field';\nimport Dropdown from './Dropdown';\nimport PropTypes from 'prop-types';\nimport Button from '../widgets/Button';\nimport {PlusIcon} from 'plotly-icons';\nimport {MULTI_VALUED} from 'lib/constants';\n\nclass UnconnectedGroupCreator extends Component {\n  getAllGroups() {\n    return [...new Set(this.context.data.map(t => t[this.props.attr]))].filter(g => Boolean(g));\n  }\n\n  canAddGroup() {\n    const {fullContainer, attr} = this.props;\n    const currentGroup = fullContainer[attr];\n    const currentTraceIndex = fullContainer.index;\n\n    if (fullContainer.index === MULTI_VALUED) {\n      return this.getAllGroups().length === 0;\n    }\n\n    return (\n      !currentGroup ||\n      this.context.fullData.some(d => d.index !== currentTraceIndex && d[attr] === currentGroup)\n    );\n  }\n\n  addAndUpdateGroup() {\n    const allGroups = this.context.fullData\n      .map(t => parseInt(t[this.props.attr], 10))\n      .filter(n => Number.isInteger(n));\n    // don't want to pass empty array to max\n    allGroups.push(0);\n\n    const lastGroupNumber = Math.max.apply(Math, allGroups);\n\n    this.props.updatePlot(lastGroupNumber + 1);\n  }\n\n  render() {\n    const {localize: _} = this.context;\n    const {attr, label, prefix, updatePlot} = this.props;\n\n    const options = [{label: _('None'), value: ''}];\n    const allGroups = this.getAllGroups();\n    allGroups.forEach(g => options.push({label: `${prefix} ${g}`, value: g}));\n    options.sort((a, b) => a.value - b.value);\n\n    const icon = <PlusIcon />;\n    const addButton = this.canAddGroup() ? (\n      <Button variant=\"no-text\" icon={icon} onClick={() => this.addAndUpdateGroup()} />\n    ) : (\n      <Button variant=\"no-text--disabled\" icon={icon} onClick={() => {}} />\n    );\n\n    return (\n      <Dropdown\n        label={label}\n        attr={attr}\n        clearable={false}\n        options={options}\n        updatePlot={updatePlot}\n        extraComponent={addButton}\n      />\n    );\n  }\n}\n\nUnconnectedGroupCreator.propTypes = {\n  attr: PropTypes.string,\n  fullContainer: PropTypes.object,\n  prefix: PropTypes.string,\n  ...Field.propTypes,\n};\n\nUnconnectedGroupCreator.contextTypes = {\n  localize: PropTypes.func,\n  data: PropTypes.array,\n  fullData: PropTypes.array,\n};\n\nUnconnectedGroupCreator.displayName = 'UnconnectedGroupCreator';\n\nexport default connectToContainer(UnconnectedGroupCreator);\n"],"file":"GroupCreator.js"}