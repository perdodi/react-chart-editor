{"version":3,"sources":["../../../src/components/fields/ColorPicker.js"],"names":["UnconnectedColorPicker","props","context","state","empty","fullValue","handleEmpty","setState","updatePlot","defaultColor","Component","propTypes","PropTypes","any","func","bool","string","Field","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,sB;;;;;AACX,kCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,gGAAMD,KAAN,EAAaC,OAAb;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CAAC,MAAKH,KAAL,CAAWI,SAAZ,IAAyB,MAAKJ,KAAL,CAAWK;AADhC,KAAb;AAF0B;AAK3B;;;;6BAEQ;AAAA;;AACP,UAAI,KAAKH,KAAL,CAAWC,KAAf,EAAsB;AACpB,eACE,6BAAC,cAAD,EAAW,KAAKH,KAAhB,EACE;AAAK,UAAA,SAAS,EAAC;AAAf,gFACoE,GADpE,EAEE;AACE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACM,QAAL,CAAc;AAACH,cAAAA,KAAK,EAAE;AAAR,aAAd;;AACA,YAAA,MAAI,CAACH,KAAL,CAAWO,UAAX,CAAsB,MAAI,CAACP,KAAL,CAAWQ,YAAjC;AACD;AAJH,yBAFF,MADF,CADF;AAgBD;;AAED,aACE,6BAAC,cAAD,EAAW,KAAKR,KAAhB,EACE,6BAAC,oBAAD;AACE,QAAA,aAAa,EAAE,KAAKA,KAAL,CAAWI,SAD5B;AAEE,QAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWO;AAF5B,QADF,CADF;AAQD;;;;EApCyCE,gB;;;AAuC5CV,sBAAsB,CAACW,SAAvB;AACEN,EAAAA,SAAS,EAAEO,mBAAUC,GADvB;AAEEL,EAAAA,UAAU,EAAEI,mBAAUE,IAFxB;AAGER,EAAAA,WAAW,EAAEM,mBAAUG,IAHzB;AAIEN,EAAAA,YAAY,EAAEG,mBAAUI;AAJ1B,GAKKC,eAAMN,SALX;AAQAX,sBAAsB,CAACkB,WAAvB,GAAqC,wBAArC;;eAEe,6BAAmBlB,sBAAnB,C","sourcesContent":["import ColorPickerWidget from '../widgets/ColorPicker';\nimport Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectToContainer} from 'lib';\n\nexport class UnconnectedColorPicker extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      empty: !this.props.fullValue && this.props.handleEmpty,\n    };\n  }\n\n  render() {\n    if (this.state.empty) {\n      return (\n        <Field {...this.props}>\n          <div className=\"js-test-info\">\n            This color is computed from other parts of the figure but you can{' '}\n            <a\n              onClick={() => {\n                this.setState({empty: false});\n                this.props.updatePlot(this.props.defaultColor);\n              }}\n            >\n              override it\n            </a>\n            .\n          </div>\n        </Field>\n      );\n    }\n\n    return (\n      <Field {...this.props}>\n        <ColorPickerWidget\n          selectedColor={this.props.fullValue}\n          onColorChange={this.props.updatePlot}\n        />\n      </Field>\n    );\n  }\n}\n\nUnconnectedColorPicker.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  handleEmpty: PropTypes.bool,\n  defaultColor: PropTypes.string,\n  ...Field.propTypes,\n};\n\nUnconnectedColorPicker.displayName = 'UnconnectedColorPicker';\n\nexport default connectToContainer(UnconnectedColorPicker);\n"],"file":"ColorPicker.js"}