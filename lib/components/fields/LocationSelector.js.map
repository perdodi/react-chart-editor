{"version":3,"sources":["../../../src/components/fields/LocationSelector.js"],"names":["LocationmodeVisible","UnconnectedDropdown","modifyPlotProps","props","context","plotProps","fullValue","isVisible","container","locationmode","UnconnectedLocation","_","localize","label","value","Component","propTypes","attr","PropTypes","string","Field","contextTypes","func","updateContainer","Location","UnconnectedLocationSelector","state","mode","locations","setMode","bind","setState","locationssrc","locationmodesrc","lat","lon","latsrc","lonsrc","type","any","updatePlot","object"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connectToContainer} from 'lib';\nimport Field from './Field';\nimport Radio from './Radio';\nimport {UnconnectedDropdown} from './Dropdown';\nimport DataSelector from './DataSelector';\n\nconst LocationmodeVisible = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    if (!plotProps.fullValue) {\n      plotProps.isVisible = true;\n      plotProps.fullValue = plotProps.container.locationmode;\n      return;\n    }\n  },\n});\n\nclass UnconnectedLocation extends Component {\n  render() {\n    const {localize: _} = this.context;\n\n    return (\n      <>\n        <DataSelector label={_('Locations')} attr=\"locations\" />\n        <LocationmodeVisible\n          label={_('Location Format')}\n          attr=\"locationmode\"\n          clearable={false}\n          options={[\n            {label: _('Country Names'), value: 'country names'},\n            {label: _('Country Abbreviations (ISO-3)'), value: 'ISO-3'},\n            {\n              label: _('USA State Abbreviations (e.g. NY)'),\n              value: 'USA-states',\n            },\n          ]}\n        />\n      </>\n    );\n  }\n}\n\nUnconnectedLocation.propTypes = {\n  attr: PropTypes.string,\n  ...Field.propTypes,\n};\n\nUnconnectedLocation.contextTypes = {\n  localize: PropTypes.func,\n  updateContainer: PropTypes.func,\n};\n\nconst Location = connectToContainer(UnconnectedLocation);\n\nclass UnconnectedLocationSelector extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      mode: props.container.locations ? 'location' : 'latlon',\n    };\n\n    this.setMode = this.setMode.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      mode: this.props.container.locations ? 'location' : 'latlon',\n    });\n  }\n\n  setMode(mode) {\n    this.setState({mode: mode});\n    this.props.updateContainer(\n      mode === 'latlon'\n        ? {\n            locations: null,\n            locationmode: null,\n            locationssrc: null,\n            locationmodesrc: null,\n          }\n        : {lat: null, lon: null, latsrc: null, lonsrc: null}\n    );\n  }\n\n  render() {\n    const {mode} = this.state;\n    const {\n      localize: _,\n      container: {type: type},\n    } = this.context;\n\n    if (type === 'scattergeo') {\n      return (\n        <>\n          <Field {...this.props} attr={this.props.attr}>\n            <Radio\n              options={[\n                {value: 'latlon', label: _('Lat/Lon')},\n                {value: 'location', label: _('Location')},\n              ]}\n              fullValue={mode}\n              updatePlot={this.setMode}\n              attr={this.props.attr}\n            />\n          </Field>\n          {mode === 'latlon' ? (\n            <>\n              <DataSelector label={_('Latitude')} attr=\"lat\" />\n              <DataSelector label={_('Longitude')} attr=\"lon\" />\n            </>\n          ) : (\n            <Location attr=\"type\" />\n          )}\n        </>\n      );\n    } else if (type === 'choropleth') {\n      return <Location attr=\"type\" />;\n    } else if (type === 'choroplethmapbox') {\n      return <DataSelector label={_('Locations')} attr=\"locations\" />;\n    }\n    return (\n      <>\n        <DataSelector label={_('Latitude')} attr=\"lat\" />\n        <DataSelector label={_('Longitude')} attr=\"lon\" />\n      </>\n    );\n  }\n}\n\nUnconnectedLocationSelector.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  attr: PropTypes.string,\n  ...Field.propTypes,\n};\n\nUnconnectedLocationSelector.contextTypes = {\n  container: PropTypes.object,\n  localize: PropTypes.func,\n  updateContainer: PropTypes.func,\n};\n\nexport default connectToContainer(UnconnectedLocationSelector);\n"],"file":"LocationSelector.js"}