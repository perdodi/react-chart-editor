{"version":3,"sources":["../../../src/components/fields/MarkerSize.js"],"names":["UnconnectedMarkerSize","props","context","type","container","marker","sizesrc","Array","isArray","size","fullContainer","state","value","constant","fullValue","variable","setType","bind","setValue","setState","updatePlot","updateContainer","inputValue","attr","_","localize","options","label","multiValued","includes","MULTI_VALUED","Component","propTypes","PropTypes","any","func","Field","contextTypes","displayName"],"mappings":"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","sourcesContent":["import Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectToContainer} from 'lib';\nimport RadioBlocks from '../widgets/RadioBlocks';\nimport Numeric from './Numeric';\nimport DataSelector from './DataSelector';\nimport {MULTI_VALUED} from 'lib/constants';\n\nclass UnconnectedMarkerSize extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    let type = null;\n    if (!props.container.marker || (props.container.marker && !props.container.marker.sizesrc)) {\n      type = 'constant';\n    } else if (\n      props.container.marker &&\n      Array.isArray(props.container.marker.size) &&\n      props.fullContainer.marker &&\n      Array.isArray(props.fullContainer.marker.size)\n    ) {\n      type = 'variable';\n    }\n\n    this.state = {\n      type,\n      value: {\n        constant: type === 'constant' ? props.fullValue : '6',\n        variable: type === 'variable' ? props.fullValue : null,\n      },\n    };\n\n    this.setType = this.setType.bind(this);\n    this.setValue = this.setValue.bind(this);\n  }\n\n  setType(type) {\n    this.setState({type: type});\n    this.props.updatePlot(this.state.value[type]);\n    if (type === 'constant') {\n      this.context.updateContainer({['marker.sizesrc']: null});\n    } else {\n      this.context.updateContainer({\n        ['marker.size']: null,\n        ['marker.sizesrc']: null,\n      });\n    }\n  }\n\n  setValue(inputValue) {\n    const {type} = this.state;\n\n    this.setState(\n      type === 'constant' ? {value: {constant: inputValue}} : {value: {variable: inputValue}}\n    );\n    this.props.updatePlot(inputValue);\n  }\n\n  render() {\n    const {attr, fullValue} = this.props;\n    const {localize: _} = this.context;\n    const {type, value} = this.state;\n    const options = [\n      {label: _('Constant'), value: 'constant'},\n      {label: _('Variable'), value: 'variable'},\n    ];\n    const multiValued =\n      this.props.multiValued || (Array.isArray(fullValue) && fullValue.includes(MULTI_VALUED));\n\n    return (\n      <Field {...this.props} multiValued={multiValued} attr={attr}>\n        <RadioBlocks options={options} activeOption={type} onOptionChange={this.setType} />\n        {type === 'constant' ? (\n          <Numeric\n            suppressMultiValuedMessage\n            attr=\"marker.size\"\n            updatePlot={this.setValue}\n            fullValue={value.constant}\n          />\n        ) : multiValued ? null : (\n          <DataSelector suppressMultiValuedMessage attr=\"marker.size\" updatePlot={this.setValue} />\n        )}\n      </Field>\n    );\n  }\n}\n\nUnconnectedMarkerSize.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\n\nUnconnectedMarkerSize.contextTypes = {\n  localize: PropTypes.func,\n  updateContainer: PropTypes.func,\n};\n\nUnconnectedMarkerSize.displayName = 'UnconnectedMarkerSize';\n\nexport default connectToContainer(UnconnectedMarkerSize);\n"],"file":"MarkerSize.js"}