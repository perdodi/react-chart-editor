{"version":3,"sources":["../../../src/components/fields/FilterOperation.js"],"names":["operations","_","inequality","value","label","inrange","exrange","inset","exset","findOperation","operator","op","ops","key","hasOwnProperty","map","o","indexOf","UnconnectedFilterOperation","props","context","localize","state","operation","fullValue","setOperation","bind","setState","updatePlot","backgroundDark","attr","operators","opValue","length","Component","propTypes","PropTypes","any","func","Field","contextTypes","UnconnectedFilterValue","valueMax","setValue","setValueMax","v","container","val","split","trim","defaultValue","label1","val1","Array","isArray","join","string","object","FilterOperation","FilterValue"],"mappings":"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","sourcesContent":["import Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport DropdownWidget from '../widgets/Dropdown';\nimport TextInput from '../widgets/TextInput';\nimport {connectToContainer} from 'lib';\n\nconst operations = _ => ({\n  inequality: [\n    {value: '!=', label: _('Target ≠ Reference')},\n    {value: '<', label: _('Target < Reference')},\n    {value: '<=', label: _('Target ≤ Reference')},\n    {value: '=', label: _('Target = Reference')},\n    {value: '>', label: _('Target > Reference')},\n    {value: '>=', label: _('Target ≥ Reference')},\n  ],\n  inrange: [\n    {value: '[]', label: _('Lower ≤ Target ≤ Upper')},\n    {value: '()', label: _('Lower < Target < Upper')},\n    {value: '[)', label: _('Lower ≤ Target < Upper')},\n    {value: '(]', label: _('Lower < Target ≤ Upper')},\n  ],\n  exrange: [\n    {value: ')(', label: _('Lower ≤ Target ≤ Upper')},\n    {value: '][', label: _('Lower < Target < Upper')},\n    {value: ')[', label: _('Lower ≤ Target < Upper')},\n    {value: '](', label: _('Lower < Target ≤ Upper')},\n  ],\n  inset: [{value: '{}', label: _('Include')}],\n  exset: [{value: '}{', label: _('Exclude')}],\n});\n\nconst findOperation = (operator, _) => {\n  let op = 'inequality';\n  const ops = operations(_);\n  for (const key in ops) {\n    if (ops.hasOwnProperty(key) && ops[key].map(o => o.value).indexOf(operator) !== -1) {\n      op = key;\n      break;\n    }\n  }\n  return op;\n};\n\nclass UnconnectedFilterOperation extends Component {\n  constructor(props, context) {\n    super(props, context);\n    const {localize: _} = context;\n\n    this.state = {\n      operation: findOperation(this.props.fullValue, _),\n      operator: operations(_).inequality[0].value,\n    };\n\n    this.setOperation = this.setOperation.bind(this);\n  }\n\n  setOperation(value) {\n    const {localize: _} = this.context;\n    const operator = operations(_)[value][0].value;\n    this.setState({operation: value, operator: operator});\n    this.props.updatePlot(operator);\n  }\n\n  render() {\n    const {fullValue, updatePlot, backgroundDark, attr} = this.props;\n    const {localize: _} = this.context;\n\n    const operators = [\n      {\n        label: _('Inequality'),\n        value: 'inequality',\n      },\n      {\n        label: _('Include Range'),\n        value: 'inrange',\n      },\n      {\n        label: _('Exclude Range'),\n        value: 'exrange',\n      },\n      {\n        label: _('Include Values'),\n        value: 'inset',\n      },\n      {\n        label: _('Exclude Values'),\n        value: 'exset',\n      },\n    ];\n\n    const opValue = fullValue && fullValue.length > 0 ? fullValue : this.state.operator;\n    return (\n      <div>\n        <Field {...this.props} attr={attr}>\n          <DropdownWidget\n            backgroundDark={backgroundDark}\n            options={operators}\n            value={findOperation(opValue, _)}\n            onChange={this.setOperation}\n            clearable={false}\n          />\n          {this.state.operation === 'inset' || this.state.operation === 'exset' ? null : (\n            <DropdownWidget\n              backgroundDark={backgroundDark}\n              options={operations(_)[this.state.operation]}\n              value={opValue}\n              onChange={updatePlot}\n              clearable={false}\n            />\n          )}\n        </Field>\n      </div>\n    );\n  }\n}\n\nUnconnectedFilterOperation.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\nUnconnectedFilterOperation.contextTypes = {\n  localize: PropTypes.func,\n};\n\nclass UnconnectedFilterValue extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {value: '', valueMax: ''};\n\n    this.setValue = this.setValue.bind(this);\n    this.setValueMax = this.setValueMax.bind(this);\n  }\n\n  setValue(v) {\n    const {localize: _, container} = this.context;\n    const op = findOperation(container.operation, _);\n    this.setState({value: v});\n    let val;\n    val = op === 'inrange' || op === 'exrange' ? [v, this.state.valueMax] : v;\n    if (op === 'inset' || op === 'exset') {\n      val = val.split(',');\n      val = val.map(v => v.trim());\n    }\n    this.props.updatePlot(val);\n  }\n\n  setValueMax(v) {\n    this.setState({valueMax: v});\n    this.props.updatePlot([this.state.value, v]);\n  }\n\n  render() {\n    const {localize: _, container} = this.context;\n\n    const operation = container && container.operation ? container.operation : '=';\n\n    const {fullValue, attr, defaultValue} = this.props;\n    const op = findOperation(operation, _);\n\n    let label1 = _('Reference');\n    if (op === 'inrange' || op === 'exrange') {\n      label1 = _('Lower Bound');\n    } else if (op === 'inset' || op === 'exset') {\n      label1 = _('Values');\n    }\n\n    let val1 = fullValue;\n    if ((op === 'inset' || op === 'exset') && Array.isArray(fullValue)) {\n      val1 = fullValue.join(', ');\n    } else if (Array.isArray(fullValue)) {\n      val1 = fullValue[0];\n    }\n\n    return (\n      <div>\n        <Field {...this.props} label={label1}>\n          <TextInput value={val1} defaultValue={val1} onUpdate={this.setValue} />\n        </Field>\n        {!(op === 'inrange' || op === 'exrange') ? null : (\n          <Field {...this.props} label={_('Upper Bound')} attr={attr}>\n            <TextInput\n              value={Array.isArray(fullValue) ? fullValue[1] : fullValue}\n              defaultValue={defaultValue}\n              onUpdate={this.setValueMax}\n            />\n          </Field>\n        )}\n      </div>\n    );\n  }\n}\n\nUnconnectedFilterValue.propTypes = {\n  defaultValue: PropTypes.string,\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\nUnconnectedFilterValue.contextTypes = {\n  localize: PropTypes.func,\n  container: PropTypes.object,\n};\n\nexport const FilterOperation = connectToContainer(UnconnectedFilterOperation);\nexport const FilterValue = connectToContainer(UnconnectedFilterValue);\n"],"file":"FilterOperation.js"}