{"version":3,"sources":["../../../src/components/fields/UpdateMenuButtons.js"],"names":["UpdateMenuButtons","props","context","state","currentButtonIndex","_","localize","options","fullValue","map","button","index","label","value","setState","renderDropdown","Component","propTypes","attr","PropTypes","string","array","updatePlot","func","contextTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,2FAAMD,KAAN,EAAaC,OAAb;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE;AADT,KAAb;AAF0B;AAK3B;;;;qCAEgB;AAAA;;AACf,UAAMC,CAAC,GAAG,KAAKH,OAAL,CAAaI,QAAvB;AACA,UAAMC,OAAO,GAAG,KAAKN,KAAL,CAAWO,SAAX,CAAqBC,GAArB,CAAyB,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC1D,eAAO;AAACC,UAAAA,KAAK,EAAEP,CAAC,CAAC,QAAD,CAAD,cAAkBM,KAAK,GAAG,CAA1B,CAAR;AAAuCE,UAAAA,KAAK,EAAEF;AAA9C,SAAP;AACD,OAFe,CAAhB;AAGA,aACE,6BAAC,eAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAEN,CAAC,CAAC,QAAD,CAFV;AAGE,QAAA,OAAO,EAAEE,OAHX;AAIE,QAAA,UAAU,EAAE,oBAAAI,KAAK;AAAA,iBAAI,MAAI,CAACG,QAAL,CAAc;AAACV,YAAAA,kBAAkB,EAAEO;AAArB,WAAd,CAAJ;AAAA,SAJnB;AAKE,QAAA,SAAS,EAAE,KALb;AAME,QAAA,SAAS,EAAE,KAAKR,KAAL,CAAWC;AANxB,QADF;AAUD;;;6BAEQ;AACP,aACE,6BAAC,cAAD,QACG,KAAKW,cAAL,EADH,EAEE,6BAAC,iBAAD;AAAY,QAAA,IAAI,oBAAa,KAAKZ,KAAL,CAAWC,kBAAxB,YAAhB;AAAqE,QAAA,YAAY;AAAjF,QAFF,CADF;AAMD;;;;EAhC6BY,gB;;AAmChChB,iBAAiB,CAACiB,SAAlB,GAA8B;AAC5BC,EAAAA,IAAI,EAAEC,mBAAUC,MADY;AAE5BZ,EAAAA,SAAS,EAAEW,mBAAUE,KAFO;AAG5BC,EAAAA,UAAU,EAAEH,mBAAUI;AAHM,CAA9B;AAMAvB,iBAAiB,CAACwB,YAAlB,GAAiC;AAC/BlB,EAAAA,QAAQ,EAAEa,mBAAUI;AADW,CAAjC;;eAIe,6BAAmBvB,iBAAnB,C","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {Dropdown, TextEditor} from '../index';\nimport Field from './Field';\nimport {connectToContainer} from 'lib';\n\nclass UpdateMenuButtons extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      currentButtonIndex: 0,\n    };\n  }\n\n  renderDropdown() {\n    const _ = this.context.localize;\n    const options = this.props.fullValue.map((button, index) => {\n      return {label: _('Button') + ` ${index + 1}`, value: index};\n    });\n    return (\n      <Dropdown\n        attr=\"buttons\"\n        label={_('Button')}\n        options={options}\n        updatePlot={index => this.setState({currentButtonIndex: index})}\n        clearable={false}\n        fullValue={this.state.currentButtonIndex}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <Field>\n        {this.renderDropdown()}\n        <TextEditor attr={`buttons[${this.state.currentButtonIndex}].label`} richTextOnly />\n      </Field>\n    );\n  }\n}\n\nUpdateMenuButtons.propTypes = {\n  attr: PropTypes.string,\n  fullValue: PropTypes.array,\n  updatePlot: PropTypes.func,\n};\n\nUpdateMenuButtons.contextTypes = {\n  localize: PropTypes.func,\n};\n\nexport default connectToContainer(UpdateMenuButtons);\n"],"file":"UpdateMenuButtons.js"}