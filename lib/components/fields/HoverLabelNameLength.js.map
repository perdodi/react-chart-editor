{"version":3,"sources":["../../../src/components/fields/HoverLabelNameLength.js"],"names":["UnconnectedHoverLabelNameLength","props","state","currentOption","getCurrentOption","onOptionChange","bind","fullValue","nextProps","setState","option","updatePlot","_","context","localize","label","value","height","width","Component","propTypes","PropTypes","number","func","Field","contextTypes","displayName","modifyPlotProps","plotProps","container","isVisible","hoverinfo","includes","hovertemplate"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connectToContainer} from 'lib';\nimport Field from './Field';\nimport RadioBlocks from '../widgets/RadioBlocks';\nimport NumericInput from '../widgets/NumericInput';\n\nexport class UnconnectedHoverLabelNameLength extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentOption: this.getCurrentOption(props),\n    };\n    this.onOptionChange = this.onOptionChange.bind(this);\n  }\n\n  getCurrentOption(props) {\n    return props.fullValue > 0 ? 'clip' : props.fullValue === 0 ? 'hide' : 'no-clip';\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.fullValue !== this.props.fullValue) {\n      this.setState({\n        currentOption: this.getCurrentOption(nextProps),\n      });\n    }\n  }\n\n  onOptionChange(option) {\n    if (this.state.currentOption !== 'clip' && option === 'clip') {\n      // this allows us to go back to plotly.js default if we've\n      // clicked away from the 'clip' option.\n      this.props.updatePlot(15); //eslint-disable-line\n      return;\n    }\n    if (option === 'no-clip') {\n      this.props.updatePlot(-1);\n      return;\n    }\n    if (option === 'hide') {\n      this.props.updatePlot(0);\n      return;\n    }\n  }\n\n  render() {\n    const _ = this.context.localize;\n\n    return (\n      <Field {...this.props}>\n        <RadioBlocks\n          activeOption={this.state.currentOption}\n          options={[\n            {label: _('Clip To'), value: 'clip'},\n            {label: _('No Clip'), value: 'no-clip'},\n            {label: _('Hide'), value: 'hide'},\n          ]}\n          onOptionChange={this.onOptionChange}\n        />\n        <div style={{height: '10px', width: '100%'}} />\n        {this.state.currentOption === 'clip' ? (\n          <NumericInput\n            value={this.props.fullValue}\n            onChange={this.props.updatePlot}\n            onUpdate={this.props.updatePlot}\n            units=\"px\"\n          />\n        ) : null}\n      </Field>\n    );\n  }\n}\n\nUnconnectedHoverLabelNameLength.propTypes = {\n  fullValue: PropTypes.number,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\n\nUnconnectedHoverLabelNameLength.contextTypes = {\n  localize: PropTypes.func,\n};\n\nUnconnectedHoverLabelNameLength.displayName = 'UnconnectedHoverLabelNameLength';\n\nexport default connectToContainer(UnconnectedHoverLabelNameLength, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {container} = plotProps;\n    plotProps.isVisible =\n      (container.hoverinfo && container.hoverinfo.includes('name')) ||\n      container.hovertemplate ||\n      container.hovertemplate === ' ';\n  },\n});\n"],"file":"HoverLabelNameLength.js"}