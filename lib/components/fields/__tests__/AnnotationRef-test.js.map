{"version":3,"sources":["../../../../src/components/fields/__tests__/AnnotationRef-test.js"],"names":["LayoutAnnoPanel","PlotlyPanel","describe","render","props","onUpdate","jest","fn","plotly","it","fixtureProps","fixtures","scatter","layout","annotations","text","drop","find","DropdownWidget","options","first","prop","expect","length","toBe","toEqual","label","value","beforeUpdateLayout","ayref","update","mock","calls","yref"],"mappings":"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","sourcesContent":["import {AnnotationRef, AnnotationArrowRef} from '../derived';\nimport DropdownWidget from '../../widgets/Dropdown';\nimport React from 'react';\nimport {PlotlyPanel} from '../../';\nimport {TestEditor, fixtures, plotly, mount} from 'lib/test-utils';\nimport {connectAnnotationToLayout, connectLayoutToPlot} from 'lib';\n\nconst LayoutAnnoPanel = connectLayoutToPlot(connectAnnotationToLayout(PlotlyPanel));\n\ndescribe('<AnnotationRef>', () => {\n  function render(props) {\n    return mount(\n      <TestEditor {...{onUpdate: jest.fn(), ...props, plotly}}>\n        <LayoutAnnoPanel name=\"Layout\" annotationIndex={0}>\n          <AnnotationRef attr=\"yref\" />\n        </LayoutAnnoPanel>\n      </TestEditor>\n    );\n  }\n\n  it('computes axes options for all axes using title and ids as labels', () => {\n    const fixtureProps = fixtures.scatter({\n      layout: {annotations: [{text: 'thor'}]},\n    });\n    const drop = render({...fixtureProps}).find(DropdownWidget);\n\n    const options = drop.first().prop('options');\n    expect(options.length).toBe(3);\n    expect(options[0]).toEqual({label: 'Canvas', value: 'paper'});\n    expect(options[1]).toEqual({label: 'Y 1', value: 'y'});\n    expect(options[2]).toEqual({label: 'Y: yaxis2 title', value: 'y2'});\n  });\n\n  it('sends update for a[x|y]ref attr on [x|y]ref change', () => {\n    const beforeUpdateLayout = jest.fn();\n    const fixtureProps = fixtures.scatter({\n      layout: {annotations: [{text: 'thor', ayref: 'y'}]},\n    });\n    const drop = render({beforeUpdateLayout, ...fixtureProps}).find(DropdownWidget);\n\n    drop.prop('onChange')('y2');\n\n    const {update} = beforeUpdateLayout.mock.calls[0][0];\n    expect(update).toEqual({\n      'annotations[0].ayref': 'y2',\n      'annotations[0].yref': 'y2',\n    });\n  });\n\n  it('does not send update for a[x|y]ref attr on \"paper\" change', () => {\n    const beforeUpdateLayout = jest.fn();\n    const fixtureProps = fixtures.scatter({\n      layout: {annotations: [{text: 'thor', ayref: 'y'}]},\n    });\n    const drop = render({beforeUpdateLayout, ...fixtureProps}).find(DropdownWidget);\n\n    drop.prop('onChange')('paper');\n    const {update} = beforeUpdateLayout.mock.calls[0][0];\n    expect(update).toEqual({\n      'annotations[0].yref': 'paper',\n    });\n  });\n\n  it('does not send update for a[x|y]ref when a[x|y]ref is pixel', () => {\n    const beforeUpdateLayout = jest.fn();\n    const fixtureProps = fixtures.scatter({\n      layout: {annotations: [{text: 'thor', yref: 'y', ayref: 'pixel'}]},\n    });\n    const drop = render({beforeUpdateLayout, ...fixtureProps}).find(DropdownWidget);\n\n    drop.prop('onChange')('y2');\n    const {update} = beforeUpdateLayout.mock.calls[0][0];\n    expect(update).toEqual({\n      'annotations[0].yref': 'y2',\n    });\n  });\n});\n\ndescribe('<AnnotationArrowRef>', () => {\n  function render(props) {\n    return mount(\n      <TestEditor {...{onUpdate: jest.fn(), ...props, plotly}}>\n        <LayoutAnnoPanel name=\"Layout\" annotationIndex={0}>\n          <AnnotationArrowRef attr=\"ayref\" />\n        </LayoutAnnoPanel>\n      </TestEditor>\n    );\n  }\n\n  it('uses current value of axis ref as axes option when [x|y]ref set', () => {\n    const fixtureProps = fixtures.scatter({\n      layout: {annotations: [{text: 'thor', yref: 'y'}]},\n    });\n    const drop = render({...fixtureProps}).find(DropdownWidget);\n\n    const options = drop.first().prop('options');\n    expect(options.length).toBe(2);\n    expect(options[0]).toEqual({label: 'in pixels', value: 'pixel'});\n    expect(options[1]).toEqual({label: 'according to axis', value: 'y'});\n  });\n\n  it('provides all axes options when [x|y]ref set to paper', () => {\n    const fixtureProps = fixtures.scatter({\n      layout: {annotations: [{text: 'thor', yref: 'paper'}]},\n    });\n    const drop = render({...fixtureProps}).find(DropdownWidget);\n\n    const options = drop.first().prop('options');\n    expect(options.length).toBe(3);\n    expect(options[0]).toEqual({label: 'in pixels', value: 'pixel'});\n    expect(options[1]).toEqual({label: 'Y 1', value: 'y'});\n    expect(options[2]).toEqual({label: 'Y: yaxis2 title', value: 'y2'});\n  });\n});\n"],"file":"AnnotationRef-test.js"}