{"version":3,"sources":["../../../../src/components/fields/__tests__/Radio-test.js"],"names":["Trace","PlotlySection","describe","it","wrapper","plotly","fixtures","area","label","value","find","Field","expect","prop","toBe"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,KAAK,GAAG,6BAAmBC,yBAAnB,CAAd;AAEAC,QAAQ,CAAC,SAAD,EAAY,YAAM;AACxBC,EAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC/C,QAAMC,OAAO,GAAG,mBACd,6BAAC,qBAAD;AAAY,MAAA,MAAM,EAAEC;AAApB,OAAgCC,oBAASC,IAAT,EAAhC,GACE,6BAAC,KAAD;AAAO,MAAA,YAAY,EAAE,CAAC,CAAD;AAArB,OACE,6BAAC,cAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,OAAO,EAAE,CACP;AAACC,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OADO,EAEP;AAACD,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAFO;AAHX,MADF,CADF,CADc,EAadC,IAbc,CAaTC,cAbS,CAAhB;AAeAC,IAAAA,MAAM,CAACR,OAAO,CAACS,IAAR,CAAa,QAAb,CAAD,CAAN,CAA+BC,IAA/B,CAAoC,IAApC;AACD,GAjBC,CAAF;AAmBAX,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AACnD,QAAMC,OAAO,GAAG,mBACd,6BAAC,qBAAD;AAAY,MAAA,MAAM,EAAEC;AAApB,OAAgCC,oBAASC,IAAT,EAAhC,GACE,6BAAC,KAAD;AAAO,MAAA,YAAY,EAAE,CAAC,CAAD;AAArB,OACE,6BAAC,cAAD;AACE,MAAA,MAAM,EAAE,KADV;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,OAAO,EAAE,CACP;AAACC,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OADO,EAEP;AAACD,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAFO;AAJX,MADF,CADF,CADc,EAcdC,IAdc,CAcTC,cAdS,CAAhB;AAgBAC,IAAAA,MAAM,CAACR,OAAO,CAACS,IAAR,CAAa,QAAb,CAAD,CAAN,CAA+BC,IAA/B,CAAoC,KAApC;AACD,GAlBC,CAAF;AAmBD,CAvCO,CAAR","sourcesContent":["import React from 'react';\nimport Field from '../Field';\nimport Radio from '../Radio';\nimport {PlotlySection} from '../../containers';\nimport {TestEditor, fixtures, plotly} from 'lib/test-utils';\nimport {connectTraceToPlot} from 'lib';\nimport {mount} from 'enzyme';\n\nconst Trace = connectTraceToPlot(PlotlySection);\n\ndescribe('<Radio>', () => {\n  it('enables <Field> centering by default', () => {\n    const wrapper = mount(\n      <TestEditor plotly={plotly} {...fixtures.area()}>\n        <Trace traceIndexes={[0]}>\n          <Radio\n            label=\"Connect Gaps\"\n            attr=\"connectgaps\"\n            options={[\n              {label: 'Connect', value: true},\n              {label: 'Blank', value: false},\n            ]}\n          />\n        </Trace>\n      </TestEditor>\n    ).find(Field);\n\n    expect(wrapper.prop('center')).toBe(true);\n  });\n\n  it('permits <Field> centering to be disabled', () => {\n    const wrapper = mount(\n      <TestEditor plotly={plotly} {...fixtures.area()}>\n        <Trace traceIndexes={[0]}>\n          <Radio\n            center={false}\n            label=\"Connect Gaps\"\n            attr=\"connectgaps\"\n            options={[\n              {label: 'Connect', value: true},\n              {label: 'Blank', value: false},\n            ]}\n          />\n        </Trace>\n      </TestEditor>\n    ).find(Field);\n\n    expect(wrapper.prop('center')).toBe(false);\n  });\n});\n"],"file":"Radio-test.js"}