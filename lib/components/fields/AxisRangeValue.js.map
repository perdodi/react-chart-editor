{"version":3,"sources":["../../../src/components/fields/AxisRangeValue.js"],"names":["UnconnectedAxisRangeValue","props","fullContainer","type","multiValued","MULTI_VALUED","Component","propTypes","defaultValue","PropTypes","any","fullValue","min","number","max","bool","hideArrows","showSlider","step","object","updatePlot","func","Field"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,yB;;;;;;;;;;;;;6BACF;AACP;AACA,UAAI,KAAKC,KAAL,CAAWC,aAAX,IAA4B,KAAKD,KAAL,CAAWC,aAAX,CAAyBC,IAAzB,KAAkC,MAAlE,EAA0E;AACxE,eAAO,6BAAC,yCAAD,EAA+B,KAAKF,KAApC,CAAP;AACD,OAJM,CAKP;AACA;AACA;AACA;AACA;;;AACA,UAAI,KAAKA,KAAL,CAAWG,WAAX,IAA0B,KAAKH,KAAL,CAAWC,aAAX,CAAyBC,IAAzB,KAAkCE,uBAAhE,EAA8E;AAC5E,eAAO,6BAAC,aAAD,EAAU,KAAKJ,KAAf,CAAP;AACD,OAZM,CAcP;AACA;;;AACA,aAAO,6BAAC,2BAAD,EAAwB,KAAKA,KAA7B,CAAP;AACD;;;;EAlB4CK,gB;;;AAqB/CN,yBAAyB,CAACO,SAA1B;AACEC,EAAAA,YAAY,EAAEC,mBAAUC,GAD1B;AAEEC,EAAAA,SAAS,EAAEF,mBAAUC,GAFvB;AAGEE,EAAAA,GAAG,EAAEH,mBAAUI,MAHjB;AAIEC,EAAAA,GAAG,EAAEL,mBAAUI,MAJjB;AAKET,EAAAA,WAAW,EAAEK,mBAAUM,IALzB;AAMEC,EAAAA,UAAU,EAAEP,mBAAUM,IANxB;AAOEE,EAAAA,UAAU,EAAER,mBAAUM,IAPxB;AAQEG,EAAAA,IAAI,EAAET,mBAAUI,MARlB;AASEX,EAAAA,aAAa,EAAEO,mBAAUU,MAT3B;AAUEC,EAAAA,UAAU,EAAEX,mBAAUY;AAVxB,GAWKC,eAAMf,SAXX;;eAce,6BAAmBP,yBAAnB,C","sourcesContent":["import Field from './Field';\nimport {UnconnectedNumeric} from './Numeric';\nimport {UnconnectedDateTimePicker} from './DateTimePicker';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectToContainer} from 'lib';\nimport Info from './Info';\nimport {MULTI_VALUED} from 'lib/constants';\n\nexport class UnconnectedAxisRangeValue extends Component {\n  render() {\n    // only when all axes have the type date, can we output an UnconnectedDateTimePicker\n    if (this.props.fullContainer && this.props.fullContainer.type === 'date') {\n      return <UnconnectedDateTimePicker {...this.props} />;\n    }\n    // If its multivalued, it can be multivalued for different reasons:\n    // - the range is different, but same type\n    // - the type is different (i.e. date + number axes)\n    // If we're in the case of a mixed axis type (i.e. date + number) case,\n    // There's going to be a this.props.fullContainer.type, but it's going to be MULTIVALUED\n    if (this.props.multiValued && this.props.fullContainer.type === MULTI_VALUED) {\n      return <Info {...this.props} />;\n    }\n\n    // For cases that the range is numeric, but does not have the same number\n    // Or numeric and has the same number\n    return <UnconnectedNumeric {...this.props} />;\n  }\n}\n\nUnconnectedAxisRangeValue.propTypes = {\n  defaultValue: PropTypes.any,\n  fullValue: PropTypes.any,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  multiValued: PropTypes.bool,\n  hideArrows: PropTypes.bool,\n  showSlider: PropTypes.bool,\n  step: PropTypes.number,\n  fullContainer: PropTypes.object,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\n\nexport default connectToContainer(UnconnectedAxisRangeValue);\n"],"file":"AxisRangeValue.js"}