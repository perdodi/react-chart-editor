{"version":3,"sources":["../../../src/components/fields/LineSelectors.js"],"names":["strokeDashes","value","strokeDasharray","strokeShapes","d","computeOptions","strokeData","stroke","map","label","fill","strokeWidth","MULTI_VALUED","COLORS","mutedBlue","LineShapeSelector","props","bind","LineDashSelector","lineColor","concat","LineSelector","context","setLocals","nextProps","nextContext","fullContainer","get","options","Component","propTypes","PropTypes","func","Dropdown","defaultProps","clearable","contextTypes","object"],"mappings":"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","sourcesContent":["import Dropdown from './Dropdown';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport {tooLight} from 'lib';\nimport {COLORS, MULTI_VALUED} from 'lib/constants';\n\nconst strokeDashes = [\n  {value: 'solid', strokeDasharray: ''},\n  {value: 'dot', strokeDasharray: '3px, 3px'},\n  {value: 'dash', strokeDasharray: '9px, 9px'},\n  {value: 'longdash', strokeDasharray: '15px, 15px'},\n  {value: 'dashdot', strokeDasharray: '9px, 3px, 3px, 3px'},\n  {value: 'longdashdot', strokeDasharray: '15px, 6px, 3px, 6px'},\n];\n\nconst strokeShapes = [\n  {d: 'M2,14L14,2', value: 'linear'},\n  {d: 'M2,14C4,4 16,16 18,2', value: 'spline'},\n  {d: 'M2,14H14V2', value: 'hv'},\n  {d: 'M2,14V2H14', value: 'vh'},\n  {d: 'M2,14H8V2H14', value: 'hvh'},\n  {d: 'M2,14V8H14V2', value: 'vhv'},\n];\n\nconst computeOptions = (strokeData, stroke) =>\n  strokeData.map(({value, strokeDasharray, d = 'M0,8h100'}) => ({\n    label: (\n      <svg width=\"100\" height=\"16\">\n        <g>\n          <path\n            d={d}\n            style={{\n              fill: 'none',\n              strokeWidth: '4px',\n              stroke: !stroke || stroke === MULTI_VALUED ? COLORS.mutedBlue : stroke,\n              strokeDasharray,\n            }}\n          />\n        </g>\n      </svg>\n    ),\n    value,\n  }));\n\nexport const LineShapeSelector = props => (\n  <LineSelector {...props} computeOptions={computeOptions.bind(null, strokeShapes)} />\n);\n\nexport const LineDashSelector = props => (\n  <LineSelector\n    {...props}\n    computeOptions={lineColor =>\n      computeOptions(strokeDashes, lineColor).concat([\n        {\n          label: '',\n          value: null,\n        },\n      ])\n    }\n  />\n);\n\nclass LineSelector extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.setLocals(props, context);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    this.setLocals(nextProps, nextContext);\n  }\n\n  setLocals(nextProps, nextContext) {\n    const {fullContainer} = nextContext;\n    const lineColor = nestedProperty(fullContainer, 'line.color').get();\n    if (!this.options || this.lineColor !== lineColor) {\n      this.options = this.props.computeOptions(lineColor);\n      this.lineColor = lineColor;\n    }\n  }\n\n  render() {\n    return (\n      <Dropdown {...this.props} options={this.options} backgroundDark={tooLight(this.lineColor)} />\n    );\n  }\n}\n\nLineSelector.propTypes = {\n  computeOptions: PropTypes.func,\n  ...Dropdown.propTypes,\n};\n\nLineSelector.defaultProps = {\n  clearable: false,\n};\n\nLineSelector.contextTypes = {\n  fullContainer: PropTypes.object,\n};\n"],"file":"LineSelectors.js"}