{"version":3,"sources":["../../../../../src/components/widgets/text_editors/RichText/LinkEditor.js"],"names":["LinkEditor","props","state","position","getUpdatedPosition","originalLinkURL","linkURL","trim","input","focus","nextProps","linkID","setState","setSelectionRange","length","coordinates","x","y","urlValue","onURLChange","ev","key","RETURN_KEY","preventDefault","onClose","ESCAPE_KEY","onInputChange","_","context","localize","onBlur","onFocus","placeholderText","urlText","left","top","target","value","onInputKeyDown","Component","propTypes","PropTypes","string","isRequired","func","shape","number","defaultProps","contextTypes"],"mappings":"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","sourcesContent":["/*\n * The LinkEditor is a simple UI component that floats below a selected link\n * in the RichTextEditor, and lets the user enter a URL.\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {RETURN_KEY, ESCAPE_KEY} from 'lib/constants';\nimport {findDOMNode} from 'react-dom';\n\nclass LinkEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Use cached position to maintain position during times of focus.\n      position: this.getUpdatedPosition(props),\n      originalLinkURL: props.linkURL,\n    };\n  }\n\n  componentDidMount() {\n    // Focus the input field if the URL value is empty\n    if (this.props.linkURL.trim() === '') {\n      findDOMNode(this.input).focus();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {props} = this;\n\n    // Update position if we are editing a new link\n    if (nextProps.linkID !== props.linkID) {\n      this.setState({\n        position: this.getUpdatedPosition(props),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    // Cursor dissappears when component rerenders, to make sure it's present\n    // we're using setSelection range to make it appear at the end of text:\n    // https://github.com/plotly/streambed/issues/9964\n    findDOMNode(this.input).setSelectionRange(this.props.linkURL.length, this.props.linkURL.length);\n  }\n\n  getUpdatedPosition(props) {\n    const {x, y} = props.coordinates;\n\n    return {x, y};\n  }\n\n  onInputChange(urlValue) {\n    const {linkID, onURLChange} = this.props;\n\n    // Call back to parent\n    onURLChange(linkID, urlValue);\n  }\n\n  onInputKeyDown(ev) {\n    /*\n     * `KeyboardEvent.key` enjoys excellent cross-browser support.\n     * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n     */\n    const {key} = ev;\n\n    if (key === RETURN_KEY) {\n      // Save changes\n      ev.preventDefault();\n\n      this.props.onClose(this.props.linkID);\n    }\n\n    if (key === ESCAPE_KEY) {\n      // Cancel changes\n      ev.preventDefault();\n\n      // Restore original URL\n      this.onInputChange(this.state.originalLinkURL);\n\n      this.props.onClose(this.props.linkID);\n    }\n  }\n\n  render() {\n    const {localize: _} = this.context;\n    const {position} = this.state;\n    const {onBlur, onFocus, linkURL} = this.props;\n    const placeholderText = _('Enter Link URL');\n    const urlText = _('URL');\n    // TODO: add close button\n    return (\n      <div className=\"rich-text-editor__link-editor\" style={{left: position.x, top: position.y}}>\n        <span className=\"rich-text-editor__link-editor__label\">{urlText}</span>\n        <input\n          className=\"rich-text-editor__link-editor__input\"\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onChange={ev => this.onInputChange(ev.target.value)}\n          onKeyDown={ev => this.onInputKeyDown(ev)}\n          ref={input => (this.input = input)}\n          value={linkURL}\n          placeholder={placeholderText}\n        />\n      </div>\n    );\n  }\n}\n\nLinkEditor.propTypes = {\n  linkID: PropTypes.string.isRequired,\n  linkURL: PropTypes.string.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onURLChange: PropTypes.func.isRequired,\n\n  coordinates: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n};\n\nLinkEditor.defaultProps = {\n  coordinates: {\n    x: 0,\n    y: 0,\n  },\n};\n\nLinkEditor.contextTypes = {\n  localize: PropTypes.func.isRequired,\n};\n\nexport default LinkEditor;\n"],"file":"LinkEditor.js"}