{"version":3,"sources":["../../../../../src/components/widgets/text_editors/RichText/StyleButton.js"],"names":["StyleButton","props","onToggle","bind","ev","preventDefault","value","active","label","className","Component","propTypes","PropTypes","bool","element","isRequired","func","string"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AAEA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AAHiB;AAIlB;;;;6BAEQC,E,EAAI;AACX;AACAA,MAAAA,EAAE,CAACC,cAAH;AACA,WAAKJ,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWK,KAA/B;AACD;;;6BAEQ;AAAA,wBACwB,KAAKL,KAD7B;AAAA,UACAM,MADA,eACAA,MADA;AAAA,UACQC,KADR,eACQA,KADR;AAAA,UACeF,KADf,eACeA,KADf;AAGP,UAAMG,SAAS,GAAG,yBAChB,+BADgB,2CAEkBH,KAFlB,GAGhB;AACE,iDAAyCC;AAD3C,OAHgB,CAAlB;AAQA,aACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACE;AACE,QAAA,SAAS,EAAEE,SADb;AAEE,QAAA,WAAW,EAAE,KAAKP,QAFpB;AAGE,qBAAU,QAHZ;AAIE,wBAAcK;AAJhB,SAMGC,KANH,CADF,CADF;AAYD;;;;EApCuBE,gB;;AAuC1BV,WAAW,CAACW,SAAZ,GAAwB;AACtBJ,EAAAA,MAAM,EAAEK,mBAAUC,IADI;AAGtB;AACAL,EAAAA,KAAK,EAAEI,mBAAUE,OAAV,CAAkBC,UAJH;AAMtB;AACAb,EAAAA,QAAQ,EAAEU,mBAAUI,IAAV,CAAeD,UAPH;AAStB;AACAT,EAAAA,KAAK,EAAEM,mBAAUK,MAAV,CAAiBF;AAVF,CAAxB;eAaef,W","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass StyleButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggle = this.onToggle.bind(this);\n  }\n\n  onToggle(ev) {\n    // Prevent focus moving from editor to button\n    ev.preventDefault();\n    this.props.onToggle(this.props.value);\n  }\n\n  render() {\n    const {active, label, value} = this.props;\n\n    const className = classnames(\n      'rich-text-editor__styleButton',\n      `rich-text-editor__styleButton__${value}`,\n      {\n        'rich-text-editor__styleButton--active': active,\n      }\n    );\n\n    return (\n      <span className=\"rich-text-editor__styleButton__wrapper\">\n        <span\n          className={className}\n          onMouseDown={this.onToggle}\n          data-role=\"button\"\n          data-pressed={active}\n        >\n          {label}\n        </span>\n      </span>\n    );\n  }\n}\n\nStyleButton.propTypes = {\n  active: PropTypes.bool,\n\n  // A (styled) React element to display as label\n  label: PropTypes.element.isRequired,\n\n  // Callback for clicks\n  onToggle: PropTypes.func.isRequired,\n\n  // The value passed to `onToggle` when clicked\n  value: PropTypes.string.isRequired,\n};\n\nexport default StyleButton;\n"],"file":"StyleButton.js"}