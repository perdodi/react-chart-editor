{"version":3,"sources":["../../../src/components/widgets/TextInput.js"],"names":["TextInput","props","state","value","nextProps","setState","editableClassName","placeholder","onChange","onUpdate","Component","propTypes","defaultValue","PropTypes","any","string","func","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAEF,KAAK,CAACE;AAAd,KAAb;AAHiB;AAIlB;;;;8CAEyBC,S,EAAW;AACnC,UAAIA,SAAS,CAACD,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACxC,aAAKE,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAEC,SAAS,CAACD;AAAlB,SAAd;AACD;AACF;;;6BAEQ;AAAA;;AACP,aACE,6BAAC,qBAAD;AACE,QAAA,SAAS,uBAAgB,KAAKF,KAAL,CAAWK,iBAAX,GAA+B,KAAKL,KAAL,CAAWK,iBAA1C,GAA8D,EAA9E,CADX;AAEE,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAF1B;AAGE,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,KAHnB;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,QAAQ,EAAE,kBAAAA,KAAK,EAAI;AACjB,cAAI,MAAI,CAACF,KAAL,CAAWO,QAAf,EAAyB;AACvB,YAAA,MAAI,CAACP,KAAL,CAAWO,QAAX,CAAoBL,KAApB;AACD;;AACD,UAAA,MAAI,CAACE,QAAL,CAAc;AAACF,YAAAA,KAAK,EAALA;AAAD,WAAd;AACD,SAVH;AAWE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWQ;AAXvB,QADF;AAeD;;;;EA7BoCC,gB;;;AAgCvCV,SAAS,CAACW,SAAV,GAAsB;AACpBC,EAAAA,YAAY,EAAEC,mBAAUC,GADJ;AAEpBR,EAAAA,iBAAiB,EAAEO,mBAAUE,MAFT;AAGpBN,EAAAA,QAAQ,EAAEI,mBAAUG,IAAV,CAAeC,UAHL;AAIpBT,EAAAA,QAAQ,EAAEK,mBAAUG,IAJA;AAKpBT,EAAAA,WAAW,EAAEM,mBAAUE,MALH;AAMpBZ,EAAAA,KAAK,EAAEU,mBAAUC;AANG,CAAtB","sourcesContent":["import EditableText from './EditableText';\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class TextInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {value: props.value};\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      this.setState({value: nextProps.value});\n    }\n  }\n\n  render() {\n    return (\n      <EditableText\n        className={`text-input ${this.props.editableClassName ? this.props.editableClassName : ''}`}\n        placeholder={this.props.placeholder}\n        text={this.state.value}\n        type=\"text\"\n        onChange={value => {\n          if (this.props.onChange) {\n            this.props.onChange(value);\n          }\n          this.setState({value});\n        }}\n        onUpdate={this.props.onUpdate}\n      />\n    );\n  }\n}\n\nTextInput.propTypes = {\n  defaultValue: PropTypes.any,\n  editableClassName: PropTypes.string,\n  onUpdate: PropTypes.func.isRequired,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  value: PropTypes.any,\n};\n"],"file":"TextInput.js"}