{"version":3,"sources":["../../../src/components/widgets/CheckboxGroup.js"],"names":["CheckboxGroup","props","state","options","handleChange","bind","nextProps","setState","i","newOptions","slice","Object","assign","checked","onChange","map","option","checkClass","itemClass","orientation","label","boxClass","className","checkbox__group_horizontal","renderOptions","Component","propTypes","PropTypes","arrayOf","shape","string","isRequired","value","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport {CheckIcon} from 'plotly-icons';\n\nclass CheckboxGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {options: this.props.options};\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({options: nextProps.options});\n  }\n\n  handleChange(i) {\n    var newOptions = this.props.options.slice();\n    newOptions[i] = Object.assign(newOptions[i], {\n      checked: !newOptions[i].checked,\n    });\n    this.props.onChange(newOptions);\n  }\n\n  renderOptions() {\n    return this.state.options.map((option, i) => {\n      const checkClass = classnames(['checkbox__check', 'icon'], {\n        'checkbox__check--checked': option.checked,\n      });\n\n      const itemClass = classnames('checkbox__item', {\n        'checkbox__item--vertical': this.props.orientation === 'vertical',\n        'checkbox__item--horizontal': this.props.orientation === 'horizontal',\n      });\n\n      return (\n        <div key={i} className={itemClass}>\n          <div\n            className={`checkbox__box${option.checked ? ' checkbox__box--checked' : ''}`}\n            onClick={() => this.handleChange(i)}\n          >\n            {option.checked && (\n              <div className={checkClass}>\n                <CheckIcon />\n              </div>\n            )}\n          </div>\n          <div className=\"checkbox__label\" onClick={() => this.handleChange(i)}>\n            {option.label}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const boxClass = classnames('checkbox__group', this.props.className, {\n      checkbox__group_horizontal: this.props.orientation === 'horizontal',\n    });\n\n    return <div className={boxClass}>{this.renderOptions()}</div>;\n  }\n}\n\nCheckboxGroup.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n      checked: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n  orientation: PropTypes.string,\n};\n\nCheckboxGroup.defaultProps = {\n  className: '',\n};\n\nexport default CheckboxGroup;\n"],"file":"CheckboxGroup.js"}