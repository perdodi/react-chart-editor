{"version":3,"sources":["../../../src/components/widgets/ColorscalePicker.js"],"names":["colorscalepickerContainerWidth","Scale","props","state","selectedColorscaleType","initialCategory","showColorscalePicker","onChange","bind","onClick","setState","onColorscaleChange","selected","disableCategorySwitch","description","COLOR_PICKER_CONSTANTS","COLORSCALE_DESCRIPTIONS","colorscaleOptions","COLORSCALE_TYPES","filter","type","map","label","value","_","context","localize","onColorscaleTypeChange","Component","propTypes","PropTypes","func","array","string","bool","contextTypes"],"mappings":"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","sourcesContent":["import ColorscalePicker, {Colorscale, COLOR_PICKER_CONSTANTS} from 'react-colorscales';\nimport Dropdown from './Dropdown';\nimport Info from '../fields/Info';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\n// CAREFUL: needs to be the same value as $colorscalepicker-width in _colorscalepicker.scss\nconst colorscalepickerContainerWidth = 240;\n\nclass Scale extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedColorscaleType: props.initialCategory || 'sequential',\n      showColorscalePicker: false,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      showColorscalePicker: !this.state.showColorscalePicker,\n    });\n  }\n\n  onChange(selectedColorscaleType) {\n    this.setState({selectedColorscaleType});\n  }\n\n  render() {\n    const {onColorscaleChange, selected, disableCategorySwitch} = this.props;\n    const {selectedColorscaleType, showColorscalePicker} = this.state;\n    const description = COLOR_PICKER_CONSTANTS.COLORSCALE_DESCRIPTIONS[selectedColorscaleType];\n    const colorscaleOptions = COLOR_PICKER_CONSTANTS.COLORSCALE_TYPES.filter(\n      type => type !== 'custom'\n    ).map(type => ({\n      label: type + ' scales',\n      value: type,\n    }));\n    const _ = this.context.localize;\n\n    return (\n      <div className=\"customPickerContainer\">\n        <div className=\"customPickerContainer__clickable\">\n          <Colorscale colorscale={selected} onClick={this.onClick} />\n        </div>\n        {showColorscalePicker ? (\n          <div className=\"customPickerContainer__expanded-content\">\n            {disableCategorySwitch ? null : (\n              <Dropdown\n                options={colorscaleOptions}\n                value={selectedColorscaleType}\n                onChange={this.onChange}\n                clearable={false}\n                searchable={false}\n                placeholder={_('Select a Colorscale Type')}\n                className=\"customPickerContainer__category-dropdown\"\n              />\n            )}\n            {description ? (\n              <div className=\"customPickerContainer__palettes\">\n                <ColorscalePicker\n                  onChange={onColorscaleChange}\n                  colorscale={selected}\n                  width={colorscalepickerContainerWidth}\n                  colorscaleType={this.state.selectedColorscaleType}\n                  onColorscaleTypeChange={this.onColorscaleTypeChange}\n                  disableSwatchControls\n                  scaleLength={7}\n                />\n                <Info className=\"customPickerContainer__info\">{description}</Info>\n              </div>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nScale.propTypes = {\n  onColorscaleChange: PropTypes.func,\n  selected: PropTypes.array,\n  label: PropTypes.string,\n  initialCategory: PropTypes.string,\n  disableCategorySwitch: PropTypes.bool,\n};\n\nScale.contextTypes = {\n  localize: PropTypes.func,\n};\n\nexport default Scale;\n"],"file":"ColorscalePicker.js"}