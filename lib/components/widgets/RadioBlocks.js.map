{"version":3,"sources":["../../../src/components/widgets/RadioBlocks.js"],"names":["RadioBlocks","props","state","activeOption","handleChange","bind","renderOption","nextProps","setState","newValue","onOptionChange","optionName","label","value","Icon","icon","defaultActive","optionClass","optionList","options","map","groupClass","alignment","Component","propTypes","PropTypes","arrayOf","shape","oneOfType","string","bool","number","isRequired","node","func","disabled","radioClassName"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass RadioBlocks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {activeOption: this.props.activeOption};\n    this.handleChange = this.handleChange.bind(this);\n    this.renderOption = this.renderOption.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Reset the value to the graph's actual value\n    if (nextProps.activeOption !== this.state.activeOption) {\n      this.setState({\n        activeOption: nextProps.activeOption,\n      });\n    }\n  }\n\n  handleChange(newValue) {\n    this.setState({activeOption: newValue});\n    this.props.onOptionChange(newValue);\n  }\n\n  renderOption(optionName) {\n    const {label, value, icon: Icon} = optionName;\n    const defaultActive = this.state.activeOption === value;\n\n    const optionClass = classnames('radio-block__option', {\n      'radio-block__option--active': defaultActive,\n    });\n\n    return (\n      <div\n        className={optionClass}\n        key={value}\n        checked={defaultActive}\n        onClick={() => this.handleChange(value)}\n      >\n        {Icon ? <Icon className=\"radio-block__icon\" /> : null}\n        {label ? <span>{label}</span> : null}\n      </div>\n    );\n  }\n\n  render() {\n    const optionList = this.props.options.map(this.renderOption);\n\n    const groupClass = classnames('radio-block', 'radio-block__group', {\n      'radio-block__group--center': this.props.alignment === 'center',\n    });\n\n    return <div className={groupClass}>{optionList}</div>;\n  }\n}\n\nRadioBlocks.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number]).isRequired,\n      label: PropTypes.string,\n      icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      disabled: PropTypes.bool,\n    })\n  ),\n  onOptionChange: PropTypes.func.isRequired,\n  activeOption: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number]),\n  radioClassName: PropTypes.string,\n\n  // One of right, left, center\n  alignment: PropTypes.string,\n};\n\nexport default RadioBlocks;\n"],"file":"RadioBlocks.js"}