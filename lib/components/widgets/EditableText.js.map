{"version":3,"sources":["../../../src/components/widgets/EditableText.js"],"names":["ENTER_KEYCODE","EditableText","props","handleFocus","bind","handleChange","handleUpdate","handleKeyPress","handleWheel","getRef","c","_ref","event","target","select","onChange","value","onUpdate","keyCode","which","blur","onWheel","document","activeElement","type","className","text","disable","autoFocus","onKeyDown","placeholder","readOnly","size","Component","propTypes","PropTypes","func","any","oneOfType","string","number","bool","oneOf","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,GAAG,EAAtB,C,CAEA;AACA;;IACMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;AACA,UAAKG,cAAL,GAAsB,MAAKA,cAAL,CAAoBH,IAApB,+BAAtB;AACA,UAAKI,WAAL,GAAmB,MAAKA,WAAL,CAAiBJ,IAAjB,+BAAnB;AACA,UAAKK,MAAL,GAAc,MAAKA,MAAL,CAAYL,IAAZ,+BAAd;AARiB;AASlB;;;;2BAEMM,C,EAAG;AACR,WAAKC,IAAL,GAAYD,CAAZ;AACD,K,CAED;;;;gCACYE,K,EAAO;AACjBA,MAAAA,KAAK,CAACC,MAAN,CAAaC,MAAb;AACD;;;iCAEYF,K,EAAO;AAAA,UACXG,QADW,GACC,KAAKb,KADN,CACXa,QADW;;AAGlB,UAAIA,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACH,KAAK,CAACC,MAAN,CAAaG,KAAd,CAAR;AACD;AACF;;;iCAEYJ,K,EAAO;AAAA,UACXK,QADW,GACC,KAAKf,KADN,CACXe,QADW;;AAGlB,UAAIA,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACL,KAAK,CAACC,MAAN,CAAaG,KAAd,CAAR;AACD;AACF;;;mCAEcJ,K,EAAO;AACpB;AACA,UAAI,CAACA,KAAK,CAACM,OAAN,IAAiBN,KAAK,CAACO,KAAxB,MAAmCnB,aAAvC,EAAsD;AACpD,aAAKW,IAAL,CAAUS,IAAV;AACD;AACF;;;gCAEWR,K,EAAO;AACjB,UAAI,KAAKV,KAAL,CAAWmB,OAAX,IAAsBC,QAAQ,CAACC,aAAT,KAA2B,KAAKZ,IAA1D,EAAgE;AAC9D,aAAKT,KAAL,CAAWmB,OAAX,CAAmBT,KAAnB;AACD;AACF;;;6BAEQ;AAAA,wBAWH,KAAKV,KAXF;AAAA,UAELsB,IAFK,eAELA,IAFK;AAAA,UAGLC,SAHK,eAGLA,SAHK;AAAA,UAILC,IAJK,eAILA,IAJK;AAAA,UAKLC,OALK,eAKLA,OALK;AAAA,UAMLC,SANK,eAMLA,SANK;AAAA,UAOLC,SAPK,eAOLA,SAPK;AAAA,UAQLC,WARK,eAQLA,WARK;AAAA,UASLC,QATK,eASLA,QATK;AAAA,UAULC,IAVK,eAULA,IAVK;AAYP,aACE;AACE,QAAA,GAAG,EAAE,KAAKvB,MADZ;AAEE,QAAA,IAAI,EAAEe,IAFR;AAGE,QAAA,SAAS,EAAEC,SAAS,IAAI,EAH1B;AAIE,QAAA,KAAK,EAAEC,IAJT;AAKE,QAAA,OAAO,EAAE,KAAKvB,WALhB;AAME,QAAA,QAAQ,EAAE,KAAKE,YANjB;AAOE,QAAA,MAAM,EAAE,KAAKC,YAPf;AAQE,QAAA,QAAQ,EAAEqB,OARZ;AASE,QAAA,SAAS,EAAEC,SATb;AAUE,QAAA,UAAU,EAAE,KAAKrB,cAVnB;AAWE,QAAA,SAAS,EAAEsB,SAXb;AAYE,QAAA,OAAO,EAAE,KAAKrB,WAZhB;AAaE,QAAA,WAAW,EAAEsB,WAbf;AAcE,QAAA,QAAQ,EAAEC,QAdZ;AAeE,QAAA,IAAI,EAAEC;AAfR,QADF;AAmBD;;;;EAjFwBC,gB;;AAoF3BhC,YAAY,CAACiC,SAAb,GAAyB;AACvB;AACAnB,EAAAA,QAAQ,EAAEoB,mBAAUC,IAFG;AAIvB;AACAnB,EAAAA,QAAQ,EAAEkB,mBAAUC,IALG;AAOvB;AACAP,EAAAA,SAAS,EAAEM,mBAAUC,IARE;AAUvBf,EAAAA,OAAO,EAAEc,mBAAUC,IAVI;AAWvB;AACAV,EAAAA,IAAI,EAAES,mBAAUE,GAZO;AAcvB;AACAP,EAAAA,WAAW,EAAEK,mBAAUG,SAAV,CAAoB,CAACH,mBAAUI,MAAX,EAAmBJ,mBAAUK,MAA7B,CAApB,CAfU;AAgBvBf,EAAAA,SAAS,EAAEU,mBAAUI,MAhBE;AAiBvBZ,EAAAA,OAAO,EAAEQ,mBAAUM,IAjBI;AAkBvBb,EAAAA,SAAS,EAAEO,mBAAUM,IAlBE;AAmBvBV,EAAAA,QAAQ,EAAEI,mBAAUM,IAnBG;AAoBvBjB,EAAAA,IAAI,EAAEW,mBAAUO,KAAV,CAAgB,CAAC,MAAD,EAAS,UAAT,CAAhB,CApBiB;AAqBvBV,EAAAA,IAAI,EAAEG,mBAAUK;AArBO,CAAzB;AAwBAvC,YAAY,CAAC0C,YAAb,GAA4B;AAC1BZ,EAAAA,QAAQ,EAAE,KADgB;AAE1BP,EAAAA,IAAI,EAAE;AAFoB,CAA5B;eAKevB,Y","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\n\nconst ENTER_KEYCODE = 13;\n\n// A generic component to handle text that can be edited when the user\n// clicks on it.\nclass EditableText extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleWheel = this.handleWheel.bind(this);\n    this.getRef = this.getRef.bind(this);\n  }\n\n  getRef(c) {\n    this._ref = c;\n  }\n\n  // Selects/highlights all of the text in the filename input\n  handleFocus(event) {\n    event.target.select();\n  }\n\n  handleChange(event) {\n    const {onChange} = this.props;\n\n    if (onChange) {\n      onChange(event.target.value);\n    }\n  }\n\n  handleUpdate(event) {\n    const {onUpdate} = this.props;\n\n    if (onUpdate) {\n      onUpdate(event.target.value);\n    }\n  }\n\n  handleKeyPress(event) {\n    // This will force handleUpdate to be called via the input's onBlur\n    if ((event.keyCode || event.which) === ENTER_KEYCODE) {\n      this._ref.blur();\n    }\n  }\n\n  handleWheel(event) {\n    if (this.props.onWheel && document.activeElement === this._ref) {\n      this.props.onWheel(event);\n    }\n  }\n\n  render() {\n    const {\n      type,\n      className,\n      text,\n      disable,\n      autoFocus,\n      onKeyDown,\n      placeholder,\n      readOnly,\n      size,\n    } = this.props;\n    return (\n      <input\n        ref={this.getRef}\n        type={type}\n        className={className || ''}\n        value={text}\n        onFocus={this.handleFocus}\n        onChange={this.handleChange}\n        onBlur={this.handleUpdate}\n        disabled={disable}\n        autoFocus={autoFocus}\n        onKeyPress={this.handleKeyPress}\n        onKeyDown={onKeyDown}\n        onWheel={this.handleWheel}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        size={size}\n      />\n    );\n  }\n}\n\nEditableText.propTypes = {\n  // Called with input value on changes (as the user types)\n  onChange: PropTypes.func,\n\n  // Called with input value on blur (and enter if no onEnter is given)\n  onUpdate: PropTypes.func,\n\n  // Called on input keyDown events\n  onKeyDown: PropTypes.func,\n\n  onWheel: PropTypes.func,\n  // Input value property ...\n  text: PropTypes.any,\n\n  // Input properties\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className: PropTypes.string,\n  disable: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  type: PropTypes.oneOf(['text', 'password']),\n  size: PropTypes.number,\n};\n\nEditableText.defaultProps = {\n  readOnly: false,\n  type: 'text',\n};\n\nexport default EditableText;\n"],"file":"EditableText.js"}