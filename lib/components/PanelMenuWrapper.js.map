{"version":3,"sources":["../../src/components/PanelMenuWrapper.js"],"names":["PanelsWithSidebar","props","opts","computeMenuOptions","firstSidebarGroup","filter","o","panels","state","group","name","panel","setPanel","bind","renderSection","setState","section","i","type","plotly_editor_traits","sidebar_element","key","children","menuPanelOrder","sections","groupLookup","groupIndex","childrenArray","React","Children","toArray","forEach","child","obj","hasOwnProperty","length","push","menuOpts","map","Component","propTypes","PropTypes","node","array","childContextTypes","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {cloneElement, Component} from 'react';\nimport SidebarGroup from './sidebar/SidebarGroup';\nimport {bem} from 'lib';\nimport sortMenu from 'lib/sortMenu';\n\nclass PanelsWithSidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    const opts = this.computeMenuOptions(props);\n    const firstSidebarGroup = opts.filter(o => o.panels)[0];\n\n    this.state = {\n      group: firstSidebarGroup.name,\n      panel: firstSidebarGroup.panels[0],\n    };\n\n    this.setPanel = this.setPanel.bind(this);\n    this.renderSection = this.renderSection.bind(this);\n  }\n\n  setPanel(group, panel) {\n    this.setState({group, panel});\n  }\n\n  getChildContext() {\n    return {\n      setPanel: this.setPanel,\n    };\n  }\n\n  renderSection(section, i) {\n    if (section.type && (section.type.plotly_editor_traits || {}).sidebar_element) {\n      return cloneElement(section, {key: i});\n    }\n    return (\n      <SidebarGroup\n        key={i}\n        selectedGroup={this.state.group}\n        selectedPanel={this.state.panel}\n        group={section.name}\n        panels={section.panels}\n        onChangeGroup={this.setPanel}\n      />\n    );\n  }\n\n  computeMenuOptions(props) {\n    const {children, menuPanelOrder} = props;\n    const sections = [];\n    const groupLookup = {};\n    let groupIndex;\n    const childrenArray = sortMenu(React.Children.toArray(children), menuPanelOrder);\n\n    childrenArray.forEach(child => {\n      if (!child) {\n        return;\n      }\n      const group = child.props.group;\n      const name = child.props.name;\n\n      if (group && name) {\n        let obj;\n        if (groupLookup.hasOwnProperty(group)) {\n          groupIndex = groupLookup[group];\n          obj = sections[groupIndex];\n        } else {\n          groupLookup[group] = sections.length;\n          obj = {name: group, panels: []};\n          sections.push(obj);\n        }\n        obj.panels.push(name);\n      }\n\n      if ((child.type.plotly_editor_traits || {}).sidebar_element) {\n        sections.push(child);\n      }\n    });\n\n    return sections;\n  }\n\n  render() {\n    const menuOpts = this.computeMenuOptions(this.props);\n\n    return (\n      <div className={bem('editor_controls', 'wrapper')}>\n        <div className={bem('sidebar')}>{menuOpts.map(this.renderSection)}</div>\n        {React.Children.map(this.props.children, (child, i) =>\n          child === null ||\n          this.state.group !== child.props.group ||\n          this.state.panel !== child.props.name\n            ? null\n            : cloneElement(child, {key: i})\n        )}\n      </div>\n    );\n  }\n}\n\nPanelsWithSidebar.propTypes = {\n  children: PropTypes.node,\n  menuPanelOrder: PropTypes.array,\n};\n\nPanelsWithSidebar.childContextTypes = {\n  setPanel: PropTypes.func,\n};\n\nexport default PanelsWithSidebar;\n"],"file":"PanelMenuWrapper.js"}