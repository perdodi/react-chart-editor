{"version":3,"sources":["../../src/__tests__/syntax-test.js"],"names":["BLACK_LIST","REGEXS","map","token","RegExp","describe","files","glob","sync","forEach","file","it","code","fs","readFileSync","encoding","split","line","expect","some","re","test","toBe"],"mappings":";;AACA;;AACA;;;;AAFA;AAIA,IAAMA,UAAU,GAAG,CAAC,WAAD,EAAc,KAAd,EAAqB,WAArB,EAAkC,KAAlC,EAAyC,WAAzC,EAAsD,iBAAtD,CAAnB;AACA,IAAMC,MAAM,GAAGD,UAAU,CAACE,GAAX,CAAe,UAAAC,KAAK;AAAA,SAAI,IAAIC,MAAJ,gBAAmBD,KAAnB,WAAJ;AAAA,CAApB,CAAf;AAEAE,QAAQ,CAAC,4BAAD,EAA+B,YAAM;AAC3CA,EAAAA,QAAQ,mBAAYL,UAAZ,+BAAkD,YAAM;AAC9D,QAAMM,KAAK,GAAGC,cAAKC,IAAL,CAAU,mBAAV,CAAd;;AACAF,IAAAA,KAAK,CAACG,OAAN,CAAc,UAAAC,IAAI;AAAA,aAChBC,EAAE,kBAAWD,IAAX,uBAAmC,YAAM;AACzC,YAAME,IAAI,GAAGC,YAAGC,YAAH,CAAgBJ,IAAhB,EAAsB;AAACK,UAAAA,QAAQ,EAAE;AAAX,SAAtB,CAAb;;AACAH,QAAAA,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBP,OAAjB,CAAyB,UAAAQ,IAAI,EAAI;AAC/BC,UAAAA,MAAM,CAACjB,MAAM,CAACkB,IAAP,CAAY,UAAAC,EAAE;AAAA,mBAAIA,EAAE,CAACC,IAAH,CAAQJ,IAAR,CAAJ;AAAA,WAAd,CAAD,CAAN,CAAyCK,IAAzC,CAA8C,KAA9C;AACD,SAFD;AAGD,OALC,CADc;AAAA,KAAlB;AAQD,GAVO,CAAR;AAWD,CAZO,CAAR","sourcesContent":["// check for for focus and exclude jasmine blocks\nimport fs from 'fs';\nimport glob from 'glob';\n\nconst BLACK_LIST = ['fdescribe', 'fit', 'xdescribe', 'xit', 'it\\\\.only', 'describe\\\\.only'];\nconst REGEXS = BLACK_LIST.map(token => new RegExp(`^\\\\s*${token}\\\\(.*`));\n\ndescribe('Syntax and test validation', () => {\n  describe(`ensures ${BLACK_LIST} is not present in tests`, () => {\n    const files = glob.sync('**/__tests__/*.js');\n    files.forEach(file =>\n      it(`checks ${file} for test checks`, () => {\n        const code = fs.readFileSync(file, {encoding: 'utf-8'});\n        code.split('\\n').forEach(line => {\n          expect(REGEXS.some(re => re.test(line))).toBe(false);\n        });\n      })\n    );\n  });\n});\n"],"file":"syntax-test.js"}